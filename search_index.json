[["index.html", "CancerMHBs 1 Figure 1 1.1 Cancer MHB Calling 1.2 (C-E). MHB annotation 1.3 (F). MHB Map 1.4 (G). Cancer MHBs vs Normal MHBs 1.5 (H). Correlation of methylation on the same MHB 1.6 (I). Enrichment of MHBs in genomic features.", " CancerMHBs Zhiqiang Zhang,Yuyang Hong, Hai Fang, Jiantao Shi 2024-06-18 1 Figure 1 Figure 1. Identification of DNA methylation haplotype blocks (MHBs) in cancers. (A) Cancer types included in this study. Abbreviations and numbers of sequenced WGBS samples were indicated. (B) Visualization of an example MHB in colon cancer (chrX: 47,510,119 − 47,510,733). The upper panel shows the DNA methylation status of the individual fragment, in which black and white represent methylated and unmethylated CpG sites, respectively. Statistical significance was assessed using a binomial test. N11 indicates the number of mHaps that are methylated at both CpG sites; the numbers of mHaps of the other three types are also shown. The middle panel shows mean signed linkage disequilibrium R2 scores of between two adjacent CpGs. The lower panel shows signed linkage disequilibrium R2 scores between pairs of covered CpG sites. (C) Number of MHBs identified in each cancer type. (D) The length distribution of the union of MHBs from all cancer types. (E) A Pie chart illustrates the proportion of MHBs annotated to promoter, exonic, intronic, and intergenic regions. (F) Assignment of MHBs into 16 non-overlapping clusters. The number of regions in each cluster was also shown. The MHBs derived from house data, our previous fresh frozen samples data (GSE230193) and other public tumor data were also exhibited. (G) A heatmap shows the enrichment of cancer-specific MHB clusters in matched normal tissue types. Enrichment tests was performed using the R package LOLA, with the union of MHBs from all tissues as the test background. The resulting adjusted P-values for significant enrichment (FDR &lt; 0.05) were ranked across all tissue types. The black rectangle highlights the top one. Nonsignificant (FDR &gt;0.05) results are shown in grey. (H) Correlation of mean methylation for CpGs on the same MHB in TCGA datasets. In-house cancer MHBs are shown in red and general MHBs that were previously reported [17] were shown in blue. (I) Enrichment of MHBs in regions of genomic features. Enrichment scores were defined as the ratio of observed and random overlapping counts between MHBs and genomic regions. Significance was assessed by permutation test (1000 times). ***, P &lt; 0.001. 1.1 Cancer MHB Calling The DNA Methylation haplotype blocks (MHBs) were identified by mHapSuite # ==========shell command ========== # Here, we showed a demo on how to call MHB from breast cancers using mHapSuite. # The other Cancer MHBs Calling are also as follows. # The input data is the breast cancer DNA methylation haplotype (mHap) file with corresponding CpG annotations (1-based). java -jar mHapSuite-1.0-jar-with-dependencies.jar MHBDiscovery \\ -mhapPath BRCA.mhap.gz \\ -cpgPath hg19_CpG.gz \\ -tag MHB_BRCA \\ -outputDir MHB/tumor 1.2 (C-E). MHB annotation # load packages library(tidyverse) library(stringr) library(data.table) library(ggplot2) library(pheatmap) # Create result folder Res_Folder &lt;- paste0(&quot;Data/Figures/Fig1/&quot;) if (!dir.exists(Res_Folder)) dir.create(Res_Folder) # 1.Summary the Number of MHBs of 11 common cancer # Read MHB cancer_type = list.files(&quot;Data/Processed_data/MHB/tumor/&quot;,pattern=&quot;.bed&quot;) counts &lt;- lapply(cancer_type,function(x) { fread(paste0(&quot;Data/Processed_data/MHB/tumor/&quot;,x),sep=&quot;\\t&quot;) %&gt;% nrow()}) names(counts) &lt;- cancer_type %&gt;% str_split_i(&quot;[_.]&quot;,i=2) Ncount=as.data.frame(do.call(rbind,counts)) %&gt;% rownames_to_column(var=&quot;Type&quot;) pdf(file=&quot;Data/Figures/Fig1/Fig1.C.pdf&quot;,width=5.5,height=4) p&lt;-ggplot(Ncount,aes(Type,V1)) + geom_bar(stat=&quot;identity&quot;,fill=&quot;steelblue&quot;,width=0.8)+ scale_y_continuous(expand=c(0,0),limits=c(0,30000))+ labs(y=&quot;The Number of Cancer-type MHBs&quot;)+ theme_bw()+ theme(panel.grid= element_blank(), panel.background=element_blank(), panel.border=element_blank(), axis.line=element_line(color=&quot;black&quot;), axis.title.x=element_blank(), axis.text.x = element_text(color=&quot;black&quot;,size=10, angle=45,vjust=1,hjust=1), axis.text.y = element_text(color=&quot;black&quot;,size=10), axis.ticks = element_line(color=&quot;black&quot;), axis.ticks.length = unit(5, &quot;pt&quot;) )+ geom_text(aes(label=V1), vjust=-0.3, size=3.5,color=&quot;black&quot;) print(p) dev.off() # 2.Genomic annotation of cancer MHBs library(ChIPseeker) library(TxDb.Hsapiens.UCSC.hg19.knownGene) txdb &lt;- TxDb.Hsapiens.UCSC.hg19.knownGene mhb_clusters_Anno &lt;- annotatePeak(&quot;Data/Processed_data/MHB/MHB_11_cancers_clusters.bed&quot;, tssRegion=c(-2000, 2000), TxDb=txdb, annoDb=&quot;org.Hs.eg.db&quot;) pdf(&quot;Data/Figures/Fig1/Fig1.E.pdf&quot;,width=8,height=8) p&lt;- plotAnnoPie(mhb_clusters_Anno) print(p) dev.off() # 3.Summary the length of merged cancer MHBs MHB_length = as.data.frame(mhb_clusters_Anno)$width pdf(&quot;Data/Figures/Fig1/Fig1.D.pdf&quot;,width=5,height=5) p&lt;- hist(MHB_length, main =&quot;&quot;, xlab=&quot;The Length of MHB (bp)&quot;, ylab=&quot;Frequency&quot;,col=&quot;steelblue&quot;, ylim = c(0,60000), breaks=seq(0,2500,100)) text(1500,40000, paste0(&quot;mean = &quot;,round(mean(MHB_length),0),&quot; bp&quot;)) text(1500,45000, paste0(&quot;median = &quot;,round(median(MHB_length),0),&quot; bp&quot;)) print(p) dev.off() 1.1: Fig1.C-E 1.3 (F). MHB Map # Tumor MHB data (In house data + Public data) # We merge the cancer MHB from 11 common tumor into 81,567 regions, and then we divided the cancer MHBs # into cancer type-specific MHBs and common shared MHBs by the appearance in one or more tissue types. # the cancer mhbs were also validated through public data. mhb_CT_matrix = read.table(&quot;Data/Processed_data/MHB/MHB_11_cancers_CT_matrix.txt&quot;,sep = &quot;\\t&quot;,header=T) names(mhb_CT_matrix) = gsub(&quot;MHB_&quot;,&quot;&quot;,names(mhb_CT_matrix)) mhb_CT_matrix = mhb_CT_matrix[c(1:6,11:31,8:10,7)] mhb_CT_matrix=mhb_CT_matrix[order(mhb_CT_matrix$num,mhb_CT_matrix$cluster,decreasing=F),] # transform 1-0 matrix mhb_CT_matrix[-c(1:6)][mhb_CT_matrix[-c(1:6)]&gt;=1]&lt;-1 rownames(mhb_CT_matrix) = paste(mhb_CT_matrix$chr,mhb_CT_matrix$start,mhb_CT_matrix$end,sep=&quot;_&quot;) # Ordering function order_f &lt;-function(x,Tag,cluster){ num = table(x[Tag][x$cluster==paste0(cluster,&quot;_cluster&quot;),]) x[Tag][x$cluster==paste0(cluster,&quot;_cluster&quot;),]&lt;-c(rep(0,num[&quot;0&quot;]),rep(1,num[&quot;1&quot;])) data = x return(data) } # Public GEO data : CRC_P_RRBS ESCC_P LIHC_P mhb_CT_matrix = order_f(mhb_CT_matrix,&quot;CRC_P&quot;,&quot;COAD&quot;) mhb_CT_matrix = order_f(mhb_CT_matrix,&quot;ESCC_P&quot;,&quot;ESCA&quot;) mhb_CT_matrix = order_f(mhb_CT_matrix,&quot;LIHC_P&quot;,&quot;LIHC&quot;) # Our previous data : Cancer of Unknown Primary data (CUP) cup&lt;-c(&quot;BRCA&quot;,&quot;CESC&quot;,&quot;COADREAD&quot;,&quot;ESCA&quot;,&quot;HNSC&quot;,&quot;LIHC&quot;,&quot;LUSCLUAD&quot;,&quot;OV&quot;,&quot;STAD&quot;,&quot;THCA&quot;) for (tag in cup) { if (tag == &quot;COADREAD&quot; ) { flag &lt;- &quot;COAD&quot; }else if (tag == &quot;LUSCLUAD&quot;) { flag &lt;- &quot;NSCLC&quot; }else{ flag &lt;- tag } mhb_CT_matrix = order_f(mhb_CT_matrix,paste0(&quot;CUP_&quot;,tag),flag) } # MHB Map plot annotation_row = mhb_CT_matrix[c(6)] annotation_col = data.frame(Assay = factor(c(rep(&quot;WGBS&quot;,11),rep(&quot;RRBS&quot;,11),rep(&quot;WGBS&quot;,3))), Tissue_Type = factor(c(rep(&quot;Tumor&quot;,24),rep(&quot;Normal&quot;,1)))) rownames(annotation_col) = names(mhb_CT_matrix[-c(1:6)]) annotation_colors = list(Assay=c(WGBS=&quot;#4DAF4A&quot;,RRBS=&quot;#984EA3&quot;), Tissue_Type=c(Tumor=&quot;#E41A1C&quot;,Normal=&quot;#377EB8&quot;), cluster=c(BRCA_cluster=&quot;#A6CEE3&quot;,CESC_cluster=&quot;#1F78B4&quot;, COAD_cluster=&quot;#B2DF8A&quot;,ESCA_cluster=&quot;#FDBF6F&quot;, HNSC_cluster=&quot;#33A02C&quot;,LIHC_cluster=&quot;#FB9A99&quot;, NSCLC_cluster=&quot;#E31A1C&quot;,OV_cluster=&quot;#FF7F00&quot;, PACA_cluster=&quot;#CAB2D6&quot;, STAD_cluster=&quot;#6A3D9A&quot;, THCA_cluster=&quot;#B15928&quot;,cluster12=&quot;#1B9E77&quot;, cluster13=&quot;#D95F02&quot;,cluster14=&quot;#7570B3&quot;, cluster15=&quot;#E7298A&quot;,cluster16=&quot;#66A61E&quot;)) data = as.data.frame(mhb_CT_matrix[-c(1:6)]) tiff(filename = &quot;Data/Figures/Fig1/Fig1.F.tif&quot;,width = 7800, height = 6000, compression = &quot;lzw&quot;, bg = &quot;white&quot;,res=1200) ## type = &quot;cairo&quot; p &lt;- pheatmap(data,show_rownames=F,cluster_cols= F,cluster_row=F, annotation_legend=T,legend=T, annotation_row=annotation_row,annotation_col=annotation_col, annotation_colors=annotation_colors, annotation_names_row=T,border = F,border_color = F, gaps_col = c(11,21,24),scale = &quot;none&quot;,angle_col = 45, color = colorRampPalette(colors = c(&quot;white&quot;,&quot;red&quot;))(1000) ) print(p) dev.off() 1.2: Fig1.F 1.4 (G). Cancer MHBs vs Normal MHBs # we show the region enrichment of cancer MHBs in normal MHBs with LOLA R packages. # do LOLA; using the union of 11 common cancer MHBs as the background. library(&quot;LOLA&quot;) library(GenomicRanges) library(reshape2) mhb_T=&quot;Data/Processed_data/MHB/mhb_clusters/&quot; background=&quot;Data/Processed_data/MHB/MHB_11_cancers_clusters.bed&quot; files = list.files(mhb_T) locResults = list() for (i in files){ # Read input mhb=readBed(paste0(mhb_T,i)) # Universe_Sets Background universe_set=readBed(background) # Overlapped states=loadRegionDB(&quot;Data/Processed_data/MHB/LOLA_DB&quot;) # Runing LOLA locResults[[i]] = runLOLA(mhb, universe_set, states, cores=10) } data &lt;- lapply(names(locResults),function(x){ locResults[[x]][,c(&quot;filename&quot;,&quot;pValueLog&quot;)] %&gt;% mutate(Type=x) }) data = as.data.frame(do.call(rbind,data)) dta = dcast(data,Type~filename,value.var = &quot;pValueLog&quot;) rownames(dta) = dta$Type;dta$Type=NULL dta = dta[c(&quot;BRCA_cluster.bed&quot;,&quot;CESC_cluster.bed&quot;,&quot;COAD_cluster.bed&quot;, &quot;ESCA_cluster.bed&quot;,&quot;HNSC_cluster.bed&quot;,&quot;LIHC_cluster.bed&quot;, &quot;NSCLC_cluster.bed&quot;,&quot;OV_cluster.bed&quot;,&quot;PACA_cluster.bed&quot;, &quot;STAD_cluster.bed&quot;, &quot;THCA_cluster.bed&quot;,&quot;cluster12&quot;,&quot;cluster13&quot;, &quot;cluster14&quot;,&quot;cluster15&quot;,&quot;cluster16&quot;),] # filter P value &lt; 0.05 dta[dta&lt;1.30103]&lt;-NA rank_t = function(x) { m = rank(array(-x),na.last=&quot;keep&quot;,ties.method = &quot;min&quot;) return(m) } data_rank= as.data.frame(t(apply(dta,1,rank_t))) names(data_rank) = names(dta) tag&lt;-names(data_rank)[-c(9)] data_rank&lt;- data_rank[c(tag,&quot;MHB_placenta_normal.bed&quot;)] pdf(file=&quot;Data/Figures/Fig1/Fig1.G.pdf&quot;,width=5,height=5.5) p&lt;- pheatmap(data_rank, main=&quot;MHBs clusters vs Normal MHB&quot;, show_colnames=T,show_rownames=T, cluster_rows=F,cluster_cols=F, scale=&quot;none&quot;,angle_col=45, color=colorRampPalette(colors = c(&quot;firebrick&quot;,&quot;white&quot;,&quot;darkblue&quot;))(1000) ) print(p) dev.off() 1.3: Fig1.G 1.5 (H). Correlation of methylation on the same MHB # Calculate the correlation of MHB from NG and in house cancer-specific MHB library(regioneR) load(&quot;RnBeads_450K_hg19_Probes_GR.RData&quot;) RnBeads_450K_hg19_GR = RnBeads_450K_hg19_GR[RnBeads_450K_hg19_GR$QC] sourceFolder = &quot;/KnowledgeBase/Firehose_Methylation/raw_RData/&quot; # CpG correlation ArrayIMCorrelation &lt;-function(MM,IntervalGR,cpgGR,Tag){ # check seqlevels if(length(intersect(seqlevels(IntervalGR), seqlevels(cpgGR))) == 0) stop(&quot;No shared seqlevels found.\\n&quot;) # only keep CpGs that locate in intervals Idx1 = countOverlaps(cpgGR, IntervalGR, type = &quot;any&quot;, ignore.strand = TRUE) &gt; 0 Idx2 = names(cpgGR) %in% rownames(MM) Idx = Idx1 &amp; Idx2 if(sum(Idx) == 0) stop(&quot;No CpGs found in pre-defined regions.\\n&quot;) cpgGR = cpgGR[Idx, ] # keep shared CpGs cNames = intersect(rownames(MM), names(cpgGR)) cpgGR = cpgGR[cNames] MM = MM[cNames, ] # Only select the tumor samples MM = MM[,!grepl(&quot;11&quot;,substr(colnames(MM),14,15))] # Sample-by-sample processing to control memory footprint mergedM = matrix(NA, length(IntervalGR), 1) x = findOverlaps(cpgGR, IntervalGR, type = &quot;any&quot;, ignore.strand = TRUE) cM = list() for (i in unique(subjectHits(x)) ){ a = which(subjectHits(x) == i) tag = paste0(&quot;S&quot;,i) if (length(a)&lt;2){ cM[[tag]] = NA }else if (nrow(na.omit(MM[a,]))&lt;2) { cM[[tag]] = NA }else { b = as.vector(cor(t(na.omit(MM[a,])))) cM[[tag]] = median(b[b!=1]) } } aT = do.call(rbind,cM) aID = as.character(gsub(&quot;S&quot;,&quot;&quot;,rownames(aT))) aMM = as.matrix(aT[,1]) mergedM[as.integer(aID), ] = aMM colnames(mergedM) = Tag return(mergedM) } # general MHBs from Guo.et al.2017 (Nature genetics:NG) NG_MHB = toGRanges(&quot;NG_MHB.bed&quot;) vFiles = list.files(sourceFolder) Ns = length(vFiles) ngList = list() for(i in 1:Ns){ Tag = gsub(&quot;.RData&quot;, &quot;&quot;, vFiles[i]) cat(&quot;Processing&quot;, Tag, &quot;\\n&quot;) fileIn = paste0(sourceFolder, &quot;/&quot;, vFiles[i]) load(fileIn) assign(&quot;MM&quot;, get(Tag)) rm(list = Tag) ngList[[i]] = ArrayIMCorrelation(MM, NG_MHB, RnBeads_450K_hg19_GR,Tag) } names(ngList) = gsub(&quot;.RData&quot;, &quot;&quot;, vFiles) # Intra-MHB correlation NG_List = do.call(cbind,ngList) mcols(NG_MHB) = NG_List # Cancer MHBs from in house data path=&quot;Data/Processed_data/MHB/tumor&quot; files = list.files(path) cTList=list() for (cT in files ){ # Read Cancer MHB Cancer_MHB = toGRanges(paste0(path,&quot;/&quot;,cT)) Type = gsub(&quot;MHB_&quot;,&quot;&quot;,gsub(&quot;.bed&quot;,&quot;&quot;,cT)) Ns = length(vFiles) cList = list() for(i in 1:Ns){ Tag = gsub(&quot;.RData&quot;, &quot;&quot;, vFiles[i]) cat(&quot;Processing&quot;, Tag, &quot;\\n&quot;) fileIn = paste0(sourceFolder, &quot;/&quot;, vFiles[i]) load(fileIn) assign(&quot;MM&quot;, get(Tag)) rm(list = Tag) cList[[i]] = ArrayIMCorrelation(MM, Cancer_MHB, RnBeads_450K_hg19_GR,Tag) } names(cList) = gsub(&quot;.RData&quot;, &quot;&quot;, vFiles) mcols(Cancer_MHB)= do.call(cbind,cList) cTList[[Type]] = Cancer_MHB } names(cTList) = gsub(&quot;MHB_&quot;,&quot;&quot;,gsub(&quot;.bed&quot;,&quot;&quot;,files)) # plot intra-MHB correlation between general MHBs and in house MHBs vFiles=names(cTList) data = list() for (i in vFiles){ if ( i==&quot;BRCA&quot; ) { tag = i }else if(i==&quot;CESC&quot;){ tag = i }else if(i==&quot;COAD&quot;) { tag = c(&quot;COAD&quot;,&quot;COADREAD&quot;,&quot;READ&quot;) }else if(i==&quot;ESCA&quot;){ tag = c(&quot;ESCA&quot;,&quot;STES&quot;) }else if(i==&quot;HNSC&quot;){ tag = &quot;HNSC&quot; }else if( i==&quot;LIHC&quot;){ tag = &quot;LIHC&quot; }else if(i==&quot;NSCLC&quot;){ tag = c(&quot;LUAD&quot;,&quot;LUSC&quot;) }else if ( i==&quot;OV&quot;){ tag = &quot;OV&quot; }else if (i==&quot;PACA&quot;){ tag = &quot;PAAD&quot; }else if(i==&quot;STAD&quot;){ tag = c(&quot;STAD&quot;,&quot;STES&quot;) }else if( i==&quot;THCA&quot;) { tag = &quot;THCA&quot; } for (j in tag){ # Cancer-specific MHB x = na.omit(mcols(cTList[[i]])[j]) x$Group = &quot;CT_MHB&quot; # NG MHB y= na.omit(mcols(NG_MHB)[j]) y$Group = &quot;NG_MHB&quot; mat = as.data.frame(rbind(x,y)) data[[j]] = mat # PLOT ECDF pdf(file=paste0(&quot;PLOT/TCGA_&quot;,i,&quot;_&quot;,j,&quot;_Correlation_ECDF.pdf&quot;),width=5,height=5) p&lt;-ggplot(mat, aes(get(j))) + stat_ecdf(aes(colour = Group),geom = &quot;step&quot;,size=0.8)+ labs(title=j, y = &quot;Frequency&quot;, x=&quot;Pearson&#39;s Correlation Coefficience&quot;)+ theme_base() + theme(plot.title = element_text(hjust=0.5), legend.position = c(0.25,0.85), legend.title =element_blank(), axis.line=element_line(color=&quot;black&quot;), axis.text.x = element_text(color=&quot;black&quot;,size=10), axis.text.y = element_text(color=&quot;black&quot;,size=10), axis.ticks.length = unit(5, &quot;pt&quot;), axis.ticks = element_line(color=&quot;black&quot;)) + scale_colour_brewer(palette = &quot;Set1&quot;) print(p) dev.off() } } # Merged data, showing in boxplot for (i in names(data)){ names(data[[i]]) &lt;- c(&quot;r&quot;,&quot;Group&quot;) } MHB_Cor = as.data.frame(do.call(rbind,data)) MHB_Cor$Tissue = sapply(strsplit(rownames(MHB_Cor),&quot;\\\\.&quot;),function(x) x[1]) MHB_Cor$Group = factor(MHB_Cor$Group,levels=c(&quot;NG_MHB&quot;,&quot;CT_MHB&quot;)) pdf(&quot;Data/Figures/Fig1/Fig1.H.pdf&quot;,width=4, height=5) p&lt;-ggplot(MHB_Cor, aes(x=r, y=Tissue, fill= Group)) + geom_boxplot(outlier.shape = NA) + labs(x=&quot;Pearson&#39;s Correlation Coefficience (r)&quot;) + scale_x_continuous(position = &quot;top&quot;) + scale_fill_manual(values=c(&quot;#377EB8&quot;,&quot;#E41A1C&quot;)) + scale_y_discrete(limits=rev) + theme_bw() + theme(panel.background = element_blank(), panel.border = element_blank(), panel.grid = element_blank(), axis.line=element_line(color=&quot;black&quot;), axis.title.y=element_blank(), axis.text.x = element_text(color=&quot;black&quot;,size=10), axis.text.y = element_text(color=&quot;black&quot;,size=10), axis.ticks = element_line(color=&quot;black&quot;), axis.ticks.length = unit(5, &quot;pt&quot;), legend.position=&quot;bottom&quot;) print(p) dev.off() 1.4: Fig1.H 1.6 (I). Enrichment of MHBs in genomic features. # ==============shell command ============= # We showed the enrichment of MHBs in genomic features (CGIs, promoters, enhancers and et al.) by using permutation test. CGI=&quot;hg19_cpgIsland.bed&quot; shelf=&quot;/genome/CpG/hg19/hg19_cpg_shlves.bed&quot; shore=&quot;/genome/CpG/hg19/hg19_cpg_shores.bed&quot; LAD=&quot;/genome/hg19/laminB1Lads.bed&quot; FANTOM5_enhancer=&quot;/genome/hg19/enhancer/FANTOM5/FANTOM5_enhancer.bed&quot; UCSC_promoter=&quot;/genome/hg19/tss/UCSC_promoters_hg19.bed&quot; TAD_IMR90=&quot;/genome/hg19//TAD/TAD_IMR90.bed&quot; TAD_HMEC=&quot;/genome/hg19//TAD/TAD_HMEC.bed&quot; TAD_A549=&quot;/genome/hg19//TAD/TAD_A549.bed&quot; UCE=&quot;/genome/hg19/UCE/Ultraconserved_elements_hg19.bed&quot; # MHB MHB=&quot;Data/Processed_data/MHB/MHB_11_cancers.bed&quot; # do Permutation for i in $CGI $shelf $shore $LAD $FANTOM5_enhancer $UCSC_promoter $TAD_IMR90 $TAD_HMEC $TAD_A549 $UCE do tag=${i##*/} Rscript /sibcb2/bioinformatics2/zhangzhiqiang/script/DNAme_pipeline/ChIApet_enrichment.R \\ --forward ${i} \\ --reverse ${i} \\ --genome /sibcb2/bioinformatics2/zhangzhiqiang/genome/hg19/hg19.chrom.sizes \\ --testBED ${MHB} \\ --nTimes 1000 \\ --tmp ./ \\ --outFile res/${tag%.*}_MHB_enrichment.txt done # plot data = data.frame(CGI=20.752427184466,shelf=0.973238180196253, shore=3.43911719939117,LAD=0.92967542503864, FANTOM5_enhancer=6.38268792710706,UCSC_promoter=4.72724089635854, TAD_IMR90=0.952150607922604,TAD_HMEC=0.946503067484663, TAD_A549=0.981284285253307,UCE=5) data = as.data.frame(t(data)) names(data) = &quot;Enrichment&quot; data$Type = rownames(data) pdf(file=&quot;Data/Figures/Fig1/Fig1.I.pdf&quot;,width=4,height=4.5) p &lt;- ggplot(data,aes(y=reorder(Type,Enrichment),x=Enrichment)) + geom_bar(stat=&quot;identity&quot;,fill=&quot;steelblue&quot;,width=0.8) + scale_x_continuous(expand=c(0,0),limits=c(0,30),position = &quot;top&quot;)+ labs(x=&quot;Enrichment Score&quot;)+ theme_bw()+ theme(panel.background = element_blank(), panel.border = element_blank(), panel.grid = element_blank(), axis.line=element_line(color=&quot;black&quot;), axis.title.y=element_blank(), axis.text.x = element_text(color=&quot;black&quot;,size=10), axis.text.y = element_text(color=&quot;black&quot;,size=10), axis.ticks = element_line(color=&quot;black&quot;), axis.ticks.length = unit(5, &quot;pt&quot;)) + geom_text(aes(label=round(Enrichment,2)), vjust=0.5,hjust=0, size=3.5,color=&quot;black&quot;) print(p) dev.off() 1.5: Fig1.I "],["figure-2.html", " 2 Figure 2 2.1 (A). Cancer MHBs and open chromatin 2.2 (B). Cancer MHBs and DNAm features 2.3 (C-D). Enrichment of Cancer MHBs in DNAm feature (LOLA) 2.4 (E). Genomic features with MHBs in open chromatin 2.5 (F). Enrichment of MHBs in ChIA-PET in a disease status-specific manner. 2.6 (G). Enrichment of ChIA-PET tags in MHBs.", " 2 Figure 2 Figure 2. MHBs are enriched in accessible chromatin regions in cancers. (A) Overlapping of cancer MHBs with regions of open chromatin in matched cancer types. ATAC-seq peaks were defined previously and downloaded from NCI’s Genomic Data Commons (See methods). (B) Annotation of MHBs to regions of DNA methylation states, including UMR, LMR, PDR, and HMR. UMR, unmethylated region. LMR, low-methylation region. PMD, partially methylated domains. HMR, high-methylation region. (C-D) The enrichment of MHBs in LMR and PMD, respectively. Enrichment test was performed by R package LOLA, using the union of MHBs as the background. The resulting p-values for significant enrichment were ranked across all cancer types (FDR &lt; 0.01). Nonsignificant results are shown in grey. (E) Genomic regions with MHBs are more enriched in regions of open chromatin regardless of mean methylation levels. The enrichment score was calculated as the percentage of CpGs covered by regions of open chromatin. (F) Enrichment of MHBs in ChIA-PET in a disease status-specific manner. The enrichment score was defined as the ratio of observed and expected numbers of overlapping regions between MHBs and ChIA-PET regions. (G) Enrichment of ChIA-PET tags in MHBs. We divided the Pol II ChIA-PET tags into 10 groups, LMR, UMR, PMD, HMR and a combination of any two of them. Permutation test (100 times) was performed to evaluate the fold enrichment of MHBs from BRCA and normal tissues in MCF-7 and MCF-10A ChIA-PET tags. (H) An example genomic track shows that chromatin interaction tends to occur in MHB regions. In this region (chr7: 99,707,000 - 99,774,000), tracks of gene annotation, CpG density, CpG island, Hi-C compartment, mean methylation, MHBs, genomic features, Pol II ChIP-seq and chromatin interaction were shown for breast cancer (MCF-7) and normal (MCF-10A) samples. 2.1 (A). Cancer MHBs and open chromatin library(regioneR) library(ChIPseeker) library(ggplot2) # MHB regions mhb_cluster=&quot;Data/Processed_data/MHB/tumor&quot; # Remove Pancreatic and Ovary cancer samples=list.files(mhb_cluster) samples=samples[!grepl(&quot;PACA&quot;,samples)] samples=samples[!grepl(&quot;OV&quot;,samples)] samples=gsub(&quot;MHB_&quot;,&quot;&quot;,gsub(&quot;.bed&quot;,&quot;&quot;,samples)) # mn = list() for ( sample in samples ){ mhb_peak = readPeakFile(paste0(mhb_cluster,&quot;/MHB_&quot;,sample,&quot;.bed&quot;)) mhb_tag = sample # Read the TCGA cancer type ATAC Peaks ATAC_path=&quot;Data/Processed_data/ATAC/cancer_type_peak/&quot; if (mhb_tag == &quot;BRCA&quot;){ i = &quot;BRCA_hg19_peak.bed&quot; }else if(mhb_tag == &quot;CESC&quot;){ i = &quot;CESC_hg19_peak.bed&quot; }else if (mhb_tag == &quot;COAD&quot;){ i = &quot;COAD_hg19_peak.bed&quot; }else if (mhb_tag == &quot;ESCA&quot;){ i = &quot;ESCA_hg19_peak.bed&quot; }else if (mhb_tag ==&quot;HNSC&quot;){ i = &quot;HNSC_hg19_peak.bed&quot; }else if (mhb_tag == &quot;LIHC&quot;){ i = &quot;LIHC_hg19_peak.bed&quot; }else if(mhb_tag == &quot;NSCLC&quot;){ i = &quot;LUAD_hg19_peak.bed&quot; }else if (mhb_tag == &quot;STAD&quot;){ i = &quot;STAD_hg19_peak.bed&quot; }else if(mhb_tag == &quot;THCA&quot;){ i = &quot;THCA_hg19_peak.bed&quot; } tag = strsplit(i,&quot;_&quot;)[[1]][1] # ATAC-seq peaks assign(tag,readPeakFile(paste0(ATAC_path,i))) # Cancer specific MHB x=findOverlaps(get(tag),mhb_peak,type = &quot;any&quot;, ignore.strand = TRUE) # Overlapped cM=length(unique(subjectHits(x))) # total MHB cL=length(mhb_peak) m = round(100*cM/cL,2) mn[[tag]] = m } # add LUSC i=&quot;LUSC_hg19_peak.bed&quot; tag = strsplit(i,&quot;_&quot;)[[1]][1] assign(tag,readPeakFile(paste0(ATAC_path,i))) x=findOverlaps(get(tag),mhb_peak,type = &quot;any&quot;, ignore.strand = TRUE) cM=length(unique(subjectHits(x))) cL=length(mhb_peak) m = round(100*cM/cL,2) mn[[tag]] = m MHB_OV_ATAC=as.data.frame(do.call(rbind,mn)) MHB_OV_ATAC$type = rownames(MHB_OV_ATAC) MHB_OV_ATAC = MHB_OV_ATAC[order(rownames(MHB_OV_ATAC)),] # PLOT pdf(file=&quot;Data/Figures/Fig2/Fig2.A.pdf&quot;,width=5,height=4) p&lt;-ggplot(MHB_OV_ATAC,aes(type,V1)) + geom_bar(stat=&quot;identity&quot;,fill=&quot;steelblue&quot;,width=0.8)+ scale_y_continuous(expand=c(0,0),limits=c(0,80))+ labs(y=&quot;The Frequency of Cancer-type MHBs\\n Overlap with TCGA ATAC peaks (%)&quot;)+ theme_bw() + theme(panel.grid= element_blank(),panel.background=element_blank(), panel.border=element_blank(),axis.line=element_line(color=&quot;black&quot;), axis.title.x=element_blank(), axis.text.x = element_text(color=&quot;black&quot;,size=10,angle=45,vjust=1,hjust=1), axis.text.y = element_text(color=&quot;black&quot;,size=10)) + geom_text(aes(label=paste0(V1,&quot;%&quot;)), vjust=-0.3, size=3.5,color=&quot;black&quot;) print(p) dev.off() 2.1: Fig2.A 2.2 (B). Cancer MHBs and DNAm features # Call DNAme features using WGBS data by R package MethylSeekR library(MethylSeekR) library(&quot;BSgenome.Hsapiens.UCSC.hg19&quot;) sLengths=seqlengths(Hsapiens) library(parallel) library(rtracklayer) set.seed(123) if (!file.exists(&quot;train&quot;)){ dir.create(&quot;train&quot;) dir.create(&quot;res&quot;) } # Input data_path=&quot;merged_CpG/&quot; samples=list.files(data_path,pattern=&quot;Count_CpG.bedGraph&quot;) # hg19 CGI session &lt;- browserSession() genome(session) &lt;- &quot;hg19&quot; query &lt;- ucscTableQuery(session, table = &quot;cpgIslandExt&quot;) CpGislands.gr &lt;- track(query) genome(CpGislands.gr) &lt;- NA # Remove CGI +/-5K CpGs CpGislands.gr &lt;-suppressWarnings(resize(CpGislands.gr, 5000, fix=&quot;center&quot;)) for ( i in samples){ # Load GR x &lt;- toGRanges(paste0(data_path,i)) names(mcols(x)) = c(&quot;M&quot;,&quot;Um&quot;) mcols(x)[,&quot;T&quot;] = mcols(x)[,1] + mcols(x)[,2] ranges(x) &lt;- end(x) mcols(x) &lt;- mcols(x)[,c(&quot;T&quot;,&quot;M&quot;)] tag &lt;- gsub(&quot;_Merged_Count_CpG.bedGraph&quot;,&quot;&quot;,i) # PMD PMDsegments&lt;-segmentPMDs(m=x, chr.sel=&quot;chr22&quot;, seqLengths=sLengths,num.cores=10) # FDR cut-off stats &lt;- suppressWarnings(calculateFDRs(m=x, CGIs=CpGislands.gr, PMDs=PMDsegments, num.cores=10)) FDR.cutoff &lt;- 5 m.sel &lt;- 0.5 n.sel=as.integer(names(stats$FDRs[as.character(m.sel), ] [stats$FDRs[as.character(m.sel), ]&lt;FDR.cutoff])[1]) ###UMR LMR UMRLMRsegments &lt;- segmentUMRsLMRs(m=x, meth.cutoff=m.sel, nCpG.cutoff=n.sel, PMDs=PMDsegments, num.cores=10, myGenomeSeq=Hsapiens,minCover=5, seqLengths=sLengths) # Saving # PMD write.table(as.data.frame(PMDsegments[PMDsegments$type==&quot;PMD&quot;])[c(1:3)],file=paste0(&quot;res/&quot;,tag,&quot;_PMDs.txt&quot;), sep=&quot;\\t&quot;,quote=F,col.names=F,row.names=F) # LMR &amp; UMR write.table(granges(UMRLMRsegments[UMRLMRsegments$type==&quot;LMR&quot;,]),file=paste0(&quot;res/&quot;,tag,&quot;_LMRs.txt&quot;), sep=&quot;\\t&quot;,quote=F,col.names=F,row.names=F) write.table(granges(UMRLMRsegments[UMRLMRsegments$type==&quot;UMR&quot;,]),file=paste0(&quot;res/&quot;,tag,&quot;_UMRs.txt&quot;), sep=&quot;\\t&quot;,quote=F,col.names=F,row.names=F) } # Show the percent of MHB in UMR HMR LMR PMD regions mhb_cluster=&quot;Data/Processed_data/MHB/tumor&quot; samples=list.files(mhb_cluster) mn =list() for (i in samples) { mhb_beta = readPeakFile(paste0(mhb_cluster,&quot;/&quot;,i)) mhb_tag = gsub(&quot;.bed&quot;,&quot;&quot;,gsub(&quot;MHB_&quot;,&quot;&quot;,i)) # Read the cancer type PMD HMR LMR UMR regions MR_path=&quot;Data/Processed_data/MR/GR&quot; if (mhb_tag == &quot;BRCA&quot;){ tag = &quot;breast_T&quot; }else if(mhb_tag == &quot;CESC&quot;){ tag = &quot;cervix_T&quot; }else if (mhb_tag == &quot;COAD&quot;){ tag = &quot;colon_T&quot; }else if (mhb_tag == &quot;ESCA&quot;){ tag = &quot;esophagus_T&quot; }else if (mhb_tag ==&quot;HNSC&quot;){ tag = &quot;head_and_neck_T&quot; }else if (mhb_tag == &quot;LIHC&quot;){ tag = &quot;liver_T&quot; }else if(mhb_tag == &quot;NSCLC&quot;){ tag = &quot;lung_T&quot; }else if (mhb_tag == &quot;STAD&quot;){ tag = &quot;stomach_T&quot; }else if(mhb_tag == &quot;THCA&quot;){ tag = &quot;thyroid_T&quot; }else if(mhb_tag == &quot;OV&quot;){ tag = &quot;ovary_T&quot; }else if(mhb_tag == &quot;PACA&quot;){ tag = &quot;pancreas_T&quot; } # Genomic feature regions PMD = readPeakFile(paste0(MR_path,tag,&quot;_PMDs.bed&quot;)) HMR = readPeakFile(paste0(MR_path,tag,&quot;_HMRs.bed&quot;)) LMR = readPeakFile(paste0(MR_path,tag,&quot;_LMRs.bed&quot;)) UMR = readPeakFile(paste0(MR_path,tag,&quot;_UMRs.bed&quot;)) # Cancer-type MHB overlaps x1=findOverlaps(PMD,mhb_beta,type = &quot;any&quot;, ignore.strand = TRUE) m1=length(unique(subjectHits(x1))) x2=findOverlaps(HMR,mhb_beta,type = &quot;any&quot;, ignore.strand = TRUE) m2=length(unique(subjectHits(x2))) x3=findOverlaps(LMR,mhb_beta,type = &quot;any&quot;, ignore.strand = TRUE) m3=length(unique(subjectHits(x3))) x4=findOverlaps(UMR,mhb_beta,type = &quot;any&quot;, ignore.strand = TRUE) m4=length(unique(subjectHits(x4))) m = data.frame(freq = c(m1,m2,m3,m4)/sum(m1+m2+m3+m4)) rownames(m) = c(&quot;PMD&quot;,&quot;HMR&quot;,&quot;LMR&quot;,&quot;UMR&quot;) names(m) = tag mn[[tag]] = m } res = do.call(cbind,mn) # PLOT res$Genomic = rownames(res) data = melt(res) pdf(file=&quot;Data/Figures/Fig2/Fig2.B.pdf&quot;,width=5,height=5) p&lt;-ggplot(data,aes(x=variable,y=value*100, fill=factor(Genomic,level=c(&quot;HMR&quot;,&quot;PMD&quot;,&quot;LMR&quot;,&quot;UMR&quot;))))+ geom_bar(stat=&quot;identity&quot;,position=&quot;stack&quot;)+ scale_fill_brewer(palette = &quot;Set1&quot;) + ggtitle(&quot;The Genomic distribution of Cancer-type MHBs&quot;)+ labs(x=&quot;&quot;,y=&quot;Percent (%)&quot;) + theme_bw()+ theme( panel.grid = element_blank(),panel.background=element_blank(), axis.ticks.length=unit(5,&#39;pt&#39;),axis.line=element_line(color=&quot;black&quot;), axis.title.x=element_blank(),axis.text.x = element_text(color=&quot;black&quot;,size=10, angle=45,vjust=1,hjust=1), axis.text.y = element_text(color=&quot;black&quot;,size=10), axis.ticks = element_line(color=&quot;black&quot;)) + guides(fill=guide_legend(title=NULL)) print(p) dev.off() 2.2: Fig2.B 2.3 (C-D). Enrichment of Cancer MHBs in DNAm feature (LOLA) # LOLA enrichment (MHB vs LMR, UMR, HMR, PMD) library(&quot;LOLA&quot;) mhb_clusters=&quot;Data/Processed_data/MHB/tumor/&quot; background=&quot;Data/Processed_data/MHB/MHB_11_cancers_clusters.bed&quot; # MHB regions files = list.files(mhb_clusters) locResults = lapply(files,function(i){ mhb=readBed(paste0(mhb_clusters,i)) # Universe_Sets Background universe_set=readBed(background) # Genomic features states=loadRegionDB(&quot;Data/Processed_data/MR/LOLA_DB&quot;) # Runing LOLA runLOLA(mhb, universe_set, states, cores=10) }) # data output data = lapply(names(locResults),function(i){ mx = locResults[[i]][,c(&quot;pValueLog&quot;,&quot;filename&quot;)] mx$Type = i mx }) data = as.data.frame(do.call(rbind,data)) # adjusted P values p_adjust = function(x){ FDR=p.adjust(p=10^-x,method=&quot;fdr&quot;,n=10) return(FDR) } data$fdr = apply(data[1],1,p_adjust) data = data[-1] # data reshape dta = dcast(data,Type~filename) rownames(dta) = dta$Type;dta$Type=NULL dta_t = -log10(dta) # filter FDR &lt; 0.01 dta_t[dta_t&lt;2]&lt;-NA rank_t = function(x) { m = rank(array(-x),na.last=&quot;keep&quot;,ties.method = &quot;min&quot;) return(m) } # Order by the Genomic features c1 = dta_t[grepl(&quot;UMR&quot;,colnames(dta_t))] c2 = dta_t[grepl(&quot;LMR&quot;,colnames(dta_t))] c3 = dta_t[grepl(&quot;PMD&quot;,colnames(dta_t))] c4 = dta_t[grepl(&quot;HMR&quot;,colnames(dta_t))] c1_rank= as.data.frame(t(apply(c1,1,rank_t))) names(c1_rank) = names(c1) c2_rank= as.data.frame(t(apply(c2,1,rank_t))) names(c2_rank) = names(c2) c3_rank= as.data.frame(t(apply(c3,1,rank_t))) names(c3_rank) = names(c3) c4_rank= as.data.frame(t(apply(c4,1,rank_t))) names(c4_rank) = names(c4) ## LMR pdf(file=&quot;Data/Figures/Fig2/Fig2.C.pdf&quot;,width=4,height=4) p&lt;- pheatmap(c2_rank, main=&quot;Cancer type MHBs Overlap with LMRs&quot;, show_colnames=T,show_rownames=T, cluster_rows=F,cluster_cols=F, scale=&quot;none&quot;,angle_col=45, color=colorRampPalette(colors = c(&quot;firebrick&quot;,&quot;white&quot;,&quot;darkblue&quot;))(1000)) print(p) dev.off() ## PMD pdf(file=&quot;Data/Figures/Fig2/Fig2.D.pdf&quot;,width=4,height=4) p&lt;- pheatmap(c3_rank, main=&quot;Cancer type MHBs Overlap with PMDs&quot;, show_colnames=T,show_rownames=T, cluster_rows=F,cluster_cols=F, scale=&quot;none&quot;,angle_col=45, color=colorRampPalette(colors = c(&quot;firebrick&quot;,&quot;white&quot;,&quot;darkblue&quot;))(1000)) print(p) dev.off() 2.3: Fig2.C-D 2.4 (E). Genomic features with MHBs in open chromatin # ==== shell command ===== #show the ATAC overlap the Genomic segments base pairs percentage segments_path=&quot;PMD_UMR_LMR/res&quot; ##Cancer Type ATAC-seq Peak ATAC_path=&quot;TCGA/ATAC/cancer_type_peak&quot; ####CpG sites hg19_CpG=&quot;hg19_CpG.bed&quot; for i in `ls ${segments_path}/*_T_MHB_genomic_segments.bed` do a=${i##*/} if [[ &quot;${a}&quot; == *&quot;breast&quot;* ]];then tag=&quot;BRCA_hg19_peak.bed&quot; elif [[ &quot;${a}&quot; == *&quot;cervix&quot;* ]];then tag=&quot;CESC_hg19_peak.bed&quot; elif [[ &quot;${a}&quot; == *&quot;colon&quot;* ]];then tag=&quot;COAD_hg19_peak.bed&quot; elif [[ &quot;${a}&quot; == *&quot;esophagus&quot;* ]];then tag=&quot;ESCA_hg19_peak.bed&quot; elif [[ &quot;${a}&quot; == *&quot;head_and_neck&quot;* ]];then tag=&quot;HNSC_hg19_peak.bed&quot; elif [[ &quot;${a}&quot; == *&quot;lung&quot;* ]];then tag=&quot;LUAD_hg19_peak.bed&quot; elif [[ &quot;${a}&quot; == *&quot;liver&quot;* ]];then tag=&quot;LIHC_hg19_peak.bed&quot; elif [[ &quot;${a}&quot; == *&quot;stomach&quot;* ]];then tag=&quot;STAD_hg19_peak.bed&quot; elif [[ &quot;${a}&quot; == *&quot;thyroid&quot;* ]];then tag=&quot;THCA_hg19_peak.bed&quot; fi # MHB LMR UMR PMD HMR less ${i} |grep MHB | bedtools intersect -a ${hg19_CpG} -b - | bedtools coverage -a - -b ${ATAC_path}/${tag} &gt; Genomic_segments_ATAC_bp_CpG/${tag%%_*}_segments_ATAC_MHB_coverage.bed less ${i} |grep LMR | bedtools intersect -a ${hg19_CpG} -b - | bedtools coverage -a - -b ${ATAC_path}/${tag} &gt; Genomic_segments_ATAC_bp_CpG/${tag%%_*}_segments_ATAC_LMR_coverage.bed less ${i} |grep UMR | bedtools intersect -a ${hg19_CpG} -b - | bedtools coverage -a - -b ${ATAC_path}/${tag} &gt; Genomic_segments_ATAC_bp_CpG/${tag%%_*}_segments_ATAC_UMR_coverage.bed less ${i} |grep PMD | bedtools intersect -a ${hg19_CpG} -b - | bedtools coverage -a - -b ${ATAC_path}/${tag} &gt; Genomic_segments_ATAC_bp_CpG/${tag%%_*}_segments_ATAC_PMD_coverage.bed less ${i} |grep HMR | bedtools intersect -a ${hg19_CpG} -b - | bedtools coverage -a - -b ${ATAC_path}/${tag} &gt; Genomic_segments_ATAC_bp_CpG/${tag%%_*}_segments_ATAC_HMR_coverage.bed done # add LUSC less ${segments_path}/lung_T_MHB_genomic_segments.bed |grep MHB | bedtools intersect -a ${hg19_CpG} -b - | bedtools coverage -a - -b ${ATAC_path}/LUSC_hg19_peak.bed &gt; Genomic_segments_ATAC_bp_CpG/LUSC_segments_ATAC_MHB_coverage.bed less ${segments_path}/lung_T_MHB_genomic_segments.bed |grep LMR | bedtools intersect -a ${hg19_CpG} -b - | bedtools coverage -a - -b ${ATAC_path}/LUSC_hg19_peak.bed &gt; Genomic_segments_ATAC_bp_CpG/LUSC_segments_ATAC_LMR_coverage.bed less ${segments_path}/lung_T_MHB_genomic_segments.bed |grep UMR | bedtools intersect -a ${hg19_CpG} -b - | bedtools coverage -a - -b ${ATAC_path}/LUSC_hg19_peak.bed &gt; Genomic_segments_ATAC_bp_CpG/LUSC_segments_ATAC_UMR_coverage.bed less ${segments_path}/lung_T_MHB_genomic_segments.bed |grep PMD | bedtools intersect -a ${hg19_CpG} -b - | bedtools coverage -a - -b ${ATAC_path}/LUSC_hg19_peak.bed &gt; Genomic_segments_ATAC_bp_CpG/LUSC_segments_ATAC_PMD_coverage.bed less ${segments_path}/lung_T_MHB_genomic_segments.bed |grep HMR | bedtools intersect -a ${hg19_CpG} -b - | bedtools coverage -a - -b ${ATAC_path}/LUSC_hg19_peak.bed &gt; Genomic_segments_ATAC_bp_CpG/LUSC_segments_ATAC_HMR_coverage.bed # The Genomic segments overlap TCGA ATAC-seq peaks in base pairs levels library(tidyverse) library(pbapply) library(stringr) library(data.table) samples=samples=list.files(&quot;./&quot;,pattern=&quot;_MHB_coverage.bed&quot;) ##base pair beta value beta_path=&quot;Data/Processed_data/MM/&quot; CpG_segment_ATAC_rate&lt;-pbapply::pblapply(samples,function(x){ if(str_detect(x,&quot;BRCA&quot;)){ beta&lt;-paste0(beta_path,&quot;breast_T_Merged_CpG.bedGraph&quot;) }else if(str_detect(x,&quot;CESC&quot;)){ beta&lt;-paste0(beta_path,&quot;cervix_T_Merged_CpG.bedGraph&quot;) } else if(str_detect(x,&quot;COAD&quot;)){ beta&lt;-paste0(beta_path,&quot;colon_T_Merged_CpG.bedGraph&quot;) } else if(str_detect(x,&quot;ESCA&quot;)){ beta&lt;-paste0(beta_path,&quot;esophagus_T_Merged_CpG.bedGraph&quot;) } else if(str_detect(x,&quot;HNSC&quot;)){ beta&lt;-paste0(beta_path,&quot;head_and_neck_T_Merged_CpG.bedGraph&quot;) } else if(str_detect(x,&quot;LIHC&quot;)){ beta&lt;-paste0(beta_path,&quot;liver_T_Merged_CpG.bedGraph&quot;) } else if(str_detect(x,&quot;LUAD&quot;)){ beta&lt;-paste0(beta_path,&quot;lung_T_Merged_CpG.bedGraph&quot;) } else if(str_detect(x,&quot;LUSC&quot;)){ beta&lt;-paste0(beta_path,&quot;lung_T_Merged_CpG.bedGraph&quot;) } else if(str_detect(x,&quot;STAD&quot;)){ beta&lt;-paste0(beta_path,&quot;stomach_T_Merged_CpG.bedGraph&quot;) } else if(str_detect(x,&quot;THCA&quot;)){ beta&lt;-paste0(beta_path,&quot;thyroid_T_Merged_CpG.bedGraph&quot;) } # read mhb data mhb_coverage&lt;- fread(x) %&gt;% select(c(1:3)) %&gt;% mutate(MHB=&quot;MHB&quot;) # Genomic features were divided into MHB overlapping or not gf &lt;- c(&quot;LMR&quot;,&quot;UMR&quot;,&quot;PMD&quot;,&quot;HMR&quot;) Genomic_coverage &lt;- lapply(gf, function(m) { tag&lt;-str_replace_all(x,&quot;MHB&quot;,m) fread(tag) %&gt;% select(c(1:3,6,7)) %&gt;% mutate(Type=m) %&gt;% left_join(mhb_coverage,by=c(&quot;V1&quot;,&quot;V2&quot;,&quot;V3&quot;)) %&gt;% mutate(MHB = ifelse(is.na(MHB),paste0(m,&quot;_NonMHB&quot;),paste0(m,&quot;_MHB&quot;))) }) coverage &lt;- do.call(rbind,Genomic_coverage) %&gt;% as.data.frame() MM &lt;- fread(beta) # merge left_join(coverage,MM,by=intersect(names(coverage),names(MM))) %&gt;% drop_na() }) names(CpG_segment_ATAC_rate) &lt;- samples %&gt;% str_split_i(pattern=&quot;_&quot;,i=1) # In cancer type Cancer_segment_ATAC&lt;-list() for ( i in names(CpG_segment_ATAC_rate)) { tag &lt;- i x = CpG_segment_ATAC_rate[[i]] %&gt;% rename(&quot;olen&quot;=&quot;V6&quot;,&quot;tlen&quot;=&quot;V7&quot;,&quot;Beta&quot;=&quot;V4&quot;) %&gt;% arrange(Beta) Cancer_segment_ATAC[[tag]] &lt;- x # Divided into 10 clusters based on Beta value ### HMR HMR = x[x$Type == &quot;HMR&quot;,] %&gt;% arrange(Beta) HMR$Cluster = paste0(&quot;cluster_&quot;,rep(1:10,each=trunc(nrow(HMR)/10)+1))[1:nrow(HMR)] rHMR = as.data.frame(HMR[c(&quot;olen&quot;,&quot;tlen&quot;,&quot;Cluster&quot;,&quot;MHB&quot;)] %&gt;% group_by(Cluster,MHB) %&gt;% summarise_each(funs=sum)) cluster_HMR = as.data.frame(HMR[c(&quot;Beta&quot;,&quot;Cluster&quot;,&quot;MHB&quot;)] %&gt;% group_by(Cluster,MHB) %&gt;% summarise_each(funs=median)) rHMR = inner_join(rHMR,cluster_HMR,by=c(&quot;Cluster&quot;,&quot;MHB&quot;)) %&gt;% mutate(Freq=100*round(olen/tlen,4)) ### PMD PMD = x[x$Type == &quot;PMD&quot;,]%&gt;% arrange(Beta) PMD$Cluster = paste0(&quot;cluster_&quot;,rep(1:10,each=trunc(nrow(PMD)/10)+1))[1:nrow(PMD)] rPMD = as.data.frame(PMD[c(&quot;olen&quot;,&quot;tlen&quot;,&quot;Cluster&quot;,&quot;MHB&quot;)] %&gt;% group_by(Cluster,MHB) %&gt;% summarise_each(funs=sum)) cluster_PMD = as.data.frame(PMD[c(&quot;Beta&quot;,&quot;Cluster&quot;,&quot;MHB&quot;)] %&gt;% group_by(Cluster,MHB) %&gt;% summarise_each(funs=median)) rPMD = inner_join(rPMD,cluster_PMD,by=c(&quot;Cluster&quot;,&quot;MHB&quot;)) %&gt;% mutate(Freq=100*round(olen/tlen,4)) ### LMR LMR = x[x$Type == &quot;LMR&quot;,] %&gt;% arrange(Beta) LMR$Cluster = paste0(&quot;cluster_&quot;,rep(1:10,each=trunc(nrow(LMR)/10)+1))[1:nrow(LMR)] rLMR = as.data.frame(LMR[c(&quot;olen&quot;,&quot;tlen&quot;,&quot;Cluster&quot;,&quot;MHB&quot;)] %&gt;% group_by(Cluster,MHB) %&gt;% summarise_each(funs=sum)) cluster_LMR = as.data.frame(LMR[c(&quot;Beta&quot;,&quot;Cluster&quot;,&quot;MHB&quot;)] %&gt;% group_by(Cluster,MHB) %&gt;% summarise_each(funs=median)) rLMR = inner_join(rLMR,cluster_LMR,by=c(&quot;Cluster&quot;,&quot;MHB&quot;)) %&gt;% mutate(Freq=100*round(olen/tlen,4)) ###UMR UMR = x[x$Type == &quot;UMR&quot;,] %&gt;% arrange(Beta) UMR$Cluster = paste0(&quot;cluster_&quot;,rep(1:10,each=trunc(nrow(UMR)/10)+1))[1:nrow(UMR)] rUMR = as.data.frame(UMR[c(&quot;olen&quot;,&quot;tlen&quot;,&quot;Cluster&quot;,&quot;MHB&quot;)] %&gt;% group_by(Cluster,MHB) %&gt;% summarise_each(funs=sum)) cluster_UMR = as.data.frame(UMR[c(&quot;Beta&quot;,&quot;Cluster&quot;,&quot;MHB&quot;)] %&gt;% group_by(Cluster,MHB) %&gt;% summarise_each(funs=median)) rUMR = inner_join(rUMR,cluster_UMR,by=c(&quot;Cluster&quot;,&quot;MHB&quot;)) %&gt;% mutate(Freq=100*round(olen/tlen,4)) assign(tag,list(&quot;UMR&quot;=rUMR,&quot;LMR&quot;=rLMR,&quot;PMD&quot;=rPMD,&quot;HMR&quot;=rHMR)) # PLOT data = do.call(rbind,get(tag)) data$Segment = sapply(strsplit(rownames(data),&quot;\\\\.&quot;),function(x) x[1]) data$Cluster = factor(data$Cluster,level=c(paste0(&quot;cluster_&quot;,rep(1:10)))) pdf(file=paste0(&quot;Data/Figures/Fig2/&quot;,tag,&quot;_segments_beta_cluster.pdf&quot;),width=6,height=4) p1&lt;- data %&gt;% mutate(Type=str_split_i(MHB,pattern=&quot;_&quot;,i=2),Segment=fct_inorder(Segment)) %&gt;% ggplot(aes(x=Beta,y=Freq,color=Type)) + geom_smooth(aes(color=Type),se=F,linewidth=0.8) + scale_y_continuous(expand=c(0,0),limits=c(0,80))+ scale_x_continuous(limits=c(0,1))+ scale_color_manual(values=c(&quot;#df8f44&quot;,&quot;#00a1d5&quot;)) + labs(x=&quot;Mean Methylation&quot;, y=&quot;The Percentage of Genomic segments \\n overlap with ATAC Peaks(%)&quot;,title=tag)+ theme_bw()+ theme(panel.grid = element_blank(), panel.background = element_blank(),axis.ticks.length=unit(5,&#39;pt&#39;), axis.line=element_line(color=&quot;black&quot;),plot.title = element_text(hjust=0.5,vjust=0.5), strip.background.x = element_rect(color=&quot;black&quot;, fill=&quot;gray&quot;, size=0.8, linetype=&quot;solid&quot;)) + facet_wrap(~Segment,scales=&quot;fixed&quot;) print(p1) dev.off() } # All the Cancer merged Tx=do.call(rbind,Cancer_segment_ATAC) Tx$Tag = sapply(strsplit(rownames(Tx),&quot;\\\\.&quot;),function(x) x[1]) ### HMR tHMR = Tx[Tx$Type == &quot;HMR&quot;,] %&gt;% arrange(Beta) tHMR$Cluster = paste0(&quot;cluster_&quot;,rep(1:10,each=trunc(nrow(tHMR)/10)+1))[1:nrow(tHMR)] trHMR = as.data.frame(tHMR[c(&quot;olen&quot;,&quot;tlen&quot;,&quot;Cluster&quot;,&quot;MHB&quot;)] %&gt;% group_by(Cluster,MHB) %&gt;% summarise_each(funs=sum)) cluster_tHMR = as.data.frame(tHMR[c(&quot;Beta&quot;,&quot;Cluster&quot;,&quot;MHB&quot;)] %&gt;% group_by(Cluster,MHB) %&gt;% summarise_each(funs=median)) trHMR = inner_join(trHMR,cluster_tHMR,by=c(&quot;Cluster&quot;,&quot;MHB&quot;)) %&gt;% mutate(Freq=100*round(olen/tlen,4)) ### PMD tPMD = Tx[Tx$Type == &quot;PMD&quot;,] %&gt;% arrange(Beta) tPMD$Cluster = paste0(&quot;cluster_&quot;,rep(1:10,each=trunc(nrow(tPMD)/10)+1))[1:nrow(tPMD)] trPMD = as.data.frame(tPMD[c(&quot;olen&quot;,&quot;tlen&quot;,&quot;Cluster&quot;,&quot;MHB&quot;)] %&gt;% group_by(Cluster,MHB) %&gt;% summarise_each(funs=sum)) cluster_tPMD = as.data.frame(tPMD[c(&quot;Beta&quot;,&quot;Cluster&quot;,&quot;MHB&quot;)] %&gt;% group_by(Cluster,MHB) %&gt;% summarise_each(funs=median)) trPMD = inner_join(trPMD,cluster_tPMD,by=c(&quot;Cluster&quot;,&quot;MHB&quot;)) %&gt;% mutate(Freq=100*round(olen/tlen,4)) ### LMR tLMR = Tx[Tx$Type == &quot;LMR&quot;,] %&gt;% arrange(Beta) tLMR$Cluster = paste0(&quot;cluster_&quot;,rep(1:10,each=trunc(nrow(tLMR)/10)+1))[1:nrow(tLMR)] trLMR = as.data.frame(tLMR[c(&quot;olen&quot;,&quot;tlen&quot;,&quot;Cluster&quot;,&quot;MHB&quot;)] %&gt;% group_by(Cluster,MHB) %&gt;% summarise_each(funs=sum)) cluster_tLMR = as.data.frame(tLMR[c(&quot;Beta&quot;,&quot;Cluster&quot;,&quot;MHB&quot;)] %&gt;% group_by(Cluster,MHB) %&gt;% summarise_each(funs=median)) trLMR = inner_join(trLMR,cluster_tLMR,by=c(&quot;Cluster&quot;,&quot;MHB&quot;)) %&gt;% mutate(Freq=100*round(olen/tlen,4)) ###UMR tUMR = Tx[Tx$Type == &quot;UMR&quot;,] %&gt;% arrange(Beta) tUMR$Cluster = paste0(&quot;cluster_&quot;,rep(1:10,each=trunc(nrow(tUMR)/10)+1))[1:nrow(tUMR)] trUMR = as.data.frame(tUMR[c(&quot;olen&quot;,&quot;tlen&quot;,&quot;Cluster&quot;,&quot;MHB&quot;)] %&gt;% group_by(Cluster,MHB) %&gt;% summarise_each(funs=sum)) cluster_tUMR = as.data.frame(tUMR[c(&quot;Beta&quot;,&quot;Cluster&quot;,&quot;MHB&quot;)] %&gt;% group_by(Cluster,MHB) %&gt;% summarise_each(funs=median)) trUMR = inner_join(trUMR,cluster_tUMR,by=c(&quot;Cluster&quot;,&quot;MHB&quot;)) %&gt;% mutate(Freq=100*round(olen/tlen,4)) TMR= do.call(rbind,list(&quot;UMR&quot;=trUMR,&quot;LMR&quot;=trLMR,&quot;PMD&quot;=trPMD,&quot;HMR&quot;=trHMR)) TMR$Segment = factor(sapply(strsplit(rownames(TMR),&quot;\\\\.&quot;),function(x) x[1]),levels=c(&quot;UMR&quot;,&quot;LMR&quot;,&quot;PMD&quot;,&quot;HMR&quot;)) #PLOT pdf(file=paste0(&quot;Data/Figures/Fig2/Fig2.E.pdf&quot;),width=6,height=4) p3&lt;- data %&gt;% mutate(Type=str_split_i(MHB,pattern=&quot;_&quot;,i=2),Segment=fct_inorder(Segment)) %&gt;% ggplot(aes(x=Beta,y=Freq,color=Type)) + geom_smooth(aes(color=Type),se=F,linewidth=0.8) + scale_y_continuous(expand=c(0,0),limits=c(0,80))+ scale_x_continuous(limits=c(0,1))+ scale_color_manual(values=c(&quot;#df8f44&quot;,&quot;#00a1d5&quot;)) + labs(x=&quot;Mean Methylation&quot;, y=&quot;The Percentage of CpGs covered by TCGA ATAC-seq Peaks(%)&quot;,title=&quot;Pan-Cancer&quot;)+ theme_bw()+ theme(panel.grid = element_blank(), panel.background = element_blank(),axis.ticks.length=unit(5,&#39;pt&#39;), axis.line=element_line(color=&quot;black&quot;), plot.title = element_text(hjust=0.5,vjust=0.5), strip.background.x = element_rect(color=&quot;black&quot;, fill=&quot;gray&quot;, size=0.8, linetype=&quot;solid&quot;)) + geom_vline(aes(xintercept = 0.05),colour=&quot;black&quot;,linetype=&quot;dashed&quot;) + facet_wrap(~Segment,scales=&quot;fixed&quot;) print(p3) dev.off() 2.4: Fig2.E 2.5 (F). Enrichment of MHBs in ChIA-PET in a disease status-specific manner. # ======== shell command ====== # Permutation test of Breast cancer or normal MHB in Pol 2 ChIA-PET data for i in BRCA Breast do Rscript ChIApet_enrichment.R \\ --forward ${i}_P11.bed \\ --reverse ${i}_P21.bed \\ --genome hg19.chrom.sizes \\ --testBED &quot;BRCA_MHB or Breast_MHB&quot; \\ --nTimes 1000 \\ --tmp ./ \\ --outFile ${i}_MHB_ChIA_enrichment.txt done # Enrichment score ChIA-PET MCF7/MCF-10A # The scores are estimated by the fold enrichment of between MHB in Pol II ChIA-PET and random regions. MCF7_N=28.17;MCF7_T=40.06 MCF10A_N=60;MCF10A_T=53.62 data = data.frame(MCF7=c(MCF7_N,MCF7_T),MCF10A=c(MCF10A_N,MCF10A_T)) data$Type = factor(c(&quot;Normal_MHB&quot;,&quot;Tumor_MHB&quot;),levels=c(&quot;Tumor_MHB&quot;,&quot;Normal_MHB&quot;)) dat = melt(data) pdf(file=&quot;Data/Figures/Fig2/Fig2.F.pdf&quot;,width=5,height=4) p&lt;-ggplot(data = dat,aes(x=variable,y=value,fill=Type))+ geom_bar(stat=&quot;identity&quot;, position=position_dodge()) + scale_fill_brewer(palette=&quot;Set1&quot;) + labs(y=&quot;Enrichment Score&quot;)+ theme_bw()+ theme(panel.grid= element_blank(), panel.background=element_blank(), panel.border=element_blank(), axis.line=element_line(color=&quot;black&quot;), axis.title.x=element_blank(), axis.text.x = element_text(color=&quot;black&quot;,size=10, angle=45,vjust=1,hjust=1), axis.text.y = element_text(color=&quot;black&quot;,size=10), axis.ticks = element_line(color=&quot;black&quot;), axis.ticks.length = unit(5, &quot;pt&quot;) )+ geom_text(aes(label=value), vjust=-0.3, size=3.5,color=&quot;black&quot;) print(p) dev.off() 2.5: Fig2.F 2.6 (G). Enrichment of ChIA-PET tags in MHBs. # We divided the Pol II ChIA-PET tags into 10 groups, LMR, UMR, PMD, HMR and a combination of # any two of them. Permutation test (100 times) was performed to evaluate the fold enrichment # of MHBs from BRCA and normal tissues in MCF-7 and MCF-10A ChIA-PET tags. # cpg site CpG &lt;- fread(&quot;~/genome/CpG/hg19/hg19_CpG.gz&quot;) %&gt;% toGRanges() # BRCA Genomic Features lmr/umr/pmd ... GF_BRCA &lt;- fread(&quot;/sibcb2/bioinformatics2/zhangzhiqiang/MHB_WGBS/BAM/MHB_out/MHB_Cancer2/PMD_UMR_LMR/res/breast_T_genomic_segments.bed&quot;) %&gt;% toGRanges() Tx &lt;- findOverlaps(CpG,GF_BRCA,type=&quot;any&quot;,ignore.strand=T) GF &lt;- CpG[queryHits(Tx)] mcols(GF)$Type &lt;- mcols(GF_BRCA[subjectHits(Tx)])$V4 # ChIA-PET BRCA # forward Chia_pet_BRCA_F &lt;- fread(&quot;/sibcb2/bioinformatics2/zhangzhiqiang/MHB_WGBS/BAM/MHB_out/3D_genome/ChIA-PET/PolII/processed_hg19/MCF-7_rep2_P11.bed&quot;) %&gt;% toGRanges() Td_F &lt;- findOverlaps(Chia_pet_BRCA_F,GF,type=&quot;any&quot;,ignore.strand=T) Chia_GF_F &lt;- GF[subjectHits(Td_F)] %&gt;% unique() # reverse Chia_pet_BRCA_R &lt;- fread(&quot;/sibcb2/bioinformatics2/zhangzhiqiang/MHB_WGBS/BAM/MHB_out/3D_genome/ChIA-PET/PolII/processed_hg19/MCF-7_rep2_P21.bed&quot;) %&gt;% toGRanges() Td_R &lt;- findOverlaps(Chia_pet_BRCA_R,GF,type=&quot;any&quot;,ignore.strand=T) Chia_GF_R &lt;- GF[subjectHits(Td_R)] %&gt;% unique() ##################### # BRCA MHB MHB_BRCA &lt;- fread(&quot;/sibcb2/bioinformatics2/zhangzhiqiang/MHB_WGBS/BAM/MHB_out/MHB_Cancer2/MHB_RES/tumor/MHB_BRCA.bed&quot;) %&gt;% toGRanges() Th &lt;- findOverlaps(CpG,MHB_BRCA,type=&quot;any&quot;,ignore.strand=T) MHB_CpG &lt;- CpG[queryHits(Th)] # enrichment genomic_enrichment &lt;- function(Chia_GF_F,Chia_GF_R,MHB,CpG_sites,ntimes=100) { ### input features ## Forward T.F &lt;- findOverlaps(MHB,Chia_GF_F,type=&quot;any&quot;,ignore.strand=T) a = queryHits(T.F) %&gt;% length() ## Reverse T.R &lt;- findOverlaps(MHB,Chia_GF_R,type=&quot;any&quot;,ignore.strand=T) b = queryHits(T.R) %&gt;% length() ## Observe obs = a + b # MHB random times: Random_fold_enrichment xx &lt;- seqnames(MHB) %&gt;% as.data.frame() %&gt;% group_by(value) %&gt;% count() %&gt;% dplyr::rename(&quot;chr&quot;=&quot;value&quot;,&quot;count&quot;=&quot;n&quot;) chrom &lt;- xx %&gt;% pull(chr) %&gt;% as.character() RFE &lt;- pbapply::pblapply(1:ntimes,function(times){ z &lt;-lapply(chrom,function(y){ ##chromsome counts size &lt;- xx %&gt;% filter(chr==y) %&gt;% pull(count) CpG_sites %&gt;% plyranges::filter(seqnames==y) %&gt;% sample(size=size) }) # random regions random.MHB &lt;- GRangesList(z) %&gt;% unlist() # random.MHB overlap with ChIA-PET forward &amp; reverse # Forward T.RF &lt;- findOverlaps(random.MHB,Chia_GF_F,type=&quot;any&quot;,ignore.strand=T) a1 = queryHits(T.RF) %&gt;% length() # Reverse T.RR &lt;- findOverlaps(random.MHB,Chia_GF_R,type=&quot;any&quot;,ignore.strand=T) b1 = queryHits(T.RR) %&gt;% length() # expect exp &lt;- a1 + b1 }) # random test : median enrichemt score random &lt;- unlist(RFE) %&gt;% median() res &lt;- data.frame(&quot;obs&quot;= obs,&quot;random&quot;=random) %&gt;% mutate(fold_enrichment = (obs+1)/(random+1) ) return(res) } ## combine features features=c(&quot;HMR&quot;,&quot;PMD&quot;,&quot;UMR&quot;,&quot;LMR&quot;) features &lt;- combn(features,m=2,simplify= F) %&gt;% c(features) ## Do enrichment BRCA MHB &amp; BRCA ChIA-PET genomic_enrichment = lapply(features,function(x){ y &lt;- Chia_GF_F %&gt;% plyranges::filter(Type %in% x ) z &lt;- Chia_GF_R %&gt;% plyranges::filter(Type %in% x ) genomic_enrichment(y,z,MHB_CpG,CpG_sites=CpG,ntimes=100) }) names(genomic_enrichment) &lt;- sapply(features,function(x){paste0(x,collapse=&quot;_&quot;)}) res.TT &lt;- do.call(rbind,genomic_enrichment) %&gt;%rownames_to_column(var=&quot;Type&quot;) %&gt;% mutate(fold_enrichment=obs/random) fwrite(res.TT,file=&quot;res/BRCA_ChIA-PET_GF_T_MHB_T_enrichment100.txt&quot;,sep=&quot;\\t&quot;,quote=F,row.names=F) # BRCA MHB &amp; normal breast ChIA-PET # breast nomral Genomic Features lmr/umr/pmd ... GF_breast &lt;- fread(&quot;/sibcb2/bioinformatics2/zhangzhiqiang/MHB_WGBS/BAM/MHB_out/MHB_Cancer2/PMD_UMR_LMR/res/breast_N_genomic_segments.bed&quot;) %&gt;% toGRanges() Tx.N &lt;- findOverlaps(CpG,GF_breast,type=&quot;any&quot;,ignore.strand=T) GF.N &lt;- CpG[queryHits(Tx.N)] mcols(GF.N)$Type &lt;- mcols(GF_breast[subjectHits(Tx.N)])$V4 # ChIA-PET normal # forward Chia_pet_N_F &lt;- fread(&quot;/sibcb2/bioinformatics2/zhangzhiqiang/MHB_WGBS/BAM/MHB_out/3D_genome/ChIA-PET/PolII/processed_hg19/MCF-10A_rep2_P11.bed&quot;) %&gt;% toGRanges() Td_NF &lt;- findOverlaps(Chia_pet_N_F,GF.N,type=&quot;any&quot;,ignore.strand=T) Chia_GF_NF &lt;- GF.N[subjectHits(Td_NF)] %&gt;% unique() # reverse Chia_pet_N_R &lt;- fread(&quot;/sibcb2/bioinformatics2/zhangzhiqiang/MHB_WGBS/BAM/MHB_out/3D_genome/ChIA-PET/PolII/processed_hg19/MCF-10A_rep2_P21.bed&quot;) %&gt;% toGRanges() Td_NR &lt;- findOverlaps(Chia_pet_N_R,GF.N,type=&quot;any&quot;,ignore.strand=T) Chia_GF_NR &lt;- GF.N[subjectHits(Td_NR)] %&gt;% unique() ## Do enrichment BRCA MHB &amp; Normal breast ChIA-PET genomic_enrichment = lapply(features,function(x){ y &lt;- Chia_GF_NF %&gt;% plyranges::filter(Type %in% x ) z &lt;- Chia_GF_NR %&gt;% plyranges::filter(Type %in% x ) genomic_enrichment(y,z,MHB_CpG,CpG_sites=CpG,ntimes=100) }) names(genomic_enrichment) &lt;- sapply(features,function(x){paste0(x,collapse=&quot;_&quot;)}) res.TN &lt;- do.call(rbind,genomic_enrichment) %&gt;%rownames_to_column(var=&quot;Type&quot;) fwrite(res.TN,file=&quot;res/BRCA_ChIA-PET_GF_N_MHB_T_enrichment100.txt&quot;,sep=&quot;\\t&quot;,quote=F,row.names=F) # Breast normal MHB &amp; BRCA ChIA-PET MHB_N &lt;- fread(&quot;/sibcb2/bioinformatics2/zhangzhiqiang/MHB_WGBS/BAM/MHB_out/MHB_Cancer2/MHB_RES/normal/MHB_breast_normal.bed&quot;) %&gt;% toGRanges() Th.N &lt;- findOverlaps(CpG,MHB_N,type=&quot;any&quot;,ignore.strand=T) MHB_CpG.N &lt;- CpG[queryHits(Th.N)] ## Do enrichment breast normal MHB &amp; BRCA ChIA-PET genomic_enrichment &lt;- lapply(features,function(x){ y &lt;- Chia_GF_F %&gt;% plyranges::filter(Type %in% x ) z &lt;- Chia_GF_R %&gt;% plyranges::filter(Type %in% x ) genomic_enrichment(y,z,MHB_CpG.N,CpG_sites=CpG,ntimes=100) }) names(genomic_enrichment) &lt;- sapply(features,function(x){paste0(x,collapse=&quot;_&quot;)}) res.NT &lt;- do.call(rbind,genomic_enrichment) %&gt;%rownames_to_column(var=&quot;Type&quot;) fwrite(res.NT,file=&quot;res/BRCA_ChIA-PET_GF_T_MHB_N_enrichment100.txt&quot;,sep=&quot;\\t&quot;,quote=F,row.names=F) # Do enrichment breast normal MHB &amp; normal ChIA-PET genomic_enrichment = lapply(features,function(x){ y &lt;- Chia_GF_NF %&gt;% plyranges::filter(Type %in% x ) z &lt;- Chia_GF_NR %&gt;% plyranges::filter(Type %in% x ) genomic_enrichment(y,z,MHB_CpG.N,CpG_sites=CpG,ntimes=100) }) names(genomic_enrichment) &lt;- sapply(features,function(x){paste0(x,collapse=&quot;_&quot;)}) res.NN &lt;- do.call(rbind,genomic_enrichment) %&gt;%rownames_to_column(var=&quot;Type&quot;) fwrite(res.NN,file=&quot;res/BRCA_ChIA-PET_GF_N_MHB_N_enrichment100.txt&quot;,sep=&quot;\\t&quot;,quote=F,row.names=F) # read data res.TT = fread(&quot;res/BRCA_ChIA-PET_GF_T_MHB_T_enrichment100.txt&quot;) res.TN = fread(&quot;res/BRCA_ChIA-PET_GF_N_MHB_T_enrichment100.txt&quot;) res.NT = fread(&quot;res/BRCA_ChIA-PET_GF_T_MHB_N_enrichment100.txt&quot;) res.NN = fread(&quot;res/BRCA_ChIA-PET_GF_N_MHB_N_enrichment100.txt&quot;) data &lt;- rbind(res.TT,res.NT,res.TN,res.NN) %&gt;% mutate(Clusters = rep(c(&quot;TT&quot;,&quot;NT&quot;,&quot;TN&quot;,&quot;NN&quot;),each=10)) %&gt;% mutate(MHB=str_sub(Clusters,1,1),Tissue=str_sub(Clusters,2,2), Tissue=ifelse(Tissue==&quot;N&quot;,&quot;MCF10A&quot;,&quot;MCF7&quot;) %&gt;%fct_rev(), MHB = ifelse(MHB==&quot;T&quot;,&quot;BRCA MHBs&quot;,&quot;Normal MHBs&quot;), Type = factor(Type,levels=c(&quot;LMR&quot;,&quot;PMD&quot;,&quot;UMR&quot;,&quot;HMR&quot;,&quot;PMD_LMR&quot;,&quot;UMR_LMR&quot;,&quot;PMD_UMR&quot;,&quot;HMR_PMD&quot;,&quot;HMR_UMR&quot;,&quot;HMR_LMR&quot;))) p &lt;- ggplot(data,aes(x=Type,y=fold_enrichment,fill=MHB)) + geom_bar(stat=&quot;identity&quot;,position=position_dodge()) + scale_fill_brewer(palette=&quot;Set1&quot;) + labs(x=&quot;&quot;,y=&quot;fold enrichment&quot;,title=&quot;MHB in ChIA-PET enrichment&quot;) + geom_hline(yintercept = 1,linetype=&quot;dashed&quot;,colour = &quot;grey&quot;,linewidth=0.5) + theme_bw() + theme(axis.text.x =element_text(angle=60,hjust=1), panel.background=element_blank(), panel.grid=element_blank(), plot.title=element_text(hjust=0.5)) + facet_wrap(~Tissue,ncol=1) ggsave(p,filename=&quot;MHB_ChIA_PET_GF_enrichment1.pdf&quot;,width=4,height=5) 2.6: Fig2.G "],["figure-3.html", " 3 Figure 3 3.1 (A). MHB vs DMR 3.2 (B-C). Enrichment of Cancer MHBs in DMR (LOLA) 3.3 (D-E). ESCC DNAm and RNA profiles (GSE149608) 3.4 (F-G). TF activities", " 3 Figure 3 Figure 3. MHBs are associated with dysregulation of gene expression in cancers. (A) Annotation of MHBs to DMRs. Hyper, hyper-DMR. Hypo, hypo-DMR. NC, no significant change. ND, not determined. (B-C) The enrichment of MHBs in hyper- and hypo-DMRs, respectively. Enrichment test was performed by R package LOLA, using the union of MHBs as the background. The resulting p-values for significant enrichment were ranked across all cancer types (FDR &lt; 0.01). The black rectangle highlights the top one. Nonsignificant (FDR &gt; 0.01) results are shown in grey. (D) Association of MHBs and dysregulation of gene expression in ESCC. For a dataset of esophageal squamous cell carcinoma (ESCC, GSE149608) with 10 tumor and paired 10 normal WGBS and RNA-seq samples, DMRs were identified using Metilene (FDR &lt; 0.05, Δbeta &gt; 0.1). ESCC cancer MHBs (n = 27497) were identified using mHapSuite. The identification of potentially genes regulated by MHB and DMR using rGREAT with default parameters. Meanwhile, the DEGs (n = 2769) between ESCC and adjacent normal tissue performed by wilcoxon rank sum test (Log2FC &gt;= 1, FDR &lt; 0.05). Genes without DMRs were used to construct a 2x2 contingency table that separates each gene into one of four categories based on two factors, i.e., status of MHB and differential expression. Statistical significance was evaluated by Fisher’s exact test. (E) A heatmap shows the mean methylation and expression of upregulated genes that also contains MHBs. (F) A heatmap shows the transcription factors (TF) activities between ESCC and normal tissues. The estimation of TF activities with RNA-seq by using decoupleR. The top 50 variable regulators activity difference between ESCC and normal samples were displayed. The genes involved in G2M checkpoint, Wnt signaling and P53 pathway were colored in red, green and blue, respectively. (G). TF ChIP-seq profiles from the ESCC cell line TE5 and TE10 to validate the activity of KLF5 and SOX2. MHB regions were classified as ESCC tumor-specific (n = 20778), normal-specific (n = 10501), or shared (n = 7368). Random genomic background (n = 27497) was generated by ‘bedtools shuffle’ function. 3.1 (A). MHB vs DMR # =============== shell command ==================== # 1. DMR calling (Metilene) # prepare the metilene input files tag=&quot;breast&quot; metilene_input.pl --in1 merged_CpG/${tag}_T_Merged_CpG.bedGraph \\ --in2 merged_CpG/${tag}_N_Merged_CpG.bedGraph \\ --out metilene_input/${tag}_metilene_input.bedGraph \\ --h1 g1_${tag}_T \\ --h2 g2_${tag}_N # call DMR metilene_linux64 -t 10 -c 2 -m 5 -a g1 -b g2 metilene_input/${tag}_metilene_input.bedGraph | \\ sort -V -k1,1 -k2,2n | \\ awk &#39;{OFS=&quot;\\t&quot;} {if ($4&lt;=0.05 &amp;&amp; $5&lt;0.1) {print $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,&quot;Hypo&quot;} else if($4&lt;=0.05 &amp;&amp; $5&gt;0.1){print $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,&quot;Hyper&quot;} else {print $0,&quot;NC&quot;}}&#39; &gt; metilene_res/${tag}_de_novo_DMR.bed # 2. tissue type MHB overlap with tissue type DMR DMR_path=&quot;metilene_res/&quot; tsMHB_path=&quot;Data/Processed_data/MHB/tumor&quot; for i in `ls $DMR_path/*_DMR.bed` do a=$(echo ${i##*/} |sed &#39;s/_de_novo_DMR.bed//g&#39;) if [[ &quot;${a}&quot; == *&quot;breast&quot;* ]];then tag_T=&quot;MHB_BRCA.bed&quot; elif [[ &quot;${a}&quot; == *&quot;colon&quot;* ]];then tag_T=&quot;MHB_COAD.bed&quot; elif [[ &quot;${a}&quot; == *&quot;esophagus&quot;* ]];then tag_T=&quot;MHB_ESCA.bed&quot; elif [[ &quot;${a}&quot; == *&quot;head_and_neck&quot;* ]];then tag_T=&quot;MHB_HNSC.bed&quot; elif [[ &quot;${a}&quot; == *&quot;lung&quot;* ]];then tag_T=&quot;MHB_NSCLC.bed&quot; elif [[ &quot;${a}&quot; == *&quot;liver&quot;* ]];then tag_T=&quot;MHB_LIHC.bed&quot; elif [[ &quot;${a}&quot; == *&quot;pancreas&quot;* ]];then tag_T=&quot;MHB_PACA.bed&quot; elif [[ &quot;${a}&quot; == *&quot;ovary&quot;* ]];then tag_T=&quot;MHB_OV.bed&quot; elif [[ &quot;${a}&quot; == *&quot;stomach&quot;* ]];then tag_T=&quot;MHB_STAD.bed&quot; elif [[ &quot;${a}&quot; == *&quot;thyroid&quot;* ]];then tag_T=&quot;MHB_THCA.bed&quot; fi tsMHB=${tsMHB_path}/${tag_T} bedtools intersect -a ${tsMHB} -b ${i} -wa -wb -loj | \\ awk &#39;{OFS=&quot;\\t&quot;} {if ($14==&quot;.&quot;) {print $1,$2,$3,&quot;&#39;&quot;${a}&quot;&#39;&quot;,&quot;NC&quot;} else {print $1,$2,$3,&quot;&#39;&quot;${a}&quot;&#39;&quot;,$14}}&#39;|\\ bedtools merge -i - -c 4,5,5 -o distinct,distinct,count_distinct | \\ sort -k1,1 -k2,2n | \\ awk &#39;{OFS=&quot;\\t&quot;} {if($6!=1) {print $1,$2,$3,$4,$5,$6,&quot;ND&quot;}else{print $0,$5}}&#39; &gt;tsMHB_DMR_Overlap/${a}_MHB_DMR.txt done # Cancer type MHB overlap Cancer type DMR files=list.files(&quot;tsMHB_DMR_Overlap&quot;) # BRCA MHB BRCA_MHB_DMR = read.table(&quot;tsMHB_DMR_Overlap/breast_MHB_DMR.txt&quot;,sep=&quot;\\t&quot;,header=F) BRCA_count = BRCA_MHB_DMR %&gt;% group_by(V4,V7) %&gt;% summarize(DMR_count=n()) MHB_DMR_CS = list() MHB_DMR_CS[[&quot;breast&quot;]] &lt;- BRCA_count for (i in files[-1]){ tag = gsub(&quot;_MHB_DMR.txt&quot;,&quot;&quot;,i) mx = read.table(paste0(&quot;tsMHB_DMR_Overlap/&quot;,i),sep=&quot;\\t&quot;,header=F) nx = mx %&gt;% group_by(V4,V7) %&gt;% summarize(DMR_count=n()) MHB_DMR_CS[[tag]] &lt;-nx } MHB_DMR_frq = as.data.frame(do.call(rbind,MHB_DMR_CS)) MHB_DMR_frq$type = paste0(MHB_DMR_frq$V4,&quot;_cancer&quot;) MHB_DMR_frq = MHB_DMR_frq %&gt;% group_by(type) %&gt;% mutate(Freq=100*DMR_count/sum(DMR_count)) pdf(file=&quot;Data/Figures/Fig3/Fig3.A.pdf&quot;,width=4,height=5.5) p&lt;-ggplot(MHB_DMR_frq,aes(x=type,y=DMR_count)) + geom_bar(aes(fill=V7),stat=&quot;identity&quot;,position = position_fill(reverse = TRUE))+ labs(x=&quot;&quot;,y=&quot;Percent (%)&quot;) + scale_fill_brewer(palette = &quot;Set1&quot;) + scale_y_continuous(breaks=c(0,0.25,0.5,0.75,1),labels=100*c(0,0.25,0.5,0.75,1))+ theme_bw()+ theme(panel.background = element_blank(), panel.grid =element_blank(), axis.ticks.length=unit(5,&#39;pt&#39;), axis.text.x =element_text(angle=90,vjust=0.5), plot.title=element_text(hjust=0.5), legend.position = &quot;top&quot;) + guides(fill=guide_legend(title=&quot;&quot;)) print(p) dev.off() 3.2 (B-C). Enrichment of Cancer MHBs in DMR (LOLA) library(&quot;LOLA&quot;) library(GenomicRanges) library(reshape2) library(tidyverse) mhb_clusters=&quot;Data/Processed_data/MHB/mhb_clusters/&quot; background=&quot;Data/Processed_data/MHB/MHB_11_cancers_clusters.bed&quot; ## Hyper DMR files = list.files(mhb_clusters) locResults = lapply(files,function(i){ mhb=readBed(paste0(mhb_clusters,i)) # Universe_Sets Background universe_set=readBed(background) # Load regionDB states=loadRegionDB(&quot;Data/Processed_data/MR/LOLA_Hyper_DB/&quot;) # Runing LOLA runLOLA(mhb, universe_set, states, cores=10) }) names(locResults) &lt;- files data &lt;- lapply(files,function(i){ mx = locResults[[i]][,c(&quot;pValueLog&quot;,&quot;filename&quot;)] %&gt;% mutate(Type=i,q=p.adjust(p=10^(-pValueLog),method=&quot;BH&quot;,n=10)) %&gt;% dplyr::select(-pValueLog) }) data = as.data.frame(do.call(rbind,data)) dta = dcast(data,Type~filename) rownames(dta) = dta$Type;dta$Type=NULL dta = dta[c(&quot;BRCA_cluster.bed&quot;,&quot;CESC_cluster.bed&quot;,&quot;COAD_cluster.bed&quot;,&quot;ESCA_cluster.bed&quot;,&quot;HNSC_cluster.bed&quot;,&quot;LIHC_cluster.bed&quot;,&quot;NSCLC_cluster.bed&quot;,&quot;OV_cluster.bed&quot;,&quot;PACA_cluster.bed&quot;,&quot;STAD_cluster.bed&quot;, &quot;THCA_cluster.bed&quot;,&quot;cluster12.bed&quot;,&quot;cluster13.bed&quot;,&quot;cluster14.bed&quot;,&quot;cluster15.bed&quot;,&quot;cluster16.bed&quot;),] dta_t = -log10(dta) # filter FDR &lt; 0.01 and then ranking dta_t[dta_t&lt;2]&lt;-NA rank_t = function(x) { m = rank(array(-x),na.last=&quot;keep&quot;,ties.method = &quot;min&quot;) return(m) } data_rank= as.data.frame(t(apply(dta_t,1,rank_t))) names(data_rank) = names(dta_t) # PLOT pdf(file=&quot;Data/Figures/Fig3/Fig3.B.pdf&quot;,width=6,height=6) p&lt;- pheatmap(data_rank,main=&quot;MHBs Overlap with Hyper-DMRs&quot;, show_colnames=T,show_rownames=T, cluster_rows=F,cluster_cols=F, scale=&quot;none&quot;,angle_col=45, color=colorRampPalette(colors = c(&quot;firebrick&quot;,&quot;white&quot;,&quot;darkblue&quot;))(1000)) print(p) dev.off() ## Hypo DMR locResults = lapply(files,function(i){ mhb=readBed(paste0(mhb_clusters,i)) # Universe_Sets Background universe_set=readBed(background) # Load regionDB states=loadRegionDB(&quot;Data/Processed_data/MR/LOLA_Hypo_DB/&quot;) # Runing LOLA runLOLA(mhb, universe_set, states, cores=10) }) names(locResults) &lt;- files data &lt;- lapply(files,function(i){ mx = locResults[[i]][,c(&quot;pValueLog&quot;,&quot;filename&quot;)] %&gt;% mutate(Type=i,q=p.adjust(p=10^(-pValueLog),method=&quot;BH&quot;,n=10)) %&gt;% dplyr::select(-pValueLog) }) data = as.data.frame(do.call(rbind,data)) dta = dcast(data,Type~filename) rownames(dta) = dta$Type;dta$Type=NULL dta = dta[c(&quot;BRCA_cluster.bed&quot;,&quot;CESC_cluster.bed&quot;,&quot;COAD_cluster.bed&quot;,&quot;ESCA_cluster.bed&quot;,&quot;HNSC_cluster.bed&quot;,&quot;LIHC_cluster.bed&quot;,&quot;NSCLC_cluster.bed&quot;,&quot;OV_cluster.bed&quot;,&quot;PACA_cluster.bed&quot;,&quot;STAD_cluster.bed&quot;, &quot;THCA_cluster.bed&quot;,&quot;cluster12.bed&quot;,&quot;cluster13.bed&quot;,&quot;cluster14.bed&quot;,&quot;cluster15.bed&quot;,&quot;cluster16.bed&quot;),] dta_t = -log10(dta) # filter FDR &lt; 0.01 and then ranking dta_t[dta_t&lt;2]&lt;-NA rank_t = function(x) { m = rank(array(-x),na.last=&quot;keep&quot;,ties.method = &quot;min&quot;) return(m) } data_rank= as.data.frame(t(apply(dta_t,1,rank_t))) names(data_rank) = names(dta_t) # PLOT pdf(file=&quot;Data/Figures/Fig3/Fig3.C.pdf&quot;,width=6,height=6) p&lt;- pheatmap(data_rank,main=&quot;MHBs Overlap with Hypo-DMRs&quot;, show_colnames=T,show_rownames=T, cluster_rows=F,cluster_cols=F, scale=&quot;none&quot;,angle_col=45, color=colorRampPalette(colors = c(&quot;firebrick&quot;,&quot;white&quot;,&quot;darkblue&quot;))(1000)) print(p) dev.off() 3.1: Fig3.B-C 3.3 (D-E). ESCC DNAm and RNA profiles (GSE149608) # Association of MHBs and dysregulation of gene expression in ESCC library(rGREAT) library(regioneR) library(data.table) # GREAT genome genes (hg19) Tss_data &lt;- fread(&quot;Data/Processed_data/GREATv4.genes.promoter_UD1000.hg19.bed&quot;) %&gt;% rename_with(~c(&quot;chr&quot;,&quot;start&quot;,&quot;end&quot;,&quot;strand&quot;,&quot;genes&quot;)) # Step1: MHB ESCC_T_MHB &lt;- &quot;Data/Processed_data/MHB/Public/MHB_ESCC.bed&quot; ESCC_N_MHB &lt;- &quot;Data/Processed_data/MHB/Public/MHB_Esophagus_N.bed&quot; # MHB gene annotation MHBGenes_TSS &lt;- lapply(c(ESCC_T_MHB,ESCC_N_MHB),function(y){ toGRanges(y) %&gt;% great(&quot;MSigDB:H&quot;,&quot;GREAT:hg19&quot;) %&gt;% getRegionGeneAssociations() %&gt;% as.data.frame() %&gt;% mutate(annotated_genes=lapply(annotated_genes,function(x){ x %&gt;% paste(collapse=&quot;,&quot;) }) %&gt;% do.call(rbind,.) %&gt;% as.character(), dist_to_TSS = lapply(dist_to_TSS,function(x){ x %&gt;% paste(collapse=&quot;,&quot;) }) %&gt;% do.call(rbind,.) %&gt;% as.character()) %&gt;% separate_rows(annotated_genes,dist_to_TSS,sep=&quot;,&quot;,convert=TRUE) %&gt;% mutate(Type=ifelse(str_detect(y,&quot;ESCC&quot;),&quot;esophagus_T&quot;,&quot;esophagus_N&quot;))}) names(MHBGenes_TSS) =c(&quot;esophagus_T&quot;,&quot;esophagus_N&quot;) # step2: Load DEGs load(&quot;Data/Processed_data/ESCC/ESCC_log2TPM_Wilcox.RData&quot;) ESCC_DEGs &lt;- ESCC_log2TPM_Wilcox DEGs_up &lt;- ESCC_DEGs %&gt;% filter(P_DEG==&quot;Up&quot;) %&gt;% rownames_to_column(var=&quot;genes&quot;) %&gt;% pull(genes) %&gt;% unique() DEGs_down &lt;- ESCC_DEGs %&gt;% filter(P_DEG==&quot;Down&quot;) %&gt;% rownames_to_column(var=&quot;genes&quot;) %&gt;% pull(genes) %&gt;% unique() # Step 3: Load DMR (Wilcoxon or Metilene) # 3.1 ESCC DNAme promoter +/- TSS 1K (Differentially of Methylation of Promoters) DNAme_path=&quot;DNAme/Sample_levels&quot; files = list.files(DNAme_path,pattern=&quot;_TSS1k.txt&quot;) files = files[str_detect(files,&quot;esophagus&quot;)] ESCC_TSS_DNAme &lt;- lapply(files,function(x) { fread(paste0(DNAme_path,&quot;/&quot;,x)) %&gt;% transmute(chr=Chr,start=Start -1, end=End,beta=ifelse(tBase&gt;=10,round(mBase/tBase,3),NA), Type=str_replace_all(x,&quot;_TSS1k.txt&quot;,&quot;&quot;)) %&gt;% cbind(Tss_data %&gt;% dplyr::select(&quot;genes&quot;)) %&gt;% dplyr::select(genes,beta,Type) }) ESCC_DNAme &lt;- do.call(rbind,ESCC_TSS_DNAme) %&gt;% as.data.frame() %&gt;% pivot_wider(names_from=Type,values_from=beta,values_fn=mean) %&gt;% column_to_rownames(var=&quot;genes&quot;) %&gt;% na.omit() # Wilcoxon test between T vs N Diff_DNAme &lt;- function(x){ pData = names(x) Normal = as.numeric(as.character(na.omit(x[grep(&quot;N&quot;,pData,value=T)]))) Tumor = as.numeric(as.character(na.omit(x[grep(&quot;T&quot;,pData,value=T)]))) delta = mean(Tumor) - mean(Normal) N &lt;- mean(Normal) ; T &lt;- mean(Tumor) p_value =wilcox.test(Normal,Tumor,paired=T)$p.value res = c(delta,N,T,p_value) return(res) } res&lt;- as.data.frame(t(apply(ESCC_DNAme,1,Diff_DNAme))) names(res) =c(&quot;delta&quot;,&quot;Mean_N&quot;,&quot;Mean_T&quot;,&quot;P_value&quot;) ESCC_DNAme_res = cbind(ESCC_DNAme,res) %&gt;% mutate(FDR = p.adjust(P_value,method=&quot;BH&quot;,n=length(P_value)), DM = ifelse(delta&gt;0.1 &amp; FDR &lt;= 0.05,&quot;Hyper&quot;, ifelse(delta&lt; -0.1 &amp; FDR &lt;= 0.05,&quot;Hypo&quot;,&quot;NC&quot;)), T_beta = ifelse(Mean_T&gt;=0.8,&quot;High&quot;,ifelse(Mean_T&lt;=0.2,&quot;Low&quot;,&quot;Intermediate&quot;))) # 3.2 Call DMR metilene DMR_Metilene &lt;- fread(&quot;Data/Processed_data/ESCC/ESCC_T_N_de_novo_DMR.bed&quot;) %&gt;% toGRanges() %&gt;% great(&quot;MSigDB:H&quot;,&quot;GREAT:hg19&quot;) %&gt;% getRegionGeneAssociations() %&gt;% as.data.frame() %&gt;% mutate(annotated_genes=lapply(annotated_genes,function(x){ x %&gt;% paste(collapse=&quot;,&quot;) }) %&gt;% do.call(rbind,.) %&gt;% as.character(), dist_to_TSS = lapply(dist_to_TSS,function(x){ x %&gt;% paste(collapse=&quot;,&quot;) }) %&gt;% do.call(rbind,.) %&gt;% as.character()) %&gt;% separate_rows(annotated_genes,dist_to_TSS,sep=&quot;,&quot;,convert=TRUE) # 3.3 Non-DMR ## the genes are not regulated by DMR common_genes &lt;- intersect(rownames(ESCC_log2TPM),Tss_data %&gt;% pull(genes)) # Non DMR genes if(1){ ## from metilene DMR DMR_genes &lt;- DMR_Metilene %&gt;% filter(V11 != &quot;NC&quot;) %&gt;% pull(annotated_genes) %&gt;% unique() ## Non_DMR_genes &lt;- setdiff(common_genes, DMR_genes) }else {. ## from Wilcoxon test Non_DMR_genes &lt;- ESCC_DNAme_res %&gt;% filter(DM == &quot;NC&quot;) %&gt;% rownames_to_column(var=&quot;genes&quot;) %&gt;% pull(genes) %&gt;% unique() Non_DMR_genes &lt;- intersect(Non_DMR_genes,common_genes) } # Revome the promoter delta Beta &gt; 0.1 genes_N &lt;- ESCC_DNAme_res %&gt;% filter(abs(delta) &lt; 0.1) %&gt;% rownames_to_column(var=&quot;genes&quot;) %&gt;% pull(genes) %&gt;% unique() Non_DMR_genes &lt;- intersect(Non_DMR_genes,genes_N) # save Non_DMR_Genes_TSS &lt;- Tss_data %&gt;% filter(genes %in% Non_DMR_genes) %&gt;% transmute(chr=chr,start=start+500, end=end-499,gene=genes) write.table(Non_DMR_Genes_TSS,file=&quot;ESCC_Non_DMR_GENES_TSS_500.bed&quot;,sep=&quot;\\t&quot;,row.names=F,quote=F,col.names=F) # 4.Integration analysis of MHB, DMRs, DEGs DNAme_MHB_Exp &lt;- lapply(c(&quot;esophagus_T&quot;,&quot;esophagus_N&quot;),function(x){ mhbgenes &lt;- MHBGenes_TSS[[x]] %&gt;% pull(annotated_genes) %&gt;% unique() # 1932 DEGs_up &lt;- ESCC_DEGs %&gt;% rownames_to_column(var=&quot;genes&quot;) %&gt;% filter(genes %in% common_genes,P_DEG == &quot;Up&quot;) %&gt;% pull(genes) %&gt;% unique() # 837 DEGs_down &lt;- ESCC_DEGs %&gt;% rownames_to_column(var=&quot;genes&quot;) %&gt;% filter(genes %in% common_genes, P_DEG == &quot;Down&quot;) %&gt;% pull(genes) %&gt;% unique() NonDMR_DEG_up &lt;- intersect(DEGs_up,Non_DMR_genes) NonDMR_DEG_DN &lt;- intersect(DEGs_down,Non_DMR_genes) # 2 x 2 table a &lt;- intersect(mhbgenes,NonDMR_DEG_up) %&gt;% length() # 22 b &lt;- setdiff(NonDMR_DEG_up,mhbgenes) %&gt;% length() # 106 d &lt;- intersect(mhbgenes,NonDMR_DEG_DN) %&gt;% length() # 0 e &lt;- setdiff(NonDMR_DEG_DN,mhbgenes) %&gt;% length() # 25 cat(a,b,d,e,&quot;\\n&quot;) fisher.test(matrix(c(d,e,a,b),ncol=2,nrow=2))%&gt;% broom::tidy() }) # show case the cancer mhb associated genes with up-regulation and the methylation levels of promoter without any changes. mhbgenes &lt;- mhbgenes &lt;- MHBGenes_TSS[[&quot;esophagus_T&quot;]] %&gt;% pull(annotated_genes) %&gt;% unique() NonDMR_DEG_up &lt;- intersect(DEGs_up,Non_DMR_genes) hint &lt;- intersect(mhbgenes,NonDMR_DEG_up) # sample heatmap preparation data.DNAme &lt;- ESCC_DNAme_res %&gt;% dplyr::select(contains(&quot;esophagus&quot;)) %&gt;% rownames_to_column(var=&quot;genes&quot;) %&gt;% filter(genes %in% hint) %&gt;% arrange(genes) %&gt;% column_to_rownames(var=&quot;genes&quot;) %&gt;% rename_with(~gsub(&quot;esophagus_&quot;,&quot;&quot;,.x)) data.RNA &lt;- ESCC_log2TPM_Wilcox %&gt;% dplyr::select(contains(&quot;GSM&quot;)) %&gt;% rename_with(~str_split_i(.x,&quot;_&quot;,i=2)) %&gt;% rownames_to_column(var=&quot;genes&quot;) %&gt;% filter(genes %in% hint) %&gt;% arrange(genes) %&gt;% column_to_rownames(var=&quot;genes&quot;) # PLOT DNA methylation &amp; Gene expression in MHB-associated up-regulated genes library(ComplexHeatmap) library(circlize) # Annotation mhb_N &lt;- MHBGenes_TSS[[&quot;esophagus_N&quot;]] %&gt;% pull(annotated_genes) %&gt;% unique() mhb_Anno &lt;- data.frame(gene=hint,Normal= (hint %in% mhb_N),Tumor=&quot;TRUE&quot;) # DNAme column_ha_1 = HeatmapAnnotation(Assay = rep(&quot;WGBS&quot;,20) , Type = ifelse(str_detect( names(data.DNAme),&quot;N&quot;),&quot;Normal&quot;,&quot;Tumor&quot;) ) row_ha_1 = rowAnnotation(MHB_T = rep(1,22), MHB_N= ifelse(str_detect(mhb_Anno$Normal,&quot;TRUE&quot;),1,0)) colfun11 &lt;- colorRamp2(breaks = c(0, 0.5, 1), colors = c(&#39;darkblue&#39;, &#39;white&#39;, &#39;firebrick&#39;)) # RNA column_ha_2 = HeatmapAnnotation(Assay = rep(&quot;RNA&quot;,20) , Type = ifelse(str_detect( names(data.DNAme),&quot;N&quot;),&quot;Normal&quot;,&quot;Tumor&quot;) ) row_ha_2 = rowAnnotation(MHB_T = rep(1,22), MHB_N= ifelse(str_detect(mhb_Anno$Normal,&quot;TRUE&quot;),1,0)) colfun2 &lt;- colorRamp2(breaks = c(-3, 0, 3), colors = c(&#39;darkblue&#39;, &#39;white&#39;, &#39;firebrick&#39;)) data.RNA.scale = t(scale(t(as.matrix(data.RNA)))) pdf(file=&quot;NonDMR_MHB_22_DNAme_DEGs.pdf&quot;,width=13,heigh=8) p11 &lt;- Heatmap(as.matrix(data.DNAme),name=&quot;Beta&quot;, col=colfun11,cluster_columns= F, top_annotation = column_ha_1, left_annotation = row_ha_1) p21 &lt;- Heatmap(data.RNA.scale,name=&quot;log2TPM(scaled)&quot;, col=colfun2,cluster_columns= F, top_annotation = column_ha_2) p&lt;- p11+p21 print(p) dev.off() # Mean methyltion profiles of the genes promoter regions (Non DMR genes). path=&quot;DNAme_Exp_N_T/DNAme&quot; # 1069 genes with Non-DMR for i in esophagus_N_CpG_BED6.bed esophagus_T_CpG_BED6.bed do beta_profile_region.py \\ -r ESCC_Non_DMR_GENES_TSS_500.bed \\ -i ${path}/${i} \\ -o profiles/${i%_*}_NonDMR_CpGTools_TSS1K done 3.2: Fig3.D-E 3.4 (F-G). TF activities #show the TF regulon of ESCC by Decouple library(tidyverse) library(stringr) library(decoupleR) library(limma) library(regioneR) library(rGREAT) library(data.table) library(ggplot2) library(pheatmap) library(ggrepel) library(ggplotify) library(patchwork) # Step 1: get all regulons from human net &lt;- decoupleR::get_collectri(organism=&#39;human&#39;, split_complexes=FALSE) TFregul &lt;- net %&gt;% pull(source) %&gt;% unique() regulon_gmt &lt;- lapply(TFregul,function(x){net %&gt;% filter(source==x) %&gt;% pull(target)}) names(regulon_gmt)&lt;-TFregul ###write gmt write_gmt &lt;- function(x,filename) { output&lt;-file(filename,open = &quot;wt&quot;) name &lt;- names(x) lapply(name,function(y){ writeLines(paste(c(y,&quot;NA&quot;,x[[y]]),collapse = &quot;\\t&quot;),con = output) }) close(output) } write_gmt(regulon_gmt,file=&quot;TFregulon.gmt&quot;) # Step 2: MHB ESCC_T_MHB &lt;- &quot;Data/Processed_data/MHB/Public/MHB_ESCC.bed&quot; ESCC_N_MHB &lt;- &quot;Data/Processed_data/MHB/Public/MHB_Esophagus_N.bed&quot; # MHB gene annotation MHBGenes_TSS &lt;- lapply(c(ESCC_T_MHB,ESCC_N_MHB),function(y){ toGRanges(y) %&gt;% great(&quot;MSigDB:H&quot;,&quot;GREAT:hg19&quot;) %&gt;% getRegionGeneAssociations() %&gt;% as.data.frame() %&gt;% mutate(annotated_genes=lapply(annotated_genes,function(x){ x %&gt;% paste(collapse=&quot;,&quot;) }) %&gt;% do.call(rbind,.) %&gt;% as.character(), dist_to_TSS = lapply(dist_to_TSS,function(x){ x %&gt;% paste(collapse=&quot;,&quot;) }) %&gt;% do.call(rbind,.) %&gt;% as.character()) %&gt;% separate_rows(annotated_genes,dist_to_TSS,sep=&quot;,&quot;,convert=TRUE) %&gt;% mutate(Type=ifelse(str_detect(y,&quot;ESCC&quot;),&quot;esophagus_T&quot;,&quot;esophagus_N&quot;))}) names(MHBGenes_TSS) =c(&quot;esophagus_T&quot;,&quot;esophagus_N&quot;) MHBGenes_T &lt;- MHBGenes_TSS[[&quot;esophagus_T&quot;]] %&gt;% pull(annotated_genes) %&gt;% unique() MHBGenes_N &lt;- MHBGenes_TSS[[&quot;esophagus_N&quot;]] %&gt;% pull(annotated_genes) %&gt;% unique() # step 2.1 rGREAT of regulon regulated by MHB if(!dir.exists(&quot;regulon_MHB&quot;)) dir.create(&quot;regulon_MHB&quot;) # Tumor for ( i in names(regulon_gmt)){ gene &lt;- regulon_gmt[[i]] regulon_MHB&lt;- MHBGenes_TSS[[&quot;esophagus_T&quot;]] %&gt;% filter(annotated_genes %in% gene) write.table(regulon_MHB, file=paste0(&quot;regulon_MHB/&quot;,i,&quot;_regulon_targets_MHB_T.bed&quot;),quote=F,row.names=F,col.names=F,sep=&quot;\\t&quot;) } # step 2.2 do rGREAT of regulon in MHBGene_T regulons &lt;- read_gmt(&quot;TFregulon.gmt&quot;, from = &quot;SYMBOL&quot;, to = &quot;ENTREZ&quot;, orgdb = &quot;org.Hs.eg.db&quot;) regulons_MHB_enrichment &lt;- toGRanges(ESCC_T_MHB) %&gt;% great(regulons, &quot;hg19&quot;) %&gt;% getEnrichmentTable() %&gt;% filter(p_value_hyper&lt;=0.05) # saving write.table(regulons_MHB_enrichment,file=&quot;regulons_MHB_enrichment_significant.txt&quot;,sep=&quot;\\t&quot;,quote=F,row.names=F) # Step 3: RNA-seq limma # ESCC Exp &amp;&amp; DEGs load(&quot;Data/Processed_data/ESCC/ESCC_log2TPM_Wilcox.RData&quot;) pheno_data = data.frame(&quot;samples&quot;=names(ESCC_log2TPM), &quot;Group&quot;=sapply(strsplit(names(ESCC_log2TPM),&quot;_&quot;),function(x) x[2])) group = factor(substr(pheno_data$Group,1,1),levels=c(&quot;N&quot;,&quot;T&quot;)) ### tumor or normal orign = factor(substr(pheno_data$Group,2,nchar(pheno_data$Group))) ##Paired ############## design &lt;- model.matrix(~group+orign) fit = lmFit(ESCC_log2TPM,design) fit = eBayes(fit) options(digits = 4) deg &lt;- topTable(fit,coef=2,adjust=&#39;BH&#39;,number = 30000,sort.by = &#39;logFC&#39;) %&gt;% select(logFC, t, P.Value) %&gt;% filter(!is.na(t)) %&gt;% as.matrix() # step 4. TF Activity inference with Univariate Linear Model (ULM) sample_acts &lt;- run_ulm(mat=ESCC_log2TPM, net=net, .source=&#39;source&#39;, .target=&#39;target&#39;, .mor=&#39;mor&#39;, minsize = 5) # Visualization n_tfs &lt;- 50 sample_acts_mat &lt;- sample_acts %&gt;% pivot_wider(id_cols = &#39;condition&#39;, names_from = &#39;source&#39;, values_from = &#39;score&#39;) %&gt;% column_to_rownames(&#39;condition&#39;) %&gt;% as.matrix() %&gt;% t() %&gt;% na.omit() %&gt;% t() # Get top 50 tfs with more variable means across clusters regulon_mhb_tfs &lt;- regulons_MHB_enrichment %&gt;% pull(id) %&gt;% intersect(colnames(sample_acts_mat)) tfs &lt;- sample_acts %&gt;% filter(source %in% regulon_mhb_tfs ) %&gt;% #### only contains the MHB enriched regulons group_by(source) %&gt;% summarise(std = sd(score)) %&gt;% arrange(-abs(std)) %&gt;% head(n_tfs) %&gt;% pull(source) sample_acts_mat &lt;- sample_acts_mat[,tfs] # Scale per sample sample_acts_mat_scale &lt;- scale(sample_acts_mat) # Ranking Tx &lt;- sample_acts_mat %&gt;% t() %&gt;% as.data.frame() %&gt;% mutate(T=rowMeans(across(contains(&quot;_T&quot;)),na.rm=T), N=rowMeans(across(contains(&quot;_N&quot;)),na.rm=T), cluster=ifelse(T&gt;N,&quot;1&quot;,&quot;2&quot;)) %&gt;% rownames_to_column(var=&quot;name&quot;) %&gt;% arrange(cluster,name) gene_order &lt;- Tx %&gt;% pull(name) sample_acts_mat_scale &lt;- sample_acts_mat_scale[,gene_order] # Choose color palette palette_length = 100 my_color = colorRampPalette(c(&quot;darkblue&quot;, &quot;white&quot;,&quot;firebrick&quot;))(palette_length) my_breaks &lt;- c(seq(-3, 0, length.out=ceiling(palette_length/2) + 1), seq(0.05, 3, length.out=floor(palette_length/2))) # Plot pdf(file=paste0(&quot;Data/Figures/Fig3/Fig3.F.pdf&quot;),width=4,height=8) p&lt;- pheatmap(t(sample_acts_mat_scale), cluster_col=F, cluster_row=F, border_color = NA, color=my_color, breaks = my_breaks) print(p) dev.off() 3.3: Fig3.F # KLF5, SOX2 TF ChIP-seq profiles in ESCC cell line. bw_path=&quot;ChIP/ESCC_TF/&quot; bw1=$1 tag=$2 MHB_TS=&quot;ChIP/profiles/DB/MHB_TS.bed&quot; MHB_NS=&quot;ChIP/profiles/DB/MHB_NS.bed&quot; MHB_Common=&quot;ChIP/profiles/DB/MHB_NT_Common.bed&quot; BG=&quot;ChIP/profiles/DB/ESCC_MHB_random.bed&quot; # matrix computeMatrix reference-point --referencePoint center -S ${bw_path}/$bw1 \\ -R ${MHB_TS} ${MHB_NS} ${MHB_Common} ${BG} \\ -b 2000 -a 2000 -bs 40 --skipZeros \\ --smartLabels -p 20 \\ --outFileNameMatrix profiles/ESCC_${tag}_MHB.tab \\ -o profiles/ESCC_${tag}_MHB.gz # Plot plotHeatmap -m profiles/ESCC_${tag}_MHB.gz \\ --missingDataColor white \\ -out profiles/ESCC_${tag}_MHB_heatprofiles.pdf \\ --colorMap Purples \\ --heatmapHeight 12 --heatmapWidth 3 3.4: Fig3.G "],["figure-4.html", " 4 Figure 4 4.1 (B). CRC single-cell mHap 4.2 (C). CRC single-cell MHBs 4.3 (D) Single cell MHB vs bulk MHB 4.4 (E). Association between gene expression and the present of MHBs in promoter regions. 4.5 (F). Association of gene expression and methylation levels of MHB regions 4.6 (I-J). MHBs and dysregulation of gene expression in CRC. 4.7 (K). TCGA-COAD dataset Validation", " 4 Figure 4 Figure. 4 Validation of cancer MHBs and the associated regulatory role using single-cell data. (A) Schematic of single-cell DNA methylation haplotype (sc-mHap). Assuming one chromosome from a single-cell can be described as two mHaps, CpG methylation was binarized as methylated (mean &gt; 0.9) or un-methylation (mean &lt; 0.1), which were converted to sc-mHaps (upper panel). The bottom panel illustrates an example set of DNA methylation haplotypes across 15 single cells. (B) An example of COAD MHB that was also identified in region (chr1:3,229,375-3,230,473) using CRC single-cell data. (C) Venn diagram showing numbers of overlapping MHBs which were identified from single-cells in different types of samples. (D) Enrichment of single-cell MHBs from primary tumor (PT) across MHBs identified from bulk samples from 11 cancer types. Enrichment was tested LOLA package using MHBs from all cancer types as background. (E) Association between gene expression and presence of MHBs in promoter regions. For each single cell, promoters were categorized into three groups: high methylation (mean &gt; 0.8), intermediate methylation (mean 0.2-0.8), and low methylation (mean &lt; 0.2). Within each group, the expression of genes with MHBs in their promoters was compared to those without MHBs. Statistical significance was evaluated using the Wilcoxon rank-sum test. (F) Association of gene expression and methylation levels of MHB regions. For each single cell, promoters were categorized into two groups: intermediate methylation (mean 0.2-0.8), and low methylation (mean &lt; 0.2). Within each group, genes with MHBs were further divided into two sub-groups according to the methylation levels in MHB regions. Promoters with high methylation (mean &gt; 0.8) were removed due to the small number of genes with MHBs. Statistical significance was evaluated using the Wilcoxon rank-sum test. (G) Association of MHBs and dysregulation of gene expression in CRC. The DEGs (log2FC &gt; =1 &amp; FDR &lt; 0.05) and differentially methylated promoters (Δbeta &gt; 0.1 &amp; FDR &lt; 0.05) were identified using the Wilcoxon rank-sum test. Genes without DMPs were used to construct a 2x2 contingency table that separates each gene into one of four categories based on two factors, i.e., status of MHB and differential expression. Statistical significance was evaluated by Fisher’s exact test. (H) Venn diagram showing the number of up-regulated genes in primary tumor and lymph node compared to normal tissues that harbor MHBs but lack DMRs in the promoter regions. (I) Pathway enrichment of 42 shared MHB-related genes in PT and LN. The online tool in MSigDB was used and top 3 hallmark pathways were shown. (J) A heatmap shows the mean methylation and expression of 42 shared genes that also contains MHBs across single cell. The genes annotated in MYC targets and G2M checkpoint pathways were colored in red. (K) The DNA methylation and gene expression profiles of the 10 genes highlighted in panel J were validated using the TCGA-COAD dataset at different pathological stages. (L) The Kaplan-Meier survival curves comparing disease free survival (DFS) between patient subgroups stratified by the high/low expression (median cutoff) of CBX3 gene in TCGA-COAD dataset. Statistical significance is calculated using log rank test. P value was calculated using the log-rank test, and the HRs were calculated using univariable Cox regression analysis. Promoters were defined as ± 1 kb region around the transcription start site (TSS). 4.1 (B). CRC single-cell mHap # The CRC single cell mHap visualization was performed by mHapSc (https://github.com/yoyoong/mHapSc) # ============ shell command ============= java -jar mHapSc-1.0-jar-with-dependencies.jar R2 -mhapPath CRC_hg19.mhap.gz -cpgPath hg19_CpG.gz \\ -region chr1:3229375-3230473 -outputDir outputDir \\ -tag CRC_hg19 -mhapView 4.1: Fig4.B 4.2 (C). CRC single-cell MHBs # CRC single cell MHB calling. # ============ shell command ============= # Input mhap=CRC_GSE97693.mhap.gz bed=hg19_1000CpG.bed hg19_CpG=hg19_CpG.gz # call MHB binary=mHapSc-1.0-jar-with-dependencies.jar outputDir=MHB/CRC # All CRC single cell bcFile=scMHB_GSE97693/Anno/GSE97693_scMethyl_tumor_id.txt #cell barcode $java8 -jar $binary MHBDiscovery -mHapPath $mhap -bedFile $bed \\ -cpgPath $hg19_CpG -bcFile $bcFile -window 5 -r2 0.5 -pvalue 0.05 \\ -outputDir $outputDir -tag CRC_Tumor_MHB # Normal bcFile=scMHB_GSE97693/Anno/GSE97693_scMethyl_NC_id.txt $java8 -jar $binary MHBDiscovery -mHapPath $mhap -bedFile $bed \\ -cpgPath $hg19_CpG -bcFile $bcFile -window 5 -r2 0.5 -pvalue 0.05 \\ -outputDir $outputDir -tag CRC_MHB_NC # PT bcFile=scMHB_GSE97693/Anno/GSE97693_scMethyl_PT_id.txt $java8 -jar $binary MHBDiscovery -mHapPath $mhap -bedFile $bed \\ -cpgPath $hg19_CpG -bcFile $bcFile -window 5 -r2 0.5 \\ -pvalue 0.05 -outputDir $outputDir -tag CRC_MHB_PT # LN bcFile=scMHB_GSE97693/Anno/GSE97693_scMethyl_LN_id.txt $java8 -jar $binary MHBDiscovery -mHapPath $mhap -bedFile $bed \\ -cpgPath $hg19_CpG -bcFile $bcFile -window 5 -r2 0.5 -pvalue 0.05 \\ -outputDir $outputDir -tag CRC_MHB_LN # ML bcFile=scMHB_GSE97693/Anno/GSE97693_scMethyl_ML_id.txt $java8 -jar $binary MHBDiscovery -mHapPath $mhap -bedFile $bed \\ -cpgPath $hg19_CpG -bcFile $bcFile -window 5 -r2 0.5 -pvalue 0.05 \\ -outputDir $outputDir -tag CRC_MHB_ML # MP bcFile=scMHB_GSE97693/Anno/GSE97693_scMethyl_MP_id.txt $java8 -jar $binary MHBDiscovery -mHapPath $mhap -bedFile $bed \\ -cpgPath $hg19_CpG -bcFile $bcFile -window 5 -r2 0.5 -pvalue 0.05 \\ -outputDir $outputDir -tag CRC_MHB_MP # veen diagram (interveen) intervene venn -i $outputDir/*bed --output MHB_venn 4.2: Fig4.C 4.3 (D) Single cell MHB vs bulk MHB # Enrichment of single-cell MHBs from primary tumor (PT) across MHBs identified from bulk samples from 11 cancer types. #LOLA enrichment library(&quot;LOLA&quot;) library(tidyverse) scMHB_Tumor=&quot;Data/Processed_data/MHB/singlecell/CRC_MHB_PT.bed&quot; background=&quot;Data/Processed_data/MHB/MHB_11_cancers_clusters.bed&quot; mhb=readBed(scMHB_Tumor) # Universe_Sets Background universe_set=readBed(background) # regionDB states=loadRegionDB(&quot;Data/Processed_data/MHB/singlecell/scLOLA/&quot;) # Runing LOLA locResults = runLOLA(mhb, universe_set, states, cores=10) CI &lt;- locResults %&gt;% select(support,b,c,d) %&gt;% apply(1,function(x){ CI.low &lt;- matrix(x,ncol=2,nrow=2) %&gt;% fisher.test() %&gt;% broom::tidy() %&gt;% pull(3) CI.high &lt;- matrix(x,ncol=2,nrow=2) %&gt;% fisher.test() %&gt;% broom::tidy() %&gt;% pull(4) return(c(CI.low,CI.high)) }) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename_with(~c(&quot;CI.low&quot;,&quot;CI.high&quot;)) locResults &lt;- locResults %&gt;% cbind(CI) %&gt;% mutate(OVR=100*round(support/size,4), logFDR=ifelse(qValue==0,300,-log10(qValue)), filename=fct_rev(fct_inorder(str_split_i(filename,&quot;[_.]&quot;,i=2)))) # PLOT pdf(file=&quot;Data/Figures/Fig4/Fig4.D.pdf&quot;,width=8,height=5) p&lt;- ggplot(locResults,aes(x=oddsRatio,y=filename,col=logFDR)) + geom_point(aes(size=OVR,col=logFDR),shape=18) + geom_errorbarh(aes(xmax = CI.high, xmin = CI.low), height = 0,size=1)+ scale_color_gradient2(midpoint=0.5*max(locResults$logFDR),space =&quot;Lab&quot;, low=&quot;steelblue&quot;,mid=&quot;orange&quot;,high=&quot;firebrick&quot;) + geom_vline(aes(xintercept = 1),color=&quot;gray&quot;,linetype=&quot;dashed&quot;, size = 0.5)+ scale_x_continuous(limits=c(0.1, 3.2), breaks = seq(0, 3.5, 0.5))+ xlab(&#39;Odds Ratio&#39;) + ylab(&quot; &quot;) + theme_classic() + theme(legend.position = &quot;top&quot;, axis.text = element_text(size=15,color=&quot;black&quot;), axis.title.x = element_text(size=20,color=&quot;black&quot;), axis.ticks.length=unit(0.2, &quot;cm&quot;) ) print(p) dev.off() 4.3: Fig4.D 4.4 (E). Association between gene expression and the present of MHBs in promoter regions. # Show the Relationship of methylation MHB and Gene expression in scRNA-levels library(data.table) library(stringr) library(regioneR) library(pbapply) library(reshape2) # Step 1： promoter methylation scMethyl_Mcounts &lt;- fread(&quot;scMHB_GSE97693/Methyl/promoter_methylated.txt&quot;,header=T) %&gt;% distinct() %&gt;% column_to_rownames(var=&quot;region&quot;) scMethyl_Tcounts &lt;- fread(&quot;scMHB_GSE97693/Methyl/promoter_total.txt&quot;,header=T) %&gt;% distinct() %&gt;% column_to_rownames(var=&quot;region&quot;) # filter Promoter Total covered reads count &lt;3 scMethyl_Tcounts[scMethyl_Tcounts&lt;3]&lt;- NA scMethyl &lt;- scMethyl_Mcounts/scMethyl_Tcounts scMethyl &lt;- scMethyl %&gt;% rownames_to_column(var=&quot;region&quot;) %&gt;% separate(region,into=c(&quot;chr&quot;,&quot;start&quot;,&quot;end&quot;),sep=&quot;[:-]&quot;) %&gt;% mutate(start=as.numeric(start)-1,end=as.numeric(end)) # promoter anno Promoter &lt;- fread(&quot;Data/Processed_data/GREATv4.genes.promoter_UD1000.hg19.bed&quot;) %&gt;% dplyr::rename_with(~c(&quot;chr&quot;,&quot;start&quot;,&quot;end&quot;,&quot;strand&quot;,&quot;SYMBOL&quot;)) scMethyl &lt;- Promoter %&gt;% inner_join(scMethyl,by=c(&quot;chr&quot;,&quot;start&quot;,&quot;end&quot;)) # toGR scMethyl.GR &lt;- makeGRangesFromDataFrame(scMethyl,keep.extra=T) # sample id with Paired RNA &amp; Methylation id &lt;- fread(&quot;scMHB_GSE97693/Anno/GSE97693_scRNA_scMethyl_matched_info.txt&quot;,header=T) %&gt;% select(ID,patients,lesions,assay,tissue,tag) %&gt;% mutate(Methyl_ID = str_split_i(ID,&quot;,&quot;,i=1),Exp_ID=str_split_i(ID,&quot;,&quot;,i=2)) # Promoters overlap with MHBs tag=c(&quot;LN&quot;,&quot;PT&quot;,&quot;ML&quot;,&quot;MP&quot;,&quot;Tumor&quot;) scMHB_Methyl &lt;- pbapply::pblapply(tag,function(x){ path=&quot;Data/Processed_data/MHB/singlecell/&quot; MHB&lt;-toGRanges(paste0(path,&quot;CRC_MHB_&quot;,x,&quot;.bed&quot;)) # overlapping Tx &lt;- findOverlaps(scMethyl.GR,MHB,ignore.strand=T) a&lt;- rep(NA,length(scMethyl.GR)) # MHB a[unique(queryHits(Tx))]&lt;-&quot;T&quot; a[is.na(a)]&lt;-&quot;N&quot; a&lt;- a %&gt;% as.data.frame() names(a)&lt;-&quot;MHB&quot; # sample GSM ID if(x!=&quot;Tumor&quot;){ sid &lt;- id %&gt;% filter(str_detect(tissue,x)) %&gt;% pull(Methyl_ID) }else{ sid &lt;- id %&gt;% pull(Methyl_ID) } # select mcols(scMethyl.GR) %&gt;% as.data.frame() %&gt;% select(SYMBOL,all_of(sid)) %&gt;% cbind(a) %&gt;% separate_rows(SYMBOL,sep=&quot;,&quot;) }) names(scMHB_Methyl) &lt;-tag # Step 2: scRNA + Methylation load(&quot;scMHB_GSE97693/Exp/GSE97693_scRNA_TPM_FPKM.RData&quot;) scMme &lt;- pbapply::pblapply(tag,function(x){ cat(x,&quot;\\n&quot;) # methylation id if(x!=&quot;Tumor&quot;){ mid &lt;- id %&gt;% filter(str_detect(tissue,x)) %&gt;% pull(Methyl_ID) }else{ mid &lt;- id %&gt;% pull(Methyl_ID) } # methylation data reshape data_methyl &lt;- scMHB_Methyl[[x]] %&gt;% melt() %&gt;% drop_na() %&gt;% nest(.by=variable) %&gt;% dplyr::mutate(MM = lapply(data,function(y){ y %&gt;% mutate(type=ifelse(value&gt;=0.8,&quot;high&quot;, ifelse(value&lt;=0.2,&quot;low&quot;,&quot;intermediate&quot;))) })) # show the paired methylation &amp; expression ,one by one SME &lt;- pbapply::pblapply(mid,function(m) { #mean vs median if(1){ ExM &lt;- function(z) mean(z, na.rm = TRUE) }else{ ExM &lt;- function(z) median(z, na.rm = TRUE) } cat(&quot;Processing&quot;,m,&quot;\\n&quot;) # Methylation data &lt;- data_methyl %&gt;% filter(variable==m) %&gt;% pull(MM) %&gt;% as.data.frame() %&gt;% group_by(MHB,type) %&gt;% transmute(genes=paste0(SYMBOL, collapse=&quot;,&quot;)) %&gt;% distinct() # Exp # test the RNA data # paired Exp id eid &lt;- id %&gt;% filter(str_detect(Methyl_ID,m)) %&gt;% pull(Exp_ID) if(sum(str_detect(names(RNA.TPM),eid))==1){ RNA &lt;- RNA.TPM cat(&quot;RNA_TPM &quot;,x, &quot; &quot;,m, &quot; &quot;, eid,&quot;\\n&quot;) flag&lt;-&quot;TPM&quot; }else{ RNA &lt;- RNA.FPKM cat(&quot;RNA_FPKM &quot;,x, &quot; &quot;,m, &quot; &quot;, eid,&quot;\\n&quot;) flag &lt;-&quot;FPKM&quot; } # 6 groups # 1.high_mhb Hm&lt;- data %&gt;% filter(MHB==&quot;T&quot; &amp; type==&quot;high&quot;) %&gt;% pull(genes) %&gt;% str_split_1(pattern=&quot;,&quot;) HmE&lt;- RNA %&gt;% select(contains(eid)) %&gt;% filter(rownames(.) %in% Hm) %&gt;% pull(1) HmE &lt;- log2(ExM(HmE) +1) # 2.high_nonmhb Hnm&lt;- data %&gt;% filter(MHB==&quot;N&quot; &amp; type==&quot;high&quot;) %&gt;% pull(genes) %&gt;% str_split_1(pattern=&quot;,&quot;) HnmE&lt;-RNA %&gt;% select(contains(eid)) %&gt;% filter(rownames(.) %in% Hnm) %&gt;% pull(1) HnmE &lt;- log2(ExM(HnmE) +1) # 3.intermediate_mhb Im&lt;- data %&gt;% filter(MHB==&quot;T&quot; &amp; type==&quot;intermediate&quot;) %&gt;% pull(genes) %&gt;% str_split_1(pattern=&quot;,&quot;) ImE&lt;-RNA %&gt;% select(contains(eid)) %&gt;% filter(rownames(.) %in% Im) %&gt;% pull(1) ImE &lt;- log2(ExM(ImE) +1) # 4.intermediate_nonmhb Inm&lt;- data %&gt;% filter(MHB==&quot;N&quot; &amp; type==&quot;intermediate&quot;) %&gt;% pull(genes) %&gt;% str_split_1(pattern=&quot;,&quot;) InmE&lt;-RNA %&gt;% select(contains(eid)) %&gt;% filter(rownames(.) %in% Inm) %&gt;% pull(1) InmE &lt;- log2(ExM(InmE) +1) # 5.low_mhb Lm&lt;- data %&gt;% filter(MHB==&quot;T&quot; &amp; type==&quot;low&quot;) %&gt;% pull(genes) %&gt;% str_split_1(pattern=&quot;,&quot;) LmE&lt;-RNA %&gt;% select(contains(eid)) %&gt;% filter(rownames(.) %in% Lm) %&gt;% pull(1) LmE &lt;- log2(ExM(LmE) +1) # 6.low_nonmhb Lnm&lt;- data %&gt;% filter(MHB==&quot;N&quot; &amp; type==&quot;low&quot;) %&gt;% pull(genes) %&gt;% str_split_1(pattern=&quot;,&quot;) LnmE&lt;-RNA %&gt;% select(contains(eid)) %&gt;% filter(rownames(.) %in% Lnm) %&gt;% pull(1) LnmE &lt;- log2(ExM(LnmE) +1) # the Exp of methylation level in one cell c(HmE,HnmE,ImE,InmE,LmE,LnmE,flag) }) names(SME) &lt;- mid # cancer type : promoter methyltion + MHB + Expression CME &lt;- do.call(rbind,SME) %&gt;% as.data.frame() %&gt;% dplyr::rename_with(~c(&quot;HmE&quot;,&quot;HnmE&quot;,&quot;ImE&quot;,&quot;InmE&quot;,&quot;LmE&quot;,&quot;LnmE&quot;,&quot;Ex&quot;)) %&gt;% mutate(ID=rownames(.)) }) names(scMme) &lt;- tag # sc_MMET: Methylation + MHB + Exp GSE97693_scMMET &lt;- scMme # Step 3: PLOT library(ggplot2) library(ggpubr) library(tidyverse) library(patchwork) n=0 for ( x in tag ){ cat(x,&quot;\\n&quot;) n = n + 1 if (!is.null(GSE97693_scMMET[[x]])){ ###check is null data &lt;- GSE97693_scMMET[[x]] %&gt;% as.data.frame() %&gt;% gather(&quot;Type&quot;,&quot;Exp&quot;,-c(ID,Ex)) %&gt;% mutate(Me=str_sub(Type,0,1),MHB=toupper(str_sub(Type,2,2)), Exp=as.numeric(Exp),Ex=fct_inorder(Ex)) ## plot compare_means(Exp ~ MHB, data = data, group.by = c(&quot;Me&quot;,&quot;Ex&quot;)) assign(paste0(&quot;p&quot;,n),ggboxplot(data, x = &quot;Me&quot;, y = &quot;Exp&quot;, color = &quot;MHB&quot;, palette =&quot;nejm&quot;,width=0.8, bxp.errorbar = T, add = &quot;jitter&quot;, add.params = list(size = 0.05), facet.by = &quot;Ex&quot;, short.panel.labs = FALSE ) + xlab(&quot;Methylation-level&quot;)+ ylab(&quot;Expression&quot;)+ ggtitle(ifelse(x==&quot;MHB_T&quot;,&quot;Tumor&quot;,x))+ stat_compare_means(aes(group = MHB),size=2) + theme_bw() + theme(panel.grid.major=element_line(colour=NA), panel.background = element_rect(fill = &quot;transparent&quot;,colour = NA), plot.background = element_rect(fill = &quot;transparent&quot;,colour = NA), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45,vjust = 1,hjust = 1), plot.title = element_text(hjust = 0.5, size = 18), panel.border = element_rect(fill=NA,color=&quot;black&quot;, size=1, linetype=&quot;solid&quot;)) ) cat(n,&quot;\\n&quot;) } } # paste to one figure p &lt;- wrap_plots(p1, p2, p3, p4,p5) ggsave(p,filename=paste0(&quot;Data/Figures/Fig4/Fig4.E.pdf&quot;),width=16,height=6) 4.4: Fig4.E 4.5 (F). Association of gene expression and methylation levels of MHB regions # Show the relationship of between methylation MHB level and Gene expression in scRNA-levels # Step1: promoter methylation scMethyl_Mcounts &lt;- fread(&quot;scMHB_GSE97693/Methyl/promoter_methylated.txt&quot;,header=T) %&gt;% distinct() %&gt;% column_to_rownames(var=&quot;region&quot;) scMethyl_Tcounts &lt;- fread(&quot;scMHB_GSE97693/Methyl/promoter_total.txt&quot;,header=T) %&gt;% distinct() %&gt;% column_to_rownames(var=&quot;region&quot;) # filter promoter total reads count &lt;3 scMethyl_Tcounts[scMethyl_Tcounts&lt;3]&lt;- NA scMethyl &lt;- scMethyl_Mcounts/scMethyl_Tcounts scMethyl &lt;- scMethyl %&gt;% rownames_to_column(var=&quot;region&quot;) %&gt;% separate(region,into=c(&quot;chr&quot;,&quot;start&quot;,&quot;end&quot;),sep=&quot;[:-]&quot;) %&gt;% mutate(start=as.numeric(start)-1,end=as.numeric(end)) # promoter anno Promoter &lt;- fread(&quot;Data/Processed_data/GREATv4.genes.promoter_UD1000.hg19.bed&quot;) %&gt;% dplyr::rename_with(~c(&quot;chr&quot;,&quot;start&quot;,&quot;end&quot;,&quot;strand&quot;,&quot;SYMBOL&quot;)) scMethyl &lt;- Promoter %&gt;% inner_join(scMethyl,by=c(&quot;chr&quot;,&quot;start&quot;,&quot;end&quot;)) # toGR scMethyl.GR &lt;- makeGRangesFromDataFrame(scMethyl,keep.extra=T) # sample id with Paired RNA &amp; Methylation id &lt;- fread(&quot;scMHB_GSE97693/Anno/GSE97693_scRNA_scMethyl_matched_info.txt&quot;,header=F) %&gt;% select(ID,patients,lesions,assay,tissue,tag) %&gt;% mutate(Methyl_ID = str_split_i(ID,&quot;,&quot;,i=1),Exp_ID=str_split_i(ID,&quot;,&quot;,i=2)) # promoter overlaps with MHB tag=c(&quot;LN&quot;,&quot;PT&quot;,&quot;ML&quot;,&quot;MP&quot;,&quot;Tumor&quot;) scMHB_Methyl &lt;- pbapply::pblapply(tag,function(x){ path=&quot;Data/Processed_data/MHB/singlecell/&quot; MHB&lt;-toGRanges(paste0(path,&quot;CRC_MHB_&quot;,x,&quot;.bed&quot;)) # overlapping Tx &lt;- findOverlaps(scMethyl.GR,MHB,ignore.strand=T) a&lt;- rep(NA,length(scMethyl.GR)) # MHB a[unique(queryHits(Tx))]&lt;-&quot;T&quot; a[is.na(a)]&lt;-&quot;N&quot; a&lt;- a %&gt;% as.data.frame() names(a)&lt;-&quot;MHB&quot; # sample GSM ID if(x!=&quot;Tumor&quot;){ sid &lt;- id %&gt;% dplyr::filter(str_detect(tissue,x)) %&gt;% pull(Methyl_ID) }else{ sid &lt;- id %&gt;% pull(Methyl_ID) } # select mcols(scMethyl.GR) %&gt;% as.data.frame() %&gt;% select(SYMBOL,all_of(sid)) %&gt;% cbind(a) }) names(scMHB_Methyl) &lt;-tag # Step 2: scRNA + Methylation load(&quot;scMHB_GSE97693/Exp/GSE97693_scRNA_TPM_FPKM.RData&quot;) scMme &lt;- pbapply::pblapply(tag,function(x){ cat(x,&quot;\\n&quot;) # methylation id if(x!=&quot;Tumor&quot;){ mid &lt;- id %&gt;% filter(str_detect(tissue,x)) %&gt;% pull(Methyl_ID) }else{ mid &lt;- id %&gt;% pull(Methyl_ID) } # methylation data reshape data_methyl &lt;- scMHB_Methyl[[x]] %&gt;% melt() %&gt;% drop_na() %&gt;% nest(.by=variable) %&gt;% dplyr::mutate(MM = lapply(data,function(y){ y %&gt;% mutate(type=ifelse(value&gt;=0.8,&quot;high&quot;, ifelse(value&lt;=0.2,&quot;low&quot;,&quot;Intermediate&quot;))) })) # MHB Methylation scMethyl_MHB_Mcounts &lt;- fread(paste0(&quot;scMHB_GSE97693/Methyl/CRC_MHB_&quot;,x,&quot;_methylated.txt&quot;),header=T) %&gt;% distinct() %&gt;% column_to_rownames(var=&quot;region&quot;) scMethyl_MHB_Tcounts &lt;- fread(paste0(&quot;scMHB_GSE97693/Methyl/CRC_MHB_&quot;,x,&quot;_total.txt&quot;),header=T) %&gt;% distinct() %&gt;% column_to_rownames(var=&quot;region&quot;) # filter MHB with Total reads count &lt;3 scMethyl_MHB_Tcounts[scMethyl_MHB_Tcounts&lt;3]&lt;- NA scMethyl_MHB &lt;- scMethyl_MHB_Mcounts/scMethyl_MHB_Tcounts scMethyl_MHB.GR &lt;- scMethyl_MHB %&gt;% rownames_to_column(var=&quot;region&quot;) %&gt;% separate(region,into=c(&quot;chr&quot;,&quot;start&quot;,&quot;end&quot;),sep=&quot;[:-]&quot;) %&gt;% mutate(start=as.numeric(start)-1,end=as.numeric(end)) %&gt;% toGRanges() %&gt;% great(cores=10,&quot;MSigDB:H&quot;, &quot;GREAT:hg19&quot;) %&gt;% getRegionGeneAssociations() %&gt;% as.data.frame() %&gt;% mutate(annotated_genes=lapply(annotated_genes,function(x){ x %&gt;% paste(collapse=&quot;,&quot;) }) %&gt;% do.call(rbind,.) %&gt;% as.character(), dist_to_TSS = lapply(dist_to_TSS,function(x){ x %&gt;% paste(collapse=&quot;,&quot;) }) %&gt;% do.call(rbind,.) %&gt;% as.character()) %&gt;% separate_rows(annotated_genes,dist_to_TSS,sep=&quot;,&quot;,convert=TRUE) %&gt;% filter(abs(dist_to_TSS)&lt; 1000) %&gt;% select(contains(&quot;GSM&quot;),annotated_genes) %&gt;% group_by(annotated_genes) %&gt;% summarise_each(funs(mean)) # show the paired methylation &amp; expression ,one by one SME &lt;- pbapply::pblapply(mid,function(m) { # mean vs median if(1){ ExM &lt;- function(z) mean(z, na.rm = TRUE) }else{ ExM &lt;- function(z) median(z, na.rm = TRUE) } cat(&quot;Processing&quot;,m,&quot;\\n&quot;) # Methylation data_Me &lt;- data_methyl %&gt;% filter(variable==m) %&gt;% pull(MM) %&gt;% as.data.frame() data_MHB &lt;- scMethyl_MHB.GR %&gt;% select(c(m,&quot;annotated_genes&quot;)) %&gt;% rename_with(~c(&quot;value&quot;,&quot;SYMBOL&quot;)) %&gt;% mutate(type=ifelse(value&gt;=0.8,&quot;high&quot;, ifelse(value&lt;=0.2,&quot;low&quot;,&quot;intermediate&quot;))) %&gt;% group_by(type) %&gt;% summarise(genes=paste0(SYMBOL, collapse=&quot;,&quot;)) %&gt;% na.omit() # Exp ## test the RNA data with paired Exp id eid &lt;- id %&gt;% filter(str_detect(Methyl_ID,m)) %&gt;% pull(Exp_ID) if(sum(str_detect(names(RNA.TPM),eid))==1){ RNA &lt;- RNA.TPM cat(&quot;RNA_TPM &quot;,x, &quot; &quot;,m, &quot; &quot;, eid,&quot;\\n&quot;) flag&lt;-&quot;TPM&quot; }else{ RNA &lt;- RNA.FPKM cat(&quot;RNA_FPKM &quot;,x, &quot; &quot;,m, &quot; &quot;, eid,&quot;\\n&quot;) flag &lt;-&quot;FPKM&quot; } # two groups # 1. promoter intermediate methylation # MHB high methylation MHB_h &lt;- data_MHB %&gt;% filter(type==&quot;high&quot;) %&gt;% pull(genes) %&gt;% str_split_1(pattern=&quot;,&quot;) # MHB low methylation MHB_l &lt;- data_MHB %&gt;% filter(type==&quot;low&quot;) %&gt;% pull(genes) %&gt;% str_split_1(pattern=&quot;,&quot;) data_Me1 &lt;- data_Me %&gt;% mutate(MHB_Methyl = ifelse(SYMBOL %in% MHB_h ,&quot;High&quot;, ifelse(SYMBOL %in% MHB_l,&quot;Low&quot;,&quot;Other&quot;))) %&gt;% filter(MHB_Methyl!=&quot;Other&quot;,type!=&quot;high&quot;) IE &lt;- RNA %&gt;% select(contains(eid)) %&gt;% rownames_to_column(var=&quot;SYMBOL&quot;) %&gt;% mutate(EID = eid,flag=flag) %&gt;% inner_join(data_Me1,by=&quot;SYMBOL&quot;) %&gt;% dplyr::rename_with(~c(&quot;SYMBOL&quot;,&quot;Exp&quot;,&quot;EID&quot;,&quot;flag&quot;,&quot;MHB&quot;,&quot;TSS_MM&quot;,&quot;TSS_type&quot;,&quot;MHB_type&quot;)) %&gt;% group_by(TSS_type,EID,MHB_type,flag) %&gt;% summarise(Exp=ExM(Exp),ncount=length(SYMBOL)) }) names(SME) &lt;- mid # cancer type : promoter methyltion + MHB + Expression CME &lt;- do.call(rbind,SME) %&gt;% as.data.frame() %&gt;% dplyr::rename_with(~c(&quot;TSS_type&quot;,&quot;EID&quot;,&quot;MHB&quot;,&quot;flag&quot;,&quot;Exp&quot;,&quot;ncount&quot;)) }) names(scMme) &lt;- tag # sc_MMET: Tumor Methylation + MHB + Exp GSE97693_scME_MHBGene &lt;- scMme # Step3: PLOT n=0 for ( x in tag ){ cat(x,&quot;\\n&quot;) n = n + 1 if (!is.null(GSE97693_scME_MHBGene[[x]])){ ###check is null data &lt;- GSE97693_scME_MHBGene[[x]] %&gt;% as.data.frame() %&gt;% mutate(Exp=log2(Exp+1)) ## plot compare_means(Exp ~ MHB, data = data, group.by = c(&quot;TSS_type&quot;,&quot;flag&quot;)) assign(paste0(&quot;p&quot;,n),ggboxplot(data, x = &quot;TSS_type&quot;, y = &quot;Exp&quot;,color=&quot;MHB&quot;, palette =&quot;nejm&quot;,width=0.8, bxp.errorbar = T, add = &quot;jitter&quot;, add.params = list(size = 0.1), facet.by = c(&quot;flag&quot;), short.panel.labs = FALSE ) + xlab(&quot;Promoter Methylation-level&quot;)+ ylab(&quot;Expression&quot;)+ ggtitle(ifelse(x==&quot;Tumor&quot;,&quot;Tumor&quot;,x))+ stat_compare_means(aes(group = MHB),size=2) + theme_bw() + theme(panel.grid.major=element_line(colour=NA), panel.background = element_rect(fill = &quot;transparent&quot;,colour = NA), plot.background = element_rect(fill = &quot;transparent&quot;,colour = NA), panel.grid.minor = element_blank(), axis.text.x = element_text(angle = 45,vjust = 1,hjust = 1), plot.title = element_text(hjust = 0.5, size = 18), panel.border = element_rect(fill=NA,color=&quot;black&quot;, size=1, linetype=&quot;solid&quot;)) ) cat(n,&quot;\\n&quot;) } } # paste to one figure p &lt;- wrap_plots(p1, p2, p3, p4,p5) ggsave(p,filename=paste0(&quot;Data/Figures/Fig4/Fig4.F.pdf&quot;),width=14,height=6) 4.5: Fig4.F 4.6 (I-J). MHBs and dysregulation of gene expression in CRC. # Step1: Single-cell Expression load(&quot;scMHB_GSE97693/Exp/GSE97693_scRNA_TPM_FPKM.RData&quot;) # select the single cell with TPM data. (only with PT, LN, and Normal cell) if(0){ RNA &lt;- RNA.FPKM cat(&quot;RNA FPKM &quot;,&quot;\\n&quot;) }else{ RNA &lt;- RNA.TPM cat(&quot;RNA TPM &quot;,&quot;\\n&quot;) } names(RNA) &lt;- str_split_i(names(RNA),&quot;_&quot;,i=1) # load meta data id &lt;- fread(&quot;scMHB_GSE97693/Anno/GSE97693_Anno.txt&quot;,header=T) %&gt;% select(ID,patients,lesions,assay,tissue,tag) %&gt;% filter(tissue!=&quot;HeLa&quot;) id.RNA &lt;- id %&gt;% filter(ID %in% names(RNA)) # Find DEG Markers findDEG &lt;- function(x,Idents) { # annotation treat &lt;- id.RNA %&gt;% dplyr::filter(str_detect(tissue,Idents)) %&gt;% pull(ID) nc &lt;- id.RNA %&gt;% dplyr::filter(tissue==&quot;NC&quot;) %&gt;% pull(ID) # wilcoxon test z &lt;- function(z) { d1 &lt;- z[treat]%&gt;% as.character() %&gt;% as.numeric() d2 &lt;- z[nc] %&gt;% as.character() %&gt;% as.numeric() p &lt;- wilcox.test(d1,d2)$p.value group1 &lt;- mean(d1) group2 &lt;- mean(d2) logFC &lt;- log2(group1+1) - log2(group2+1) c(group1,group2,logFC,p) } res &lt;- t(apply(x,1,z)) %&gt;% as.data.frame() %&gt;% rename_with(~c(&quot;Treat&quot;,&quot;NC&quot;,&quot;logFC&quot;,&quot;p_value&quot;)) %&gt;% mutate(p_val_adj=p.adjust(p_value,method=&quot;fdr&quot;,length(p_value)), DEG = ifelse(abs(logFC)&gt;=1 &amp; p_val_adj&lt;=0.05,&quot;Yes&quot;,&quot;No&quot;)) return(res) } PT.markers &lt;- findDEG(RNA,Idents=&quot;PT&quot;) %&gt;% rownames_to_column(var=&quot;SYMBOL&quot;) LN.markers &lt;- findDEG(RNA,Idents=&quot;LN&quot;) %&gt;% rownames_to_column(var=&quot;SYMBOL&quot;) # Step2: promoter DNA methylation library(regioneR) library(pbapply) scMethyl_Mcounts &lt;- fread(&quot;scMHB_GSE97693/Methyl/promoter_methylated.txt&quot;,header=T) %&gt;% distinct() %&gt;% column_to_rownames(var=&quot;region&quot;) scMethyl_Tcounts &lt;- fread(&quot;scMHB_GSE97693/Methyl/promoter_total.txt&quot;,header=T) %&gt;% distinct() %&gt;% column_to_rownames(var=&quot;region&quot;) # filter promoters with Total reads count &lt;3 scMethyl_Tcounts[scMethyl_Tcounts&lt;3]&lt;- NA scMethyl &lt;- scMethyl_Mcounts/scMethyl_Tcounts scMethyl &lt;- scMethyl %&gt;% rownames_to_column(var=&quot;region&quot;) %&gt;% separate(region,into=c(&quot;chr&quot;,&quot;start&quot;,&quot;end&quot;),sep=&quot;[:-]&quot;) %&gt;% mutate(start=as.numeric(start)-1,end=as.numeric(end)) # promoter anno Promoter &lt;- fread(&quot;Data/Processed_data/GREATv4.genes.promoter_UD1000.hg19.bed&quot;) %&gt;% dplyr::rename_with(~c(&quot;chr&quot;,&quot;start&quot;,&quot;end&quot;,&quot;strand&quot;,&quot;SYMBOL&quot;)) scMethyl &lt;- Promoter %&gt;% inner_join(scMethyl,by=c(&quot;chr&quot;,&quot;start&quot;,&quot;end&quot;)) scMethyl.GR &lt;- makeGRangesFromDataFrame(scMethyl,keep.extra=T) # promoter overlap with MHB tag=c(&quot;PT&quot;,&quot;LN&quot;) scMHB_Methyl &lt;- pbapply::pblapply(tag,function(x){ path=&quot;Data/Processed_data/MHB/singlecell/&quot; MHB&lt;-toGRanges(paste0(path,&quot;CRC_MHB_&quot;,x,&quot;.bed&quot;)) # overlapping Tx &lt;- findOverlaps(scMethyl.GR,MHB,ignore.strand=T) a&lt;- rep(NA,length(scMethyl.GR)) # MHB a[unique(queryHits(Tx))]&lt;-&quot;T&quot; a[is.na(a)]&lt;-&quot;N&quot; a&lt;- a %&gt;% as.data.frame() names(a)&lt;-&quot;MHB&quot; # sample GSM ID paired data sid &lt;- id %&gt;% dplyr::filter(str_detect(tissue,x),assay==&quot;Met&quot;) %&gt;% pull(ID) nc &lt;- id %&gt;% dplyr::filter(tissue==&quot;NC&quot;,assay==&quot;Met&quot;) %&gt;% pull(ID) ids &lt;- c(sid,nc) # select mcols(scMethyl.GR) %&gt;% as.data.frame() %&gt;% select(SYMBOL,all_of(ids)) %&gt;% cbind(a) }) names(scMHB_Methyl) &lt;-tag # find Promoter DMR markers # Remove NA sum_of_na &lt;- function(x){ sum(is.na(x)) } target_genes &lt;- function(x) { Mm &lt;- apply(x,1,sum_of_na) &gt; 0.9*ncol(x) # promoter:0.3, MHB:0.9 genes &lt;- x$SYMBOL[Mm!=&quot;TRUE&quot;] return(genes) } findDMGenes &lt;- function(dataset,Idents){ # annotation treat &lt;- id %&gt;% dplyr::filter(str_detect(tissue,Idents),assay==&quot;Met&quot;) %&gt;% pull(ID) nc &lt;- id %&gt;% dplyr::filter(tissue==&quot;NC&quot;,assay==&quot;Met&quot;) %&gt;% pull(ID) # dataset 1 &amp; dataset 2 merging dataset1 &lt;- dataset[[Idents]] %&gt;% dplyr::select(SYMBOL,MHB,all_of(treat)) %&gt;% filter(SYMBOL %in% target_genes(.)) dataset2 &lt;- dataset[[Idents]] %&gt;% dplyr::select(SYMBOL,all_of(nc)) %&gt;% filter(SYMBOL %in% target_genes(.)) data &lt;- inner_join(dataset1,dataset2,by=&quot;SYMBOL&quot;) # find DMG dmg &lt;- function(x){ d1 &lt;- x[treat]%&gt;% as.character() %&gt;% as.numeric() d2 &lt;- x[nc] %&gt;% as.character() %&gt;% as.numeric() p &lt;- wilcox.test(d1,d2)$p.value delta &lt;- mean(d1,na.rm=T) - mean(d2,na.rm=T) res &lt;- c(delta,p) return(res) } res &lt;- apply(data,1,dmg) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename_with(~c(&quot;delta&quot;,&quot;P.val&quot;)) %&gt;% mutate(fdr=p.adjust(P.val,n=length(P.val))) %&gt;% cbind(data) %&gt;% mutate(DMG = ifelse(abs(delta)&gt;0.1 &amp; fdr &lt;= 0.05, &quot;Yes&quot;,&quot;No&quot;)) %&gt;% dplyr::select(SYMBOL,delta,P.val,fdr,DMG,MHB) # Return return(res) } DMG.PT&lt;- findDMGenes(scMHB_Methyl,Idents=&quot;PT&quot;) DMG.LN&lt;- findDMGenes(scMHB_Methyl,Idents=&quot;LN&quot;) # Identify DEGs + NonDMR + MHB Genes # PT NonDMG.PT &lt;- DMG.PT %&gt;% filter(DMG==&quot;No&quot;) %&gt;% select(SYMBOL,MHB) DEG.PT &lt;- PT.markers %&gt;% filter(DEG==&quot;Yes&quot;) %&gt;% mutate(DE = ifelse(logFC &gt;= 1,&quot;UP&quot;,&quot;DN&quot;)) %&gt;% select(SYMBOL,DE) data.PT&lt;- inner_join(DEG.PT,NonDMG.PT,by=&quot;SYMBOL&quot;) # LN NonDMG.LN &lt;- DMG.LN %&gt;% filter(DMG==&quot;No&quot;) %&gt;% select(SYMBOL,MHB) DEG.LN &lt;- LN.markers %&gt;% filter(DEG==&quot;Yes&quot;) %&gt;% mutate(DE = ifelse(logFC &gt;= 1,&quot;UP&quot;,&quot;DN&quot;)) %&gt;% select(SYMBOL,DE) data.LN &lt;- inner_join(DEG.LN,NonDMG.LN,by=&quot;SYMBOL&quot;) PT.MHB.NonDMR.Up &lt;- data.PT %&gt;% filter(DE==&quot;UP&quot;,MHB==&quot;T&quot;) %&gt;% pull(SYMBOL) LN.MHB.NonDMR.Up &lt;- data.LN %&gt;% filter(DE==&quot;UP&quot;,MHB==&quot;T&quot;) %&gt;% pull(SYMBOL) geneset &lt;- intersect(PT.MHB.NonDMR.Up,LN.MHB.NonDMR.Up) test &lt;- list(&quot;geneset&quot;=geneset) # saving write_gmt &lt;- function(x,filename) { output&lt;-file(filename,open = &quot;wt&quot;) name &lt;- names(x) lapply(name,function(y){ writeLines(paste(c(y,&quot;NA&quot;,x[[y]]),collapse = &quot;\\t&quot;),con = output) }) close(output) } write_gmt(test,filename=&quot;PT-LN.MHB.NonDMR.Up.gmt&quot;) fwrite(as.data.frame(geneset),file=&quot;PT-LN.MHB.NonDMR.Up_geneset.txt&quot;,sep=&quot;\\t&quot;,quote=F,row.names=F,col.names=F) # Step3: MHB Methylation promoter.GR &lt;- toGRanges(Promoter) ## PT scMethyl_MHB_PT_Mcounts &lt;- fread(&quot;scMHB_GSE97693/Methyl/GW/MHB_PT_extend_methylated.txt&quot;,header=T) %&gt;% distinct() %&gt;% column_to_rownames(var=&quot;region&quot;) scMethyl_MHB_PT_Tcounts &lt;- fread(&quot;scMHB_GSE97693/Methyl/GW/MHB_PT_extend_total.txt&quot;,header=T) %&gt;% distinct() %&gt;% column_to_rownames(var=&quot;region&quot;) scMethyl_MHB_PT_Tcounts[scMethyl_MHB_PT_Tcounts&lt;3]&lt;- NA scMethyl_MHB_PT &lt;- scMethyl_MHB_PT_Mcounts/scMethyl_MHB_PT_Tcounts scMethyl_MHB_PT &lt;- scMethyl_MHB_PT %&gt;% rownames_to_column(var=&quot;region&quot;) %&gt;% separate(region,into=c(&quot;chr&quot;,&quot;start&quot;,&quot;end&quot;),sep=&quot;[:-]&quot;) %&gt;% mutate(start=as.numeric(start)-1,end=as.numeric(end)) scMethyl_MHB_PT.GR &lt;- makeGRangesFromDataFrame(scMethyl_MHB_PT,keep.extra=T) # Overlapping x.PT &lt;- findOverlaps(promoter.GR,scMethyl_MHB_PT.GR,ignore.strand=T) scMethyl_MHB_PT_TSS &lt;- cbind(mcols(promoter.GR[queryHits(x.PT)])[&quot;SYMBOL&quot;],mcols(scMethyl_MHB_PT.GR[subjectHits(x.PT)])) scMethyl_MHB_PT_TSS &lt;- scMethyl_MHB_PT_TSS %&gt;% as.data.frame() %&gt;% group_by(SYMBOL) %&gt;% summarise_each(funs(mean)) %&gt;% mutate(MHB=&quot;T&quot;) ## LN scMethyl_MHB_LN_Mcounts &lt;- fread(&quot;scMHB_GSE97693/Methyl/GW/MHB_LN_extend_methylated.txt&quot;,header=T) %&gt;% distinct() %&gt;% column_to_rownames(var=&quot;region&quot;) scMethyl_MHB_LN_Tcounts &lt;- fread(&quot;scMHB_GSE97693/Methyl/GW/MHB_LN_extend_total.txt&quot;,header=T) %&gt;% distinct() %&gt;% column_to_rownames(var=&quot;region&quot;) scMethyl_MHB_LN_Tcounts[scMethyl_MHB_LN_Tcounts&lt;3]&lt;- NA scMethyl_MHB_LN &lt;- scMethyl_MHB_LN_Mcounts/scMethyl_MHB_LN_Tcounts scMethyl_MHB_LN &lt;- scMethyl_MHB_LN %&gt;% rownames_to_column(var=&quot;region&quot;) %&gt;% separate(region,into=c(&quot;chr&quot;,&quot;start&quot;,&quot;end&quot;),sep=&quot;[:-]&quot;) %&gt;% mutate(start=as.numeric(start)-1,end=as.numeric(end)) scMethyl_MHB_LN.GR &lt;- makeGRangesFromDataFrame(scMethyl_MHB_LN,keep.extra=T) # overlapping x.LN &lt;- findOverlaps(promoter.GR,scMethyl_MHB_LN.GR,ignore.strand=T) scMethyl_MHB_LN_TSS &lt;- cbind(mcols(promoter.GR[queryHits(x.LN)])[&quot;SYMBOL&quot;],mcols(scMethyl_MHB_LN.GR[subjectHits(x.LN)])) scMethyl_MHB_LN_TSS &lt;- scMethyl_MHB_LN_TSS %&gt;% as.data.frame() %&gt;% group_by(SYMBOL) %&gt;% summarise_each(funs(mean)) %&gt;% mutate(MHB=&quot;T&quot;) scMethyl_MHB_TSS &lt;- list(&quot;PT&quot;=scMethyl_MHB_PT_TSS,&quot;LN&quot;=scMethyl_MHB_LN_TSS) # Find DM MHB DMHG.PT&lt;- findDMGenes(scMethyl_MHB_TSS,Idents=&quot;PT&quot;) %&gt;% filter(SYMBOL %in% geneset) DMHG.LN&lt;- findDMGenes(scMethyl_MHB_TSS,Idents=&quot;LN&quot;) %&gt;% filter(SYMBOL %in% geneset) # Step4: Geneset enrichment library(rGREAT) gs = read_gmt(&quot;PT-LN.MHB.NonDMR.Up.gmt&quot;, from = &quot;SYMBOL&quot;, to = &quot;ENTREZ&quot;, orgdb = &quot;org.Hs.eg.db&quot;) #library(clusterProfiler) #library(msigdbr) # Here we use Hallmark gene sets as an example: #m_t2g &lt;- msigdbr(species = &quot;Homo sapiens&quot;, category = &quot;H&quot;) %&gt;% # dplyr::select(gs_name, entrez_gene) #gene &lt;- gs$geneset #em &lt;- enricher(gene, TERM2GENE=m_t2g,minGSSize=1) #enrich.data&lt;- head(em) %&gt;% mutate(type=&quot;111&quot;,GeneRatio=c(0.2174,0.2609)) # Result From Msigdb website msig &lt;- data.frame(ID=c(&quot;HALLMARK_MYC_TARGETS_V1&quot;,&quot;HALLMARK_UNFOLDED_PROTEIN_RESPONSE&quot;,&quot;HALLMARK_G2M_CHECKPOINT&quot;), qvalue = c(5.21e-8,2.33e-6,5.67e-4)) # PLOT p &lt;- ggplot(msig,aes(x=fct_rev(fct_inorder(ID)),y= -log10(qvalue))) + geom_bar(stat=&quot;identity&quot;,fill=&quot;steelblue&quot;) + ylim(0,10) + labs(x=&quot;&quot;,y=&quot;-Log10(FDR)&quot;,title=&quot;Enrichment of hallmark pathways&quot;) + coord_flip() + theme_bw()+ theme(panel.grid=element_blank(), panel.background =element_blank(), plot.title = element_text(hjust=0.5), axis.text = element_text(color=&quot;black&quot;) ) ggsave(p,filename=paste0(&quot;Data/Figures/Fig4/Fig4.I.pdf&quot;),width=6.5,height=1.5) # Step 5: show the 42 common genes are shared by PT and LN. # RNA merging with DNA methylation matrix RNA.DEG.PT &lt;- PT.markers %&gt;% filter(DEG==&quot;Yes&quot;) %&gt;% filter(SYMBOL %in% geneset) %&gt;% inner_join(DMG.PT,by=&quot;SYMBOL&quot;) %&gt;% rename(&quot;PT.FC&quot;=&quot;logFC&quot;,&quot;PT.delta&quot;=&quot;delta&quot;) %&gt;% select(SYMBOL,PT.FC,PT.delta) RNA.DEG.LN &lt;- LN.markers %&gt;% filter(DEG==&quot;Yes&quot;) %&gt;% filter(SYMBOL %in% geneset) %&gt;% inner_join(DMG.LN,by=&quot;SYMBOL&quot;) %&gt;% rename(&quot;LN.FC&quot;=&quot;logFC&quot;,&quot;LN.delta&quot;=&quot;delta&quot;) %&gt;% select(SYMBOL,LN.FC,LN.delta) RNA.DEG &lt;- RNA.DEG.PT %&gt;% inner_join(RNA.DEG.LN,by=&quot;SYMBOL&quot;) log2.RNA &lt;- log2(RNA+1) %&gt;% rownames_to_column(var=&quot;SYMBOL&quot;) Methyl &lt;- scMethyl %&gt;% select(-c(1:4)) data &lt;- RNA.DEG %&gt;% inner_join(log2.RNA,by=&quot;SYMBOL&quot;) %&gt;% inner_join(Methyl,by=&quot;SYMBOL&quot;) # RNA flag id.RNA.NC &lt;- id.RNA %&gt;% filter(tissue==&quot;NC&quot;) %&gt;% pull(ID) id.RNA.PT &lt;- id.RNA %&gt;% filter(tissue==&quot;PT&quot;) %&gt;% pull(ID) id.RNA.LN &lt;- id.RNA %&gt;% filter(tissue==&quot;LN&quot;) %&gt;% pull(ID) id.RNA.tag &lt;- c(id.RNA.NC,id.RNA.PT,id.RNA.LN) # Methylation flag id.Met.NC &lt;- id %&gt;% filter(tissue==&quot;NC&quot;,assay==&quot;Met&quot;) %&gt;% pull(ID) id.Met.PT &lt;- id %&gt;% filter(tissue==&quot;PT&quot;,assay==&quot;Met&quot;) %&gt;% pull(ID) id.Met.LN &lt;- id %&gt;% filter(tissue==&quot;LN&quot;,assay==&quot;Met&quot;) %&gt;% pull(ID) id.Met.ML &lt;- id %&gt;% filter(tissue==&quot;ML&quot;,assay==&quot;Met&quot;) %&gt;% pull(ID) id.Met.MP &lt;- id %&gt;% filter(tissue==&quot;MP&quot;,assay==&quot;Met&quot;) %&gt;% pull(ID) id.Met.tag &lt;- c(id.Met.NC,id.Met.PT,id.Met.LN,id.Met.ML,id.Met.MP) library(ComplexHeatmap) library(circlize) # In tissue-level mhb_N_Tx &lt;- toGRanges(&quot;scMHB_GSE97693/MHB/BED/CRC_MHB_NC.bed&quot;) %&gt;% findOverlaps(scMethyl.GR,ignore.strand=T,type= &quot;any&quot;) mhb_N_genes &lt;- mcols(scMethyl.GR[subjectHits(mhb_N_Tx)]) %&gt;% as.data.frame() %&gt;% pull(SYMBOL) %&gt;% unique() # mean signal ## RNA RNA.mean &lt;- lapply(c(&quot;PT&quot;,&quot;LN&quot;,&quot;NC&quot;),function(x){ ID &lt;- id.RNA %&gt;% filter(tissue==x) %&gt;% pull(ID) RNA %&gt;% dplyr::select(contains(ID)) %&gt;% rowMeans(na.rm=T) %&gt;% as.data.frame() %&gt;% rename_with(~x) }) RNA.data &lt;- do.call(cbind,RNA.mean) %&gt;% rownames_to_column(var=&quot;SYMBOL&quot;) %&gt;% filter(SYMBOL %in% geneset) %&gt;% column_to_rownames(var=&quot;SYMBOL&quot;) ## Methylation Met.mean &lt;- lapply(c(&quot;PT&quot;,&quot;LN&quot;,&quot;ML&quot;,&quot;MP&quot;,&quot;NC&quot;),function(x){ ID &lt;- id %&gt;% filter(tissue==x,assay==&quot;Met&quot;) %&gt;% pull(ID) scMethyl %&gt;% select(-c(1:4)) %&gt;% dplyr::select(contains(ID)) %&gt;% rowMeans(na.rm=T) %&gt;% as.data.frame() %&gt;% rename_with(~x) }) Met.data &lt;- do.call(cbind,Met.mean) %&gt;% as.data.frame() %&gt;% cbind(scMethyl[,5]) %&gt;% filter(SYMBOL %in% geneset) %&gt;% arrange(SYMBOL) %&gt;% column_to_rownames(var=&quot;SYMBOL&quot;) # PLOT 1 pdf(file=&quot;Data/Figures/Fig4/Fig4.J.pdf&quot;,width=4.5,height=7) # Annotation ## Methylation column_ha_1 = HeatmapAnnotation(Assay = rep(&quot;WGBS&quot;,5) , Type = names(Met.data)) row_ha_1 = rowAnnotation(MHB_PT = rep(1,42),MHB_LN = rep(1,42), MHB_NC= sapply(rownames(Met.data),function(x) {ifelse(x %in% mhb_N_genes,1,0)})) colfun11 &lt;- colorRamp2(breaks = c(0, 0.5, 1), colors = c(&#39;darkblue&#39;, &#39;white&#39;, &#39;firebrick&#39;)) ## RNA column_ha_2 = HeatmapAnnotation(Assay = rep(&quot;RNA&quot;,3) , Type = names(RNA.data) ) colfun21 &lt;- colorRamp2(breaks = c(-4, 0, 4), colors = c(&#39;darkblue&#39;, &#39;white&#39;, &#39;firebrick&#39;)) data.RNA.scale = t(scale(t(as.matrix(RNA.data)))) p1 &lt;- Heatmap(as.matrix(Met.data),name=&quot;Methylation&quot;, col=colfun11,cluster_columns= F, cluster_rows=F, left_annotation = row_ha_1, top_annotation = column_ha_1) p2 &lt;- Heatmap(as.matrix(data.RNA.scale ),name=&quot;TPM(scaled)&quot;, col=colfun21,cluster_columns= F, cluster_rows=F, top_annotation = column_ha_2) p&lt;- p1+p2 print(p) dev.off() 4.6: Fig4.I-J 4.7 (K). TCGA-COAD dataset Validation # TCGA COAD validation MYC target &amp; G2M genes # load DNAme data load(&quot;TCGA_Promoter_Methylation_UD1000.RData&quot;) MM_COAD &lt;- cbind(mcols(Mregion)[&quot;name&quot;],rList$COAD) # load expression data load(&quot;TCGA/Exp/Firehose_Expression.RData&quot;) load(&quot;TCGA/Exp/Firehose_SampleSheet.RData&quot;) Exp_COAD &lt;- Firehose_Expression$COAD # clinical data COAD_clinical &lt;- fread(&quot;TCGA/Clinical/gdac.broadinstitute.org_COAD.Merge_Clinical.Level_1.2016012800.0.0/COAD.merged_only_clinical_clin_format.txt&quot;) %&gt;% filter(V1 %in% c(&quot;patient.bcr_patient_barcode&quot;,&quot;patient.stage_event.pathologic_stage&quot;,&quot;patient.vital_status&quot;)) %&gt;% column_to_rownames(var=&quot;V1&quot;) %&gt;% t() %&gt;% as_tibble() %&gt;% rename_with(~c(&quot;ID&quot;,&quot;Stage&quot;,&quot;status&quot;)) %&gt;% mutate(ID = str_to_upper(ID),Stage=str_replace_all(Stage,&quot;stage &quot;,&quot;&quot;) %&gt;% str_to_upper()) # Combine DNAme &amp; Exp &amp; clinical data match.id.COAD &lt;- intersect(names(MM_COAD)[-1] %&gt;% str_sub(1,16) ,colnames(Exp_COAD) %&gt;% str_sub(1,16)) match.id.COAD &lt;- data.frame(&quot;Tag&quot; =match.id.COAD) %&gt;% mutate(ID = str_sub(Tag,1,12)) %&gt;% left_join(COAD_clinical,by=&quot;ID&quot;) %&gt;% mutate(Stage=ifelse(str_detect(Stage,&quot;III&quot;),&quot;III&quot;, ifelse(str_detect(Stage,&quot;II&quot;),&quot;II&quot;, ifelse(str_detect(Stage,&quot;IV&quot;),&quot;IV&quot;, ifelse(str_detect(Stage,&quot;I&quot;),&quot;I&quot;,NA)))), Stage = ifelse(str_detect(Tag,&quot;-11&quot;),&quot;Normal&quot;,Stage)) %&gt;% na.omit() # signature selection signature &lt;- c(&quot;CBX3&quot;,&quot;DDX21&quot;,&quot;KARS&quot;,&quot;KIF5B&quot;,&quot;NOLC1&quot;,&quot;PSMA7&quot;,&quot;PSMB3&quot;,&quot;RANBP1&quot;,&quot;SLC12A2&quot;,&quot;TOP1&quot;) signature.me &lt;- lapply(c(&quot;I&quot;,&quot;II&quot;,&quot;III&quot;,&quot;IV&quot;,&quot;Normal&quot;),function(x){ tag &lt;- match.id.COAD %&gt;% filter(Stage==x) %&gt;% pull(Tag) %&gt;% str_replace_all(&quot;-&quot;,&quot;.&quot;) MM_COAD %&gt;% as_tibble() %&gt;% dplyr::select(&quot;name&quot;,contains(tag)) %&gt;% filter(name %in% signature) %&gt;% arrange(name) %&gt;% column_to_rownames(var=&quot;name&quot;) %&gt;% rowMeans() %&gt;% as_tibble() %&gt;% mutate(Tag = x,gene=signature) }) signature.me &lt;- do.call(rbind,signature.me) %&gt;%as.data.frame() %&gt;% pivot_wider(values_from=&quot;value&quot;,names_from=&quot;Tag&quot;) %&gt;% column_to_rownames(var=&quot;gene&quot;) signature.exp &lt;- lapply(c(&quot;I&quot;,&quot;II&quot;,&quot;III&quot;,&quot;IV&quot;,&quot;Normal&quot;),function(x){ tag &lt;- match.id.COAD %&gt;% filter(Stage==x) %&gt;% pull(Tag) ## to TPM temp &lt;- Exp_COAD %&gt;% as.data.frame() %&gt;% dplyr::select(contains(tag)) %&gt;% rownames_to_column(var=&quot;name&quot;) %&gt;% filter(name %in% signature) %&gt;% arrange(name) %&gt;% column_to_rownames(var=&quot;name&quot;) tpm &lt;- 2^(temp)-1 tpm %&gt;% rowMeans() %&gt;% as_tibble() %&gt;% mutate(Tag = x,gene=signature) }) signature.exp &lt;- do.call(rbind,signature.exp) %&gt;%as.data.frame() %&gt;% pivot_wider(values_from=&quot;value&quot;,names_from=&quot;Tag&quot;) %&gt;% column_to_rownames(var=&quot;gene&quot;) # PLOT 2 pdf(file=&quot;Data/Figures/Fig4/Fig4.K.pdf&quot;,width=4.5,height=2.5) # Annotation ## Methylation column_ha_1 = HeatmapAnnotation(Type = paste0(&quot;Stage &quot;,names(signature.me))) colfun11 &lt;- colorRamp2(breaks = c(0, 0.5, 1), colors = c(&#39;darkblue&#39;, &#39;white&#39;, &#39;firebrick&#39;)) ## RNA column_ha_2 = HeatmapAnnotation(Type = paste0(&quot;Stage &quot;,names(signature.exp) )) colfun21 &lt;- colorRamp2(breaks = c(-2, 0, 2), colors = c(&#39;darkblue&#39;, &#39;white&#39;, &#39;firebrick&#39;)) data.RNA.scale = t(scale(t(as.matrix(signature.exp)))) p1 &lt;- Heatmap(as.matrix(signature.me),name=&quot;Methylation&quot;, col=colfun11,cluster_columns= F, cluster_rows=F, top_annotation = column_ha_1) p2 &lt;- Heatmap(as.matrix(data.RNA.scale ),name=&quot;TPM(scaled)&quot;, col=colfun21,cluster_columns= F, cluster_rows=F, top_annotation = column_ha_2) p&lt;- p1+p2 print(p) dev.off() 4.7: Fig4.K "],["figure-5.html", " 5 Figure 5 5.1 (A-B). Enrichment of DMR or MHB-associated genes in DEGs 5.2 (C). Pathway enrichment of MHB-associated genes in pan-cancer 5.3 (E). KEGG Pathway crosstalk analysis for pan-cancer", " 5 Figure 5 Figure 5. MHBs are associated with differentially expressed genes in pan-cancer. (A) Enrichment of DMR-associated genes in differentially expressed genes. Statistical significance was evaluated using Fisher’s exact test. The resulting p-values were adjusted for multiple testing and reported as FDR. Upregulated genes and downregulated genes are labelled in red and blue, respectively. (B) Enrichment of cancer MHB-associated genes in differentially expressed genes. The forest plot shows the enrichment of cancer MHB-associated genes, excluding DMR-related genes, in DEGs. Statistical significance was evaluated using the Fisher’s exact test, with P-value &lt; 0.05 labelled in red and P-value &gt; 0.05 labelled in blue, respectively. (C) Pathway enrichment of MHB-associated genes in pan-cancer. An integrative prioritization approach utilizing network information (see Methods) was employed to prioritize MHB-related genes shared by more than six cancer types. The upper panel displays the gene set enrichment of shared upregulated genes. The bottom panel illustrates the differences in methylation and expression profiles of selected genes, annotated in the G2M checkpoint or MYC activity pathway across cancer types. Gene set enrichment analysis was performed using the hypergeometric test implemented in the clusterProfiler R/Bioconductor package, utilizing the “H” and “C2” gene sets from the Molecular Signatures Database v6.1 (MSigDB). (D) Two example MHBs located near genes activated in multiple cancer types: one in the MYC gene locus (chr8: 128,749,850 − 128,750,150) and the other in the SLC2A1 gene locus (chr1:43,423,000-43,423,600). The upper panel displays the mean methylation levels. The middle panel depicts the DNA methylation status of individual fragments, where black and white represent methylated and unmethylated CpG sites, respectively. The bottom panel shows the genomic position of the MHBs and adjacent genes, combined with a heatmap of signed linkage disequilibrium (LD) R² values in the region of interest. (E) Pathway crosstalk analysis for pan-cancer. The optimal subnetwork was identified by integrating the target priority rating information with pathway-derived gene interactions, which were merged from KEGG pathways. (F) The Kaplan-Meier survival curves compare overall survival (OS) between patient subgroups stratified by high/low expression (median cutoff) of RRM2 and SLC2A1 genes in CESC, LIHC, LUAD, PAAD of TCGA dataset. Statistical significance was assessed using the log-rank test. P-values were calculated using the log-rank test, and hazard ratios (HRs) were computed through univariable Cox regression analysis. 5.1 (A-B). Enrichment of DMR or MHB-associated genes in DEGs library(tidyverse) library(stringr) library(rGREAT) library(regioneR) library(data.table) # 1. Load data # 1.1 load TCGA CGI-DMR: HM450K_CGI_DMR load(&quot;TCGA_DMR/HM450K_TCGA_CGI_DMR_GR.RData&quot;) # 1.2 load TCGA DEGs: TCGA_DE_res load(&quot;TCGA/Exp/res/TCGA_DE_res.RData&quot;) # 1.3 Load MHB mhb_path=&quot;Data/Processed_data/MHB/tumor/&quot; mhb &lt;- list.files(mhb_path) MHB.GR &lt;- lapply(mhb,function(x){toGRanges(paste0(mhb_path,x))}) names(MHB.GR) &lt;- str_split_i(mhb,&quot;\\\\.&quot;,i=1) %&gt;% str_split_i(&quot;_&quot;,i=2) # 1.4 rGREAT annotation rGREAT_genes &lt;- fread(&quot;Data/Processed_data/GREATv4.genes.promoter_UD1000.hg19.bed&quot;) # 2. DMR vs DEGs id.methyl &lt;- names(mcols(HM450K_CGI_DMR)) %&gt;% setdiff(&quot;OV&quot;) DMEG &lt;- lapply(id.methyl,function(x){ # 1. CGI-DMR test &lt;- HM450K_CGI_DMR[,x] colnames(mcols(test))&lt;-&quot;Type&quot; DMgene &lt;- subset(test) %&gt;% great(cores=10,&quot;msigdb:H&quot;, &quot;GREAT:hg19&quot;) %&gt;% getRegionGeneAssociations() %&gt;% as.data.frame() %&gt;% mutate(annotated_genes=lapply(annotated_genes,function(x){ x %&gt;% paste(collapse=&quot;,&quot;) }) %&gt;% do.call(rbind,.) %&gt;% as.character(), dist_to_TSS = lapply(dist_to_TSS,function(x){ x %&gt;% paste(collapse=&quot;,&quot;) }) %&gt;% do.call(rbind,.) %&gt;% as.character()) %&gt;% separate_rows(annotated_genes,dist_to_TSS,sep=&quot;,&quot;,convert=TRUE) %&gt;% as.data.frame() %&gt;% filter(abs(dist_to_TSS)&lt;=1000) %&gt;% ### restrict to promoter regions TSS+/- 1K group_by(annotated_genes) %&gt;% summarise(annotated_genes=annotated_genes,Type=paste0(unique(Type),collapse=&quot;,&quot;)) %&gt;% distinct() %&gt;% filter(!str_detect(Type,&quot;,&quot;)) # 2. DEGs if(x==&quot;PDAC&quot;){ Eid = &quot;PAAD&quot; }else { Eid = x } DEG &lt;- TCGA_DE_res %&gt;% dplyr::select(c(&quot;gene&quot;,Eid)) %&gt;% dplyr::rename(Type=2) ####### # 2 Fisher exact test ## Hypo ~ Up # Hypo + up aa1 &lt;- DMgene %&gt;% filter(Type==&quot;Hypo&quot;) %&gt;% pull(annotated_genes) %&gt;% intersect(DEG %&gt;% filter(Type %in% &quot;Up&quot;) %&gt;% pull(gene)) %&gt;% length() # Hypo + NC bb1 &lt;- DMgene %&gt;% filter(Type==&quot;Hypo&quot;) %&gt;% pull(annotated_genes) %&gt;% intersect(DEG %&gt;% filter(Type %in% &quot;NC&quot;) %&gt;% pull(gene) ) %&gt;% length() # NC + Up cc1 &lt;- DMgene %&gt;% filter(Type==&quot;NC&quot;) %&gt;% pull(annotated_genes) %&gt;% intersect(DEG %&gt;% filter(Type %in% &quot;Up&quot;) %&gt;% pull(gene) ) %&gt;% length() # NC + NC dd1 &lt;- DMgene %&gt;% filter(Type==&quot;NC&quot;) %&gt;% pull(annotated_genes) %&gt;% intersect(DEG %&gt;% filter(Type %in% &quot;NC&quot;) %&gt;% pull(gene) ) %&gt;% length() ## Hyper ~ DN # Hyper + DN aa2 &lt;- DMgene %&gt;% filter(Type==&quot;Hyper&quot;) %&gt;% pull(annotated_genes) %&gt;% intersect(DEG %&gt;% filter(Type %in% &quot;Down&quot;) %&gt;% pull(gene)) %&gt;% length() # Hyper + NC bb2 &lt;- DMgene %&gt;% filter(Type==&quot;Hyper&quot;) %&gt;% pull(annotated_genes) %&gt;% intersect(DEG %&gt;% filter(Type %in% &quot;NC&quot;) %&gt;% pull(gene) ) %&gt;% length() # NC + DN cc2 &lt;- DMgene %&gt;% filter(Type==&quot;NC&quot;) %&gt;% pull(annotated_genes) %&gt;% intersect(DEG %&gt;% filter(Type %in% &quot;Down&quot;) %&gt;% pull(gene) ) %&gt;% length() # NC + NC dd2 &lt;- DMgene %&gt;% filter(Type==&quot;NC&quot;) %&gt;% pull(annotated_genes) %&gt;% intersect( DEG %&gt;% filter(Type %in% &quot;NC&quot;) %&gt;% pull(gene)) %&gt;% length() ## Hyper ~ UP # Hyper + UP aa3 &lt;- DMgene %&gt;% filter(Type==&quot;Hyper&quot;) %&gt;% pull(annotated_genes) %&gt;% intersect(DEG %&gt;% filter(Type %in% &quot;Up&quot;) %&gt;% pull(gene)) %&gt;% length() # Hyper + NC bb3 &lt;- DMgene %&gt;% filter(Type==&quot;Hyper&quot;) %&gt;% pull(annotated_genes) %&gt;% intersect(DEG %&gt;% filter(Type %in% &quot;NC&quot;) %&gt;% pull(gene) ) %&gt;% length() # NC + UP cc3 &lt;- DMgene %&gt;% filter(Type==&quot;NC&quot;) %&gt;% pull(annotated_genes) %&gt;% intersect(DEG %&gt;% filter(Type %in% &quot;Up&quot;) %&gt;% pull(gene) ) %&gt;% length() # NC + NC dd3 &lt;- DMgene %&gt;% filter(Type==&quot;NC&quot;) %&gt;% pull(annotated_genes) %&gt;% intersect( DEG %&gt;% filter(Type %in% &quot;NC&quot;) %&gt;% pull(gene)) %&gt;% length() ## Hypo ~ DN # Hypo + DN aa4 &lt;- DMgene %&gt;% filter(Type==&quot;Hypo&quot;) %&gt;% pull(annotated_genes) %&gt;% intersect(DEG %&gt;% filter(Type %in% &quot;Down&quot;) %&gt;% pull(gene)) %&gt;% length() # Hyper + NC bb4 &lt;- DMgene %&gt;% filter(Type==&quot;Hypo&quot;) %&gt;% pull(annotated_genes) %&gt;% intersect(DEG %&gt;% filter(Type %in% &quot;NC&quot;) %&gt;% pull(gene) ) %&gt;% length() # NC + DN cc4 &lt;- DMgene %&gt;% filter(Type==&quot;NC&quot;) %&gt;% pull(annotated_genes) %&gt;% intersect(DEG %&gt;% filter(Type %in% &quot;Down&quot;) %&gt;% pull(gene) ) %&gt;% length() # NC + NC dd4 &lt;- DMgene %&gt;% filter(Type==&quot;NC&quot;) %&gt;% pull(annotated_genes) %&gt;% intersect( DEG %&gt;% filter(Type %in% &quot;NC&quot;) %&gt;% pull(gene)) %&gt;% length() # res Hypo_Up &lt;- fisher.test(matrix(c(aa1,bb1,cc1,dd1),ncol=2,nrow=2)) %&gt;% broom::tidy() %&gt;% mutate(A=aa1,B=bb1,C=cc1,D=dd1,Type=&quot;Hypo_Up&quot;) Hypo_DN&lt;- fisher.test(matrix(c(aa4,bb4,cc4,dd4),ncol=2,nrow=2)) %&gt;% broom::tidy() %&gt;% mutate(A=aa4,B=bb4,C=cc4,D=dd4,Type=&quot;Hypo_DN&quot;) Hyper_DN &lt;- fisher.test(matrix(c(aa2,bb2,cc2,dd2),ncol=2,nrow=2)) %&gt;% broom::tidy() %&gt;% mutate(A=aa2,B=bb2,C=cc2,D=dd2,Type=&quot;Hyper_DN&quot;) Hyper_UP &lt;- fisher.test(matrix(c(aa3,bb3,cc3,dd3),ncol=2,nrow=2)) %&gt;% broom::tidy() %&gt;% mutate(A=aa3,B=bb3,C=cc3,D=dd3,Type=&quot;Hyper_UP&quot;) res &lt;- rbind(Hypo_Up,Hypo_DN,Hyper_DN,Hyper_UP) }) names(DMEG) &lt;- id.methyl res_DMEG &lt;- do.call(rbind,DMEG) %&gt;% mutate(tissue=rep(id.methyl,each=5),logFDR=-log10(p.adjust(p.value,method=&quot;fdr&quot;,length(p.value)))) # 3. MHB (remove DMR) vs DEGs id.com &lt;- c(&quot;BRCA&quot;,&quot;COAD&quot;,&quot;ESCA&quot;,&quot;COADREAD&quot;,&quot;HNSC&quot;,&quot;LIHC&quot;,&quot;LUAD&quot;,&quot;LUSC&quot;,&quot;STES&quot;,&quot;THCA&quot;,&quot;PDAC&quot;,&quot;CESC&quot;) nonDM &lt;- lapply(id.com,function(x){ # 1.DMR test &lt;- HM450K_CGI_DMR[,x] colnames(mcols(test))&lt;-&quot;Type&quot; DMgene &lt;- subset(test) %&gt;% great(cores=10,&quot;msigdb:H&quot;, &quot;GREAT:hg19&quot;) %&gt;% getRegionGeneAssociations() %&gt;% as.data.frame() %&gt;% mutate(annotated_genes=lapply(annotated_genes,function(x){ x %&gt;% paste(collapse=&quot;,&quot;) }) %&gt;% do.call(rbind,.) %&gt;% as.character(), dist_to_TSS = lapply(dist_to_TSS,function(x){ x %&gt;% paste(collapse=&quot;,&quot;) }) %&gt;% do.call(rbind,.) %&gt;% as.character()) %&gt;% separate_rows(annotated_genes,dist_to_TSS,sep=&quot;,&quot;,convert=TRUE) %&gt;% as.data.frame() %&gt;% filter(abs(dist_to_TSS)&lt;=1000) %&gt;% ### restrict to promoter regions TSS+/- 1K group_by(annotated_genes) %&gt;% summarise(annotated_genes=annotated_genes,Type=paste0(unique(Type),collapse=&quot;,&quot;)) %&gt;% distinct() %&gt;% filter(!str_detect(Type,&quot;,&quot;)) NoDMG &lt;- DMgene %&gt;% filter(Type == &quot;NC&quot;) %&gt;% pull(annotated_genes) # 2.DEG if(x==&quot;PDAC&quot;){ Eid = &quot;PAAD&quot; }else { Eid = x } DEG &lt;- TCGA_DE_res %&gt;% dplyr::select(c(&quot;gene&quot;,Eid)) %&gt;% dplyr::rename(Type=2) %&gt;% filter(Type %in% c(&quot;Up&quot;,&quot;Down&quot;)) Exp_NC &lt;- TCGA_DE_res %&gt;% dplyr::select(c(&quot;gene&quot;,Eid)) %&gt;% dplyr::rename(Type=2) %&gt;% filter(Type %in% &quot;NC&quot;) # Non DMR + DEG nonDM.DEG &lt;- DEG %&gt;% filter(gene %in% NoDMG) # 3. MHB if(x==&quot;PDAC&quot;){ MHBid = &quot;PACA&quot; }else if(x==&quot;COADREAD&quot;) { MHBid = &quot;COAD&quot; }else if(x==&quot;LUSC&quot; | x ==&quot;LUAD&quot;){ MHBid = &quot;NSCLC&quot; }else if (x==&quot;STES&quot;) { MHBid = &quot;STAD&quot; }else{ MHBid = x } data &lt;- MHB.GR[[MHBid]] if (!is.null(data)){ MHGenes &lt;- data %&gt;% great(cores=10,&quot;msigdb:H&quot;, &quot;GREAT:hg19&quot;) %&gt;% getRegionGeneAssociations() %&gt;% as.data.frame() %&gt;% mutate(annotated_genes=lapply(annotated_genes,function(x){ x %&gt;% paste(collapse=&quot;,&quot;) }) %&gt;% do.call(rbind,.) %&gt;% as.character(), dist_to_TSS = lapply(dist_to_TSS,function(x){ x %&gt;% paste(collapse=&quot;,&quot;) }) %&gt;% do.call(rbind,.) %&gt;% as.character()) %&gt;% separate_rows(annotated_genes,dist_to_TSS,sep=&quot;,&quot;,convert=TRUE) %&gt;% as.data.frame() %&gt;% pull(annotated_genes) %&gt;% unique() # fisher test in NonDMR regions # MHB vs DEGs aa &lt;- intersect(MHGenes,nonDM.DEG %&gt;% pull(gene)) %&gt;% length() bb &lt;- intersect(MHGenes,NoDMG) %&gt;% intersect(Exp_NC %&gt;% pull(gene)) %&gt;% length() cc &lt;- setdiff(NoDMG,MHGenes) %&gt;% intersect(DEG %&gt;% pull(gene)) %&gt;% length() dd &lt;- setdiff(NoDMG,MHGenes) %&gt;% intersect(Exp_NC %&gt;% pull(gene)) %&gt;% length() ##genes res &lt;- intersect(MHGenes,nonDM.DEG %&gt;% pull(gene)) ##MHB vs Up aa1 &lt;- nonDM.DEG %&gt;% filter(gene %in% MHGenes,Type==&quot;Up&quot;) %&gt;% nrow() bb1 &lt;- intersect(MHGenes,NoDMG) %&gt;% intersect(Exp_NC %&gt;% pull(gene)) %&gt;% length() cc1&lt;- nonDM.DEG %&gt;% filter(!(gene %in% MHGenes),Type==&quot;Up&quot;) %&gt;% nrow() dd1 &lt;- setdiff(NoDMG,MHGenes) %&gt;% intersect(Exp_NC %&gt;% pull(gene)) %&gt;% length() ##genes res1 &lt;- nonDM.DEG %&gt;% filter(gene %in% MHGenes,Type==&quot;Up&quot;) %&gt;% pull(gene) # MHB vs DN aa2 &lt;- nonDM.DEG %&gt;% filter(gene %in% MHGenes,Type==&quot;Down&quot;) %&gt;% nrow() bb2 &lt;- intersect(MHGenes,NoDMG) %&gt;% intersect(Exp_NC %&gt;% pull(gene)) %&gt;% length() cc2 &lt;- nonDM.DEG %&gt;% filter(!(gene %in% MHGenes),Type==&quot;Down&quot;) %&gt;% nrow() dd2 &lt;- setdiff(NoDMG,MHGenes) %&gt;% intersect(Exp_NC %&gt;% pull(gene)) %&gt;% length() ##genes res2 &lt;- nonDM.DEG %&gt;% filter(gene %in% MHGenes,Type==&quot;Down&quot;) %&gt;% pull(gene) # UP vs DN (MHB genes) aa3 &lt;- nonDM.DEG %&gt;% filter(gene %in% MHGenes,Type==&quot;Up&quot;) %&gt;% nrow() bb3 &lt;- nonDM.DEG %&gt;% filter(gene %in% MHGenes,Type==&quot;Down&quot;) %&gt;% nrow() cc3 &lt;- nonDM.DEG %&gt;% filter(!(gene %in% MHGenes),Type==&quot;Up&quot;) %&gt;% nrow() dd3 &lt;- nonDM.DEG %&gt;% filter(!(gene %in% MHGenes),Type==&quot;Down&quot;) %&gt;% nrow() # genes res3 &lt;- nonDM.DEG %&gt;% filter(gene %in% MHGenes,Type==&quot;Down&quot;) %&gt;% pull(gene) signif1 &lt;- fisher.test(matrix(c(aa,bb,cc,dd),ncol=2,nrow=2)) %&gt;% broom::tidy() %&gt;% mutate(A=aa,B=bb,C=cc,D=dd,Type=&quot;NonDMR.MHB.DEG&quot;,NonDMR.MHB.DEG= paste0(res,collapse=&quot;,&quot;)) signif2 &lt;- fisher.test(matrix(c(aa1,bb1,cc1,dd1),ncol=2,nrow=2)) %&gt;% broom::tidy() %&gt;% mutate(A=aa1,B=bb1,C=cc1,D=dd1,Type=&quot;NonDMR.MHB.UP&quot;,NonDMR.MHB.DEG= paste0(res1,collapse=&quot;,&quot;)) signif3 &lt;- fisher.test(matrix(c(aa2,bb2,cc2,dd2),ncol=2,nrow=2)) %&gt;% broom::tidy() %&gt;% mutate(A=aa2,B=bb2,C=cc2,D=dd2,Type=&quot;NonDMR.MHB.DN&quot;,NonDMR.MHB.DEG= paste0(res2,collapse=&quot;,&quot;)) signif4 &lt;- fisher.test(matrix(c(bb3,aa3,dd3,cc3),ncol=2,nrow=2)) %&gt;% broom::tidy() %&gt;% mutate(A=aa3,B=bb3,C=cc3,D=dd3,Type=&quot;NonDMR.MHB.DN.UP&quot;,NonDMR.MHB.DEG= paste0(res3,collapse=&quot;,&quot;)) rbind(signif1,signif2,signif3,signif4) } }) names(nonDM) &lt;- id.com res_nonDM &lt;- do.call(rbind,nonDM) %&gt;% mutate(tissue=rep(id.com,each=4)) # PLOT library(patchwork) library(ggplot2) # DMRs vs DEGs pdf(file=&quot;Data/Figures/Fig5/Fig5.A.pdf&quot;,width=11,height=8) res1 &lt;- res_DMEG %&gt;% filter(Type!=&quot;Total&quot;) %&gt;% mutate(logFDR = ifelse(logFDR&gt;20,20,logFDR), DM = str_split_i(Type,&quot;_&quot;,i=1), DE = toupper(str_split_i(Type,&quot;_&quot;,i=2))) %&gt;% filter(tissue %in% id.com ) p1&lt;- ggplot(res1, aes(x=logFDR,y=fct_rev(tissue),fill=DE)) + geom_bar(stat=&quot;identity&quot;, position=position_dodge()) + scale_fill_brewer(palette=&quot;Set1&quot;,direction=-1) + geom_vline(aes(xintercept = 1.3),color=&quot;gray&quot;,linetype=&quot;dashed&quot;, size = 0.5)+ xlab(&#39;-log10(FDR)&#39;) + ylab(&quot; &quot;) + theme_classic() + theme(legend.position = &quot;top&quot;, axis.text = element_text(size=15,color=&quot;black&quot;), axis.title.x = element_text(size=20,color=&quot;black&quot;), axis.ticks.length=unit(0.2, &quot;cm&quot;) ) + facet_wrap(~DM,scale=&quot;free&quot;) print(p1) dev.off() # MHBs(nonDMR) vs DEGs pdf(file=&quot;Data/Figures/Fig5/Fig5.B.pdf&quot;,width=11,height=6) res3 &lt;- res_nonDM %&gt;% filter(Type==&quot;NonDMR.MHB.UP&quot; | Type==&quot;NonDMR.MHB.DN&quot;) %&gt;% mutate(logP=-log10(p.value), logFDR=-log10(p.adjust(p.value,method=&quot;fdr&quot;,length(p.value))), logFDR = ifelse(logFDR&gt;8,8,logFDR), DE = fct_inorder(str_split_i(Type,&quot;\\\\.&quot;,i=3)), signif = ifelse(logP&gt;1.3,&quot;1&quot;,&quot;0&quot;)) p3&lt;- ggplot(res3,aes(x=estimate,y=fct_rev(tissue),col=signif)) + geom_point(aes(size=4,col=signif),shape=18) + geom_errorbarh(aes(xmax = conf.high, xmin = conf.low), height = 0,size=1)+ scale_color_brewer(palette=&quot;Set1&quot;,direction=-1) + geom_vline(aes(xintercept = 1),color=&quot;gray&quot;,linetype=&quot;dashed&quot;, size = 0.5)+ scale_x_continuous(limits=c(0.1, 3.2), breaks = seq(0, 3.5, 0.5))+ xlab(&#39;Odds Ratio&#39;) + ylab(&quot; &quot;) + theme_classic() + theme(legend.position = &quot;top&quot;, axis.text = element_text(size=15,color=&quot;black&quot;), axis.title.x = element_text(size=20,color=&quot;black&quot;), axis.ticks.length=unit(0.2, &quot;cm&quot;) ) + facet_wrap(~DE,scale=&quot;free_y&quot;) print(p3) dev.off() 5.1: Fig5.A-B 5.2 (C). Pathway enrichment of MHB-associated genes in pan-cancer # Network-based data integration for prioritizing MHB-related genes in pan-cancer # Input: Log2FC &amp; FDR of MHB-related genes in pan-cancer between normal and tumor. library(PIL) library(openxlsx) # specify built-in data placeholder placeholder &lt;- &quot;http://www.comptransmed.pro/bigdata_ctm&quot; # load Preprocessed data and get summary data (2 column) ## RNA-seq : Pan-cancer RNA.files &lt;- list.files(pattern=&quot;_FC.txt&quot;) %&gt;% str_split_i(&quot;_&quot;,i=1) ls_df_res &lt;-lapply(RNA.files,function(x){ fread(paste0(x,&quot;_MHB_NonDMR_DEGs_FC.txt&quot;)) %&gt;% mutate(wFC=-log10(FDR)*abs(logFC)) %&gt;% select(V1,wFC) %&gt;% rename(gene=V1) %&gt;% arrange(-wFC) %&gt;% as_tibble() }) names(ls_df_res) &lt;- RNA.files # define high-quality protein interaction network: KEGG or STRING if(1){ network.customised &lt;- oDefineNet(network=&quot;KEGG&quot;, placeholder=placeholder) %&gt;% igraph::as.undirected() }else{ network.customised &lt;- oDefineNet(network=&quot;STRING_high&quot;, STRING.only=c(&quot;experimental_score&quot;, &quot;database_score&quot;), placeholder=placeholder) } # All known genes (primarily sourced from UCSC) guid &lt;- NULL if(1){ GR.Gene &lt;- oRDS(&quot;UCSC_knownGene&quot;, placeholder=placeholder, guid=guid) if(1){ gene_info &lt;- oRDS(&quot;org.Hs.eg&quot;,placeholder=placeholder, guid=guid)$info ind &lt;- match(names(GR.Gene), gene_info$Symbol) GR.Gene &lt;- GR.Gene[!is.na(ind)] } ## remove gene at chrX and chrY if(0){ df &lt;- as.data.frame(GR.Gene) %&gt;% as_tibble() ind &lt;- which(!(df$seqnames %in% c(&#39;chrX&#39;,&#39;chrY&#39;))) GR.Gene &lt;- GR.Gene[ind] } ## restricted to GR.Gene filter the node network.customised &lt;- network.customised %&gt;% oNetInduce(nodes_query=names(GR.Gene), largest.comp=F) } # ls_pNode: prepare predictors ls_pNode &lt;- pbapply::pblapply(ls_df_res, function(x){ pNode &lt;- x %&gt;% as.data.frame() %&gt;% oPierAnno(list_pNode=NULL, network.customised = network.customised, placeholder=placeholder, guid=guid) }) # do prioritisation dTarget &lt;- oPierMatrix(ls_pNode, displayBy=&quot;pvalue&quot;, aggregateBy=&quot;fishers&quot;, placeholder=placeholder, guid=guid) # dT: restricted to GR.Gene and rating&gt;0 df_GR_gene &lt;- GR.Gene %&gt;% as.data.frame() %&gt;% as_tibble() dT &lt;- dTarget dT$priority &lt;- dTarget$priority %&gt;% filter(rating&gt;0) %&gt;% semi_join(df_GR_gene, by=c(&#39;name&#39;=&#39;Symbol&#39;)) %&gt;% dplyr::mutate(rank=seq(n())) dT$predictor &lt;- dTarget$predictor[dT$priority %&gt;% pull(name),] # output dT$priority %&gt;% openxlsx::write.xlsx(&quot;PI_Priority_mhb.xlsx&quot;) # 1. load MHB.DEG.NonDMR genes rna_path &lt;- &quot;TCGA/Exp/res/&quot; rna.files &lt;- list.files(rna_path,pattern=&quot;TCGA_DEG_&quot;) rna.log2fc &lt;- lapply(rna.files,function(x){fread(paste0(rna_path,x)) %&gt;% dplyr::select(1,3,4) %&gt;% mutate(DE=ifelse(FDR&lt;=0.05 &amp; logFC &gt;=1,&quot;up&quot;, ifelse(FDR&lt;=0.05 &amp; logFC &lt;= -1, &quot;down&quot;,&quot;NC&quot;)))}) names(rna.log2fc) &lt;- rna.files %&gt;% str_split_i(&quot;\\\\.&quot;,i=1) %&gt;% str_split_i(&quot;_&quot;,i=3) # MHB_NonDMR.DEG MHB_NonDMR.DEG &lt;- read_gmt(&quot;TCGA_Pathway/DEG.MHB.NonDM.gmt&quot;) MHB_NonDMR.DEG.FC &lt;- lapply(names(MHB_NonDMR.DEG),function(x){ if(x==&quot;PDAC&quot;){ y=&quot;PAAD&quot; }else{ y=x } rna.log2fc[[y]] %&gt;% filter(V1 %in% MHB_NonDMR.DEG[[x]]) %&gt;% mutate(DE=ifelse(logFC&gt;0,&quot;up&quot;,&quot;down&quot;),tissue=x) }) names(MHB_NonDMR.DEG.FC) &lt;- names(MHB_NonDMR.DEG) %&gt;% str_replace_all(&quot;PDAC&quot;,&quot;PAAD&quot;) # 2. Load pi ranking results seed.genes &lt;- read.xlsx(&quot;PI_Priority_mhb.xlsx&quot;) cancer_type &lt;- names(seed.genes)[-c(1:5)] network_genes &lt;- lapply(cancer_type,function(x){ seed.genes %&gt;% select(name,rank,x) %&gt;% rename_with(~c(&quot;name&quot;,&quot;rank&quot;,&quot;seed&quot;)) %&gt;% filter(seed==1) }) names(network_genes) &lt;- cancer_type %&gt;% str_replace_all(&quot;PDAC&quot;,&quot;PAAD&quot;) # RNA + NoMHB rna.log2fc.pi &lt;- MHB_NonDMR.DEG.FC[names(network_genes)] rna.log2fc.pi.rank &lt;- lapply(names(network_genes),function(x){ rna.log2fc.pi[[x]] %&gt;% dplyr::rename(name=V1) %&gt;% inner_join(network_genes[[x]],by=&quot;name&quot;) %&gt;% arrange(rank) }) names(rna.log2fc.pi.rank) &lt;- names(network_genes) res &lt;- do.call(rbind,rna.log2fc.pi.rank) %&gt;% as.data.frame() %&gt;% group_by(name,rank) %&gt;% summarise(tissue_count = n(), tissue = paste0(tissue,collapse=&quot;,&quot;), FC = paste0(DE,collapse=&quot;,&quot;), DE = paste0(unique(DE),collapse=&quot;,&quot;)) %&gt;% arrange(rank,desc(tissue_count)) fwrite(res,file=&quot;DEG.MHB.NoDMR.Pi.ranking.txt&quot;,sep=&quot;\\t&quot;,quote= F,row.names=F) # showing top 500 up_rank &lt;- res %&gt;% filter(DE==&quot;up&quot;) %&gt;% head(500) down_rank &lt;- res %&gt;% filter(DE==&quot;down&quot;) %&gt;% head(500) library(ggplot2) library(patchwork) pdf(file=&quot;NoDMR.MHB.DEG.Pi.ranking.pdf&quot;,width=8,height=6) p1 &lt;- ggplot(up_rank,aes(x=fct_inorder(name),y=tissue_count)) + geom_bar(stat=&quot;identity&quot;,fill=&quot;firebrick&quot;) + scale_y_continuous(expand=c(0,0),limits=c(0,12)) + labs(x=&quot;&quot;,y=&quot;Number of tissue&quot;) + theme_classic() + theme(axis.text.x = element_text(angle = 90)) p2 &lt;- ggplot(down_rank,aes(x=fct_inorder(name),y=tissue_count)) + geom_bar(stat=&quot;identity&quot;,fill=&quot;steelblue&quot;) + scale_y_continuous(expand=c(0,0),limits=c(0,12)) + labs(x=&quot;&quot;,y=&quot;Number of tissue&quot;) + theme_classic() + theme(axis.text.x = element_text(angle = 90)) p&lt;- wrap_plots(list(p1,p2),ncol=1,nrow=2) + plot_layout(guides = &#39;collect&#39;) print(p) dev.off() 5.2: Fig5.S # 3. Enrichment library(clusterProfiler) library(msigdbr) ## Here we use C2 &amp; H gene sets as an example: m_t2g &lt;- msigdbr(species = &quot;Homo sapiens&quot;, category = &quot;C2&quot;) %&gt;% filter(!(gs_subcat %in% c(&quot;CGP&quot;,&quot;CP&quot;))) %&gt;% dplyr::select(gs_name, entrez_gene) m_t2g1 &lt;- msigdbr(species = &quot;Homo sapiens&quot;, category = &quot;H&quot;) %&gt;% dplyr::select(gs_name, entrez_gene) # merging m_t2g &lt;- rbind(m_t2g1,m_t2g) # convert : the existence of genes more than 6 tissues. up_freq &lt;- res %&gt;% filter(DE==&quot;up&quot;) %&gt;% filter(tissue_count&gt;=6) genes = bitr(up_freq$name, fromType=&quot;SYMBOL&quot;, toType=&quot;ENTREZID&quot;, OrgDb=&quot;org.Hs.eg.db&quot;) universe = read_gmt(&quot;KEGG_genes.gmt&quot;, from=&quot;SYMBOL&quot;, to = &quot;ENTREZ&quot;, orgdb=&quot;org.Hs.eg.db&quot;) em &lt;- enricher(genes$ENTREZID, TERM2GENE=m_t2g,pAdjustMethod= &quot;BH&quot;,universe=universe$KEGG,) %&gt;% as.data.frame() p &lt;- em %&gt;% filter(ID %in% c(&quot;HALLMARK_E2F_TARGETS&quot;,&quot;HALLMARK_G2M_CHECKPOINT&quot;,&quot;PID_MYC_ACTIV_PATHWAY&quot;)) %&gt;% ggplot(aes(x=-log10(p.adjust),y=fct_rev(ID))) + geom_bar(stat=&quot;identity&quot;,fill=&quot;orange&quot;) + scale_x_continuous(expand=c(0,0),position=&quot;top&quot;, limits=c(0,25), breaks=seq(0,25,5)) + scale_y_discrete(labels= function(x) str_wrap(x,width=45)) + labs(y=&quot;&quot;,x=&quot;-log10(FDR)&quot;) + geom_vline(aes(xintercept = 2),color=&quot;gray&quot;,linetype=&quot;dashed&quot;, size = 0.5)+ theme_bw() + theme(panel.background=element_blank(), panel.grid=element_blank()) ggsave(p,file=&quot;Data/Figures/Fig5/Fig5.C1.pdf&quot;,width=5,height=2) # 4. LogFC and delta beta value of target genes # RNA MHB_NonDMR.DEG ## G2M Genes.G2M &lt;- em %&gt;% filter(ID ==&quot;HALLMARK_G2M_CHECKPOINT&quot; ) %&gt;% pull(geneID) %&gt;% str_split_1(&quot;/&quot;) %&gt;% bitr(fromType=&quot;ENTREZID&quot;,toType=&quot;SYMBOL&quot;,OrgDb=&quot;org.Hs.eg.db&quot;) %&gt;% pull(SYMBOL) %&gt;% c(&quot;MYC&quot;) Genes.MYC &lt;- em %&gt;% filter(ID ==&quot;PID_MYC_ACTIV_PATHWAY&quot; ) %&gt;% pull(geneID) %&gt;% str_split_1(&quot;/&quot;) %&gt;% bitr(fromType=&quot;ENTREZID&quot;,toType=&quot;SYMBOL&quot;,OrgDb=&quot;org.Hs.eg.db&quot;) %&gt;% pull(SYMBOL) rna.log2FC.G2M &lt;- lapply(names(MHB_NonDMR.DEG.FC),function(x){ MHB_NonDMR.DEG.FC[[x]] %&gt;% filter(V1 %in% Genes.G2M) %&gt;% mutate(tissue=x) }) names(rna.log2FC.G2M) &lt;- names(MHB_NonDMR.DEG.FC) ## MYC rna.log2FC.MYC &lt;- lapply(names(MHB_NonDMR.DEG.FC),function(x){ MHB_NonDMR.DEG.FC[[x]] %&gt;% filter(V1 %in% Genes.MYC) %&gt;% mutate(tissue=x) }) names(rna.log2FC.MYC) &lt;- names(MHB_NonDMR.DEG.FC) # DNA methylation MHB_NonDMR.DEG load(&quot;TCGA/DNAm_Array/TCGA_TSS_UD1K_Methylation.RData&quot;) Mregion &lt;- fread(&quot;Data/Processed_data/GREATv4.genes.promoter_UD1000.hg19.bed&quot;) %&gt;% dplyr::rename(&quot;name&quot;=&quot;V5&quot;) %&gt;% toGRanges() MP.TvN &lt;- pbapply::pblapply(names(rList),function(x){ ##id sample &lt;- rList[[x]] %&gt;% colnames() %&gt;% str_split_i(&quot;-&quot;,i=4) sample &lt;- ifelse(str_detect(sample,&quot;11&quot;),&quot;Normal&quot;,&quot;Tumor&quot;) ## data table data &lt;- rList[[x]] %&gt;% as.data.frame() names(data) &lt;- paste0(names(data),&quot;_&quot;,sample) data %&gt;% summarise(MP.T = rowMeans(across(contains(&quot;Tumor&quot;)),na.rm=T), MP.N = rowMeans(across(contains(&quot;Normal&quot;)),na.rm=T)) %&gt;% dplyr::select(MP.T,MP.N) %&gt;% mutate(SYMBOL = Mregion$name) }) names(MP.TvN) &lt;- names(rList) ## G2M DNAme.G2M &lt;- lapply(names(MHB_NonDMR.DEG.FC),function(x){ MP.TvN[[x]] %&gt;% filter(SYMBOL %in% rna.log2FC.G2M[[x]]$V1 ) %&gt;% mutate(tissue=x) }) names(DNAme.G2M) &lt;- names(MHB_NonDMR.DEG.FC) ## MYC DNAme.MYC &lt;- lapply(names(MHB_NonDMR.DEG.FC),function(x){ MP.TvN[[x]] %&gt;% filter(SYMBOL %in% rna.log2FC.MYC[[x]]$V1 ) %&gt;% mutate(tissue=x) }) names(DNAme.MYC) &lt;- names(MHB_NonDMR.DEG.FC) ### RES res_logfc.g2m &lt;- do.call(rbind,rna.log2FC.G2M) %&gt;% as.data.frame() %&gt;% mutate(V1=factor(V1,levels=seed.genes$name)) res_logfc.myc &lt;- do.call(rbind,rna.log2FC.MYC) %&gt;% as.data.frame() %&gt;% mutate(V1=factor(V1,levels=seed.genes$name)) ## res_DNAme.g2m &lt;- do.call(rbind,DNAme.G2M) %&gt;% as.data.frame() %&gt;% mutate(SYMBOL=factor(SYMBOL,levels=seed.genes$name)) res_DNAme.myc &lt;- do.call(rbind,DNAme.MYC) %&gt;% as.data.frame() %&gt;% mutate(SYMBOL=factor(SYMBOL,levels=seed.genes$name)) # PLOT ## RNA p1 &lt;- res_logfc.g2m %&gt;% ggplot(aes(x=V1,y=fct_rev(tissue))) + geom_tile(aes(fill=logFC)) + scale_fill_gradientn(colours = c(&quot;darkblue&quot;,&quot;white&quot;,&quot;darkred&quot;), limits=c(-8, 8), breaks = seq(-8, 8, 4)) + theme_bw() + theme( axis.text.x = element_text(angle = 90,hjust=1,vjust=0.5), panel.background =element_blank()) p12 &lt;- res_logfc.myc %&gt;% ggplot(aes(x=V1,y=fct_rev(tissue))) + geom_tile(aes(fill=logFC)) + scale_fill_gradientn(colours = c(&quot;darkblue&quot;,&quot;white&quot;,&quot;darkred&quot;), limits=c(-8, 8), breaks = seq(-8, 8, 4)) + theme_bw() + theme(axis.text.x = element_text(angle = 90,hjust=1,vjust=0.5), panel.background =element_blank()) ## DNAme data1 &lt;- res_DNAme.g2m %&gt;% mutate(delta = MP.T - MP.N,tissue=fct_rev(tissue)) p21 &lt;- data1 %&gt;% ggplot(aes(x=SYMBOL,y=tissue)) + geom_tile(aes(fill=delta)) + scale_fill_gradientn(colours = c(&#39;#7b3294&#39;,&#39;grey&#39;,&#39;#008837&#39;), limits=c(-0.2, 0.2), breaks = seq(-0.2, 0.2, 0.1)) + theme_bw() + theme(axis.text.x = element_text(angle = 90,hjust=1,vjust=0.5), panel.background =element_blank()) data2 &lt;- res_DNAme.myc %&gt;% mutate(delta = MP.T - MP.N,tissue=fct_rev(tissue)) p22 &lt;- data2 %&gt;% ggplot(aes(x=SYMBOL,y=tissue)) + geom_tile(aes(fill=delta)) + scale_fill_gradientn(colours = c(&#39;#7b3294&#39;,&#39;grey&#39;,&#39;#008837&#39;), limits=c(-0.2, 0.2), breaks = seq(-0.2, 0.2, 0.1)) + theme_bw() + theme(axis.text.x = element_text(angle = 90,hjust=1,vjust=0.5), panel.background =element_blank()) library(patchwork) p&lt;- wrap_plots(list(p1,p12,p21,p22),ncol=2,nrow=2) + plot_layout(guides = &#39;collect&#39;) ggsave(p,file=&quot;Data/Figures/Fig5/Fig5.C.pdf&quot;,width=7.5,height=6) 5.3: Fig5.C 5.3 (E). KEGG Pathway crosstalk analysis for pan-cancer # define KEGG-merged gene interaction network ig.KEGG.category &lt;- oRDS(&#39;ig.KEGG.category&#39;, placeholder=placeholder, guid=guid) vec_categories &lt;- ig.KEGG.category %&gt;% pull(category) %&gt;% str_replace(&#39; &#39;,&#39;&#39;) %&gt;% str_c(&#39;KEGGc_&#39;,.) ls_ig &lt;- lapply(vec_categories, function(network){ g &lt;- oDefineNet(network=network, placeholder=placeholder, guid=guid) }) ig &lt;- oCombineNet(ls_ig, combineBy=&#39;union&#39;, attrBy=&quot;intersect&quot;, verbose=TRUE) ig2 &lt;- oNetInduce(ig, nodes_query=V(ig)$name, largest.comp=T) %&gt;% as.undirected() # crosstalk identification subg &lt;- oPierSubnet(dT, network.customised=ig2, priority.quantile= 0.1, subnet.size=50, placeholder=placeholder, guid=guid) df_subg &lt;- dT$priority %&gt;% inner_join(oIG2TB(subg,&#39;nodes&#39;) %&gt;% dplyr::select(name), by=&#39;name&#39;) df_subg %&gt;% openxlsx::write.xlsx(&#39;PI_subg_nodes_mhb.xlsx&#39;) # output plot: oVisEvidenceAdv subg &lt;- subg %&gt;% oLayout(c(&quot;layout_with_kk&quot;,&quot;graphlayouts.layout_with_stress&quot;)[2]) gp_rating_evidence &lt;- oVisEvidenceAdv(dT, nodes=V(subg)$name, g=subg, node.info=&quot;smart&quot;, colormap=&quot;spectral.top&quot;, node.color.alpha=0.8, node.size.range=7, edge.color=&#39;black&#39;, edge.color.alpha=0.2, edge.curve=0.01, node.label.size=2.5, node.label.color=&#39;black&#39;, node.label.alpha=0.8, node.label.padding=0.1, node.label.arrow=0, node.label.force=1) ggsave(&quot;Data/Figures/Fig5/Fig5.E.pdf&quot;, gp_rating_evidence, width=9, height=6.5) 5.4: Fig5.E "],["figure-6.html", " 6 Figure 6 6.1 (A-B). Aging associate with the MHB 6.2 (C). Aging associated mhb in TCGA dataset 6.3 (D-M) Aging associated MHB functions in Early Cancer Detection (HM450K)", " 6 Figure 6 Figure 6. Characterizing of aging-associated MHBs in precancerous lesions. (A) Identification of aging-associated MHBs. Only MHBs that were covered by Illumina 450K methylation array were considered. (B) Aging-associated MHBs were further assigned to positive or negative groups. (C) Feature level boxplots of 8,154 MHBs that were positively associated with aging, calculated as a feature per cancer or normal tissue for the 17 TCGA cancer types. The Wilcoxon Rank Sum Test was used to compare the distribution of methylation in cancer and normal samples. Significance was observed in all cancer types except for KIRP and THCA. (D-E) DNA Methylation of aging-associated MHBs in non-invasive breast cancer and normal breast tissue. DCIS, ductal carcinoma in situ. (F) Methylation of the aging MHBs during the progression of CRC. Colorectal cancer, CRC. (G) Methylation of the aging MHBs during the progression of pancreatic cancer. Pancreatic carcinoma, PACA. (H) Methylation of the signature in precancerous lesions of esophageal cancer. Barrett’s esophagus, BE. Low-grade dysplasia, LGD. High-grade dysplasia, HGD. Esophageal adenocarcinoma, EAC. (I) Methylation of the signature in precancerous lesions of Gastric Cancer. Intestinal metaplasia, IM. STAD, Stomach adenocarcinoma. (J) Methylation of the signature during the progression of lung cancer. (K) Methylation of the signature during the progression of liver cancer. Hepatocellular carcinoma, HCC. (L) Methylation of the signature during the progression of cholangiocarcinoma. Cholangiocarcinoma, CCA. Intraductal papillary, IPNB. Intraductal tubulopapillary, IPNT. (M). Methylation of the signature during the progression of MM. Multiple myeloma, MM. Monoclonal gammopathy of undetermined significance, MGUS. Plasma cell leukemia, PCL. 6.1 (A-B). Aging associate with the MHB library(&quot;GenomicRanges&quot;) load(&quot;RnBeads_450K_hg19_Probes_GR.RData&quot;) RnBeads_450K_hg19_GR = RnBeads_450K_hg19_GR[RnBeads_450K_hg19_GR$QC] Tx = read.csv(file = &quot;Data/Processed_data/GSE87571_tableS1_rev.csv&quot;) T1 = Tx[(Tx$P.value &lt; 10^-7) &amp; (Tx$beta &gt; 0), ] T2 = Tx[(Tx$P.value &lt; 10^-7) &amp; (Tx$beta &lt; 0), ] uGR = RnBeads_450K_hg19_GR[names(RnBeads_450K_hg19_GR) %in% as.character(T1$IlmnID)] dGR = RnBeads_450K_hg19_GR[names(RnBeads_450K_hg19_GR) %in% as.character(T2$IlmnID)] # MHB Tx = read.table(file = &quot;Data/Processed_data/MHB/MHB_11_cancers_clusters.bed&quot;, row.names = NULL, header = FALSE, sep = &quot;\\t&quot;) mhb = GRanges(paste0(Tx[,1], &quot;:&quot;, Tx[,2], &quot;-&quot;, Tx[,3]),) mhb = mhb[countOverlaps(mhb, RnBeads_450K_hg19_GR, type = &quot;any&quot;, ignore.strand = TRUE) &gt; 0] ## Pos mhb_aging = mhb[countOverlaps(mhb, uGR, type = &quot;any&quot;, ignore.strand = TRUE) &gt; 0] ## Neg mhb_aging_neg = mhb[countOverlaps(mhb, dGR, type = &quot;any&quot;, ignore.strand = TRUE) &gt; 0] # PLOT library(&quot;ggvenn&quot;) library(RColorBrewer) myCol &lt;- brewer.pal(3, &quot;Set1&quot;) HM450K_MHB = paste(mhb[1:length(mhb)],sep=&quot;:&quot;) MHB_Aging = c(paste(mhb_aging[1:length(mhb_aging)],sep=&quot;:&quot;),paste(mhb_aging_neg[1:length(mhb_aging_neg)],sep=&quot;:&quot;)) MHB_Aging[duplicated(MHB_Aging)] x &lt;-list(&quot;HM450K_MHB&quot; = HM450K_MHB,&quot;MHB_Aging&quot; = MHB_Aging) # Aging associated probes with MHB pdf(file=&quot;Data/Figures/Fig6/Fig6.A.pdf&quot;,height=4.5,width=4.5) p&lt;-ggvenn(x, fill_color = myCol,stroke_size = 0.5, set_name_size = 4) print(p) dev.off() # Aging MHB positive/negative Percent pdf(file=&quot;Data/Figures/Fig6/Fig6.B.pdf&quot;,height=3,width=2) data = data.frame(Tag=rep(&quot;Aging_Associated_MHBs&quot;,2), Type = c(&quot;Pos&quot;,&quot;Neg&quot;),Num=c(4001,394)) p&lt;-ggplot(data,aes(x=Tag,y=Num,fill=Type)) + geom_bar(stat=&quot;identity&quot;,position=&quot;fill&quot;) + scale_fill_manual(values=c(&quot;#377EB8&quot;,&quot;#E41A1C&quot;)) + scale_y_continuous(expand=c(0,0),breaks=c(0,0.25,0.5,0.75,1), labels=100*c(0,0.25,0.5,0.75,1))+ labs(x=&quot;&quot;,y=&quot;Percent (%)&quot;) + theme_bw()+ theme(panel.background = element_blank(), panel.grid = element_blank(), plot.title = element_text(hjust=0.5))+ guides(fill=guide_legend(title=NULL)) print(p) dev.off() 6.1: Fig6.A-B 6.2 (C). Aging associated mhb in TCGA dataset load(&quot;RnBeads_450K_hg19_Probes_GR.RData&quot;) load(&quot;TCGA_450K_sampleT.RData&quot;) mean0 = function(z) mean(z, na.rm = TRUE) RnBeads_450K_hg19_GR = RnBeads_450K_hg19_GR[RnBeads_450K_hg19_GR$QC] # Load the mhb with positive aging load(&quot;RData/mhb_aging_pos.RData&quot;) x = findOverlaps(RnBeads_450K_hg19_GR, mhb_aging, type = &quot;any&quot;, ignore.strand = TRUE) cg = names(RnBeads_450K_hg19_GR[queryHits(x)]) id = as.character(mhb_aging)[subjectHits(x)] # select the TCGA Cancer types Num(Normal) &gt;10 cancer_type = c() for (i in names(TCGA_450K_sampleT)){ mx &lt;- nrow(TCGA_450K_sampleT[[i]] %&gt;% filter(grepl(&quot;N&quot;,TypeID))) if ( mx &gt;= 10 ){ cancer_type = c(cancer_type,i) } } # running all TCGA cancer types path = &quot;raw_RData&quot; kTypes = cancer_type Ns = length(kTypes) for(i in 1:Ns){ Tag = kTypes[i] cat(&quot;Running&quot;, Tag, &quot;\\n&quot;) load(paste0(path, &quot;/&quot;, Tag, &quot;.RData&quot;)) MM = get(Tag)[cg, ] Tx = aggregate(MM, by = list(factor(id)), FUN=&quot;mean0&quot;) res = as.matrix(Tx[, -1]) sampleT = TCGA_450K_sampleT[[Tag]][colnames(res), ] sampleT$median = apply(res, 2, function(z) median(z, na.rm = TRUE)) if(i == 1) mergedT = sampleT else mergedT = rbind(mergedT, sampleT) rm(list = Tag) } # PLOT status = rep(&quot;Cancer&quot;, nrow(mergedT)) status[mergedT$TypeID == &quot;NT&quot;] = &quot;Normal&quot; mergedT$status = status summaryT = aggregate(mergedT$median[mergedT$status == &quot;Cancer&quot;], by = list(mergedT$cancer[mergedT$status == &quot;Cancer&quot;]),FUN=&#39;median&#39;) orderName = as.character(summaryT[order(-summaryT[,2]), 1]) mergedT$cancer = factor(as.character(mergedT$cancer), levels = orderName) pdf(file = &quot;Data/Figures/Fig6/Fig6.C.pdf&quot;,width = 6, height = 3) p &lt;- ggplot(mergedT, aes(x = cancer, y = median, color = status)) p &lt;- p + theme_bw() + labs(x = &quot;&quot;, y = &quot;MHB-level methylation&quot;, title = &quot;&quot;) + ylim(0, 1) p &lt;- p + geom_boxplot(width = 0.6, outlier.shape=NA) + theme(plot.title = element_text(hjust = 0.5)) # p &lt;- p + geom_jitter(aes(colour = status), position = position_jitter(w = 0.1, h = 0.05), size = 1, alpha = 0.4) p &lt;- p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) p &lt;- p + theme(axis.text.x = element_text(angle = 45, hjust = 1)) # p &lt;- p + scale_colour_manual(values = c(&quot;Cancer&quot; = &quot;#dd1c77&quot;, &quot;Normal&quot; = &quot;#3182bd&quot;)) p &lt;- p + scale_colour_manual(values = c(&quot;Cancer&quot; = &quot;#E41A1C&quot;, &quot;Normal&quot; = &quot;#377EB8&quot;)) print(p) dev.off() 6.2: Fig6.C 6.3 (D-M) Aging associated MHB functions in Early Cancer Detection (HM450K) # Here, we present the DNA methylation of aging-assoicated MHBs in HM450K data, the EPIC, HM27K, RRBS datasets are as follow. # HM450K probe load(&quot;RnBeads_450K_hg19_Probes_GR.RData&quot;) RnBeads_450K_hg19_GR = RnBeads_450K_hg19_GR[RnBeads_450K_hg19_GR$HumanMethylation450 &amp; RnBeads_450K_hg19_GR$QC] mean0 = function(z) mean(z, na.rm = TRUE) # load MHB aging-pos load(&quot;Aging/Aging_mhb/RData/mhb_aging_pos.RData&quot;) # Data processing Me_Aging &lt;- function(x) { a = row.names(x) b = names(RnBeads_450K_hg19_GR) cab = intersect(a,b) RnBeads_450K_hg19_GR = RnBeads_450K_hg19_GR[cab,] # Aging+MHB index = findOverlaps(RnBeads_450K_hg19_GR, mhb_aging, type = &quot;any&quot;, ignore.strand = TRUE) cg = names(RnBeads_450K_hg19_GR[queryHits(index)]) id = as.character(mhb_aging)[subjectHits(index)] # Methyl MM = x[cg, ] Tx = aggregate(MM, by = list(factor(id)), FUN=&quot;mean0&quot;) res = as.matrix(Tx[, -1]) return(res) } # plot function plot&lt;-function(data){ p&lt;-ggplot(data,aes(x=Groups,y=res,colour=Groups))+ theme_bw() + labs(x = &quot;&quot;, y = &quot;MHB-level methylation&quot;, title = &quot;&quot;) + ylim(0, 1) + geom_boxplot(width = 0.6, outlier.shape=NA) + theme(plot.title = element_text(hjust = 0.5)) + geom_jitter(aes(colour = Groups), position = position_jitter(w = 0.1, h = 0.05), size = 1, alpha = 0.4) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = &quot;none&quot;) + scale_colour_brewer(palette = &quot;Set1&quot;) + facet_wrap(~set) return(p) } # load Dataset: Colorectal cancer (GSE48684) load(&quot;GSE/GSE48684.RData&quot;) GSE48684_Methyl = MeM GSE48684_info = meta ## normal-H ==&gt; normal-C ==&gt; adenoma ==&gt; cancer ## normal_H normal_C adenoma cancer ## 17 24 42 64 names(GSE48684_info) = gsub(&quot;[: ]&quot;,&quot;_&quot;,names(GSE48684_info)) GSE48684_info$disease_status_ch1=gsub(&quot;-&quot;,&quot;_&quot;,GSE48684_info$disease_status_ch1) ## Aging_Methyl GSE48684_AM = Me_Aging(GSE48684_Methyl) GSE48684_AM = GSE48684_AM[,rownames(GSE48684_info)] data_GSE48684 = GSE48684_info[&quot;disease_status_ch1&quot;];names(data_GSE48684) = &quot;Groups&quot; data_GSE48684$Groups = factor(data_GSE48684$Groups,level=c(&quot;normal_H&quot;,&quot;normal_C&quot;,&quot;adenoma&quot;,&quot;cancer&quot;)) data_GSE48684$res = apply(GSE48684_AM,2,function(x) median(x,na.rm=TRUE)) data_GSE48684$set = &quot;GSE48684&quot; # rm rm(list=c(&quot;GSE48684_Methyl&quot;,&quot;GSE48684_info&quot;,&quot;GSE48684_AM&quot;,&quot;MeM&quot;,&quot;meta&quot;)) # PLOT p1&lt;-plot(data_GSE48684) # load Dataset: Liver cancer (GSE99036) load(&quot;GSE/GSE99036.RData&quot;) GSE99036_Methyl = MeM GSE99036_info = meta ## disease stage : liver cirrhosis (LC,n=6), dysplastic nodules (DN,n=11), ## early HCC (eHCC, n=9), and progressed HCC (HCC,n=6) names(GSE99036_info) = gsub(&quot;[: ]&quot;,&quot;_&quot;,names(GSE99036_info)) GSE99036_info$disease_stage_ch1=gsub(&quot;-&quot;,&quot;_&quot;,GSE99036_info$disease_stage_ch1) # Aging_Methyl GSE99036_AM = Me_Aging(GSE99036_Methyl) GSE99036_AM = GSE99036_AM[,rownames(GSE99036_info)] data = GSE99036_info[&quot;disease_stage_ch1&quot;];names(data) = &quot;Groups&quot; data$Groups = factor(data$Groups,level=c(&quot;LC&quot;,&quot;DN_high&quot;,&quot;eHCC&quot;,&quot;HCC&quot;)) data$res = apply(GSE99036_AM,2,function(x) median(x,na.rm=TRUE)) data$set = &quot;GSE99036&quot; # rm rm(list=c(&quot;GSE99036_Methyl&quot;,&quot;GSE99036_info&quot;,&quot;GSE99036_AM&quot;,&quot;MeM&quot;,&quot;meta&quot;)) # PLOT p2&lt;-plot(data) # load Dataset: Gastric Cancer (GSE103186) load(&quot;GSE/GSE103186.RData&quot;) GSE103186_Methyl = MeM GSE103186_info = meta ## intestinal_metaplasia_biopsy_from_gastric_antrum(76),intestinal_metaplasia_biopsy_from_gastric_body(23) ## intestinal_metaplasia_biopsy_from_gastric_cardia (9),mild_intestinal_metaplasia_biopsy_from_gastric_antrum (22) ## normal_biopsy_from_gastric_antrum (39),normal_biopsy_from_gastric_body(11),normal_biopsy_from_gastric_cardia(11) names(GSE103186_info) = gsub(&quot;[: ]&quot;,&quot;_&quot;,names(GSE103186_info)) GSE103186_info$tissue_ch1=gsub(&quot; &quot;,&quot;_&quot;,GSE103186_info$tissue_ch1) GSE103186_info$Type[grepl(&quot;^intestinal_metaplasia_biopsy&quot;,GSE103186_info$tissue_ch1)]&lt;-&quot;IM&quot; GSE103186_info$Type[grepl(&quot;^mild_intestinal_metaplasia_biopsy&quot;,GSE103186_info$tissue_ch1)]&lt;-&quot;DIM&quot; GSE103186_info$Type[grepl(&quot;^normal_biopsy&quot;,GSE103186_info$tissue_ch1)]&lt;-&quot;NT&quot; # Aging_Methyl GSE103186_AM = Me_Aging(GSE103186_Methyl) GSE103186_AM = GSE103186_AM[,rownames(GSE103186_info)] data = GSE103186_info[&quot;Type&quot;];names(data) = &quot;Groups&quot; data$Groups = factor(data$Groups,level=c(&quot;NT&quot;,&quot;DIM&quot;,&quot;IM&quot;)) data$res = apply(GSE103186_AM,2,function(x) median(x,na.rm=TRUE)) data$set = &quot;GSE103186&quot; # rm rm(list=c(&quot;GSE103186_Methyl&quot;,&quot;GSE103186_info&quot;,&quot;GSE103186_AM&quot;,&quot;MeM&quot;,&quot;meta&quot;)) # PLOT p3&lt;-plot(data) # load Dataset: Lung Cancer (GSE108123) load(&quot;GSE/GSE108123.RData&quot;) GSE108123_Methyl = MeM GSE108123_info = meta ## Lung carcinoma-in-situ (CIS) lesions are the pre-malignant precursor to lung squamous cell carcinoma ## Control (33) ===&gt; Regressive (38) ====&gt; Progressive (18) names(GSE108123_info) = gsub(&quot;[: ]&quot;,&quot;_&quot;,names(GSE108123_info)) # Aging_Methyl GSE108123_AM = Me_Aging(GSE108123_Methyl) GSE108123_AM = GSE108123_AM[,rownames(GSE108123_info)] data = GSE108123_info[&quot;lesion_outcome_ch1&quot;];names(data) = &quot;Groups&quot; data$Groups = factor(data$Groups,level=c(&quot;Control&quot;,&quot;Regressive&quot;,&quot;Progressive&quot;)) data$res = apply(GSE108123_AM,2,function(x) median(x,na.rm=TRUE)) data$set = &quot;GSE108123&quot; # rm rm(list=c(&quot;GSE108123_Methyl&quot;,&quot;GSE108123_info&quot;,&quot;GSE108123_AM&quot;,&quot;MeM&quot;,&quot;meta&quot;)) # PLOT p4&lt;-plot(data) # load Dataset: Breast Cancer (GSE66313) load(&quot;GSE/GSE66313.RData&quot;) GSE66313_Methyl = MeM GSE66313_info = meta names(GSE66313_info) = gsub(&quot;[: ]&quot;,&quot;_&quot;,names(GSE66313_info)) GSE66313_info$tissue_ch1=gsub(&quot;Adjacent-&quot;,&quot;&quot;,GSE66313_info$tissue_ch1) # Aging_Methyl GSE66313_AM = Me_Aging(GSE66313_Methyl) GSE66313_AM = GSE66313_AM[,rownames(GSE66313_info)] data = GSE66313_info[&quot;tissue_ch1&quot;];names(data) = &quot;Groups&quot; data$Groups = factor(data$Groups,level=c(&quot;Normal&quot;,&quot;DCIS&quot;)) data$res = apply(GSE66313_AM,2,function(x) median(x,na.rm=TRUE)) data$set = &quot;GSE66313&quot; # rm rm(list=c(&quot;GSE66313_Methyl&quot;,&quot;GSE66313_info&quot;,&quot;GSE66313_AM&quot;,&quot;MeM&quot;,&quot;meta&quot;)) # PLOT p5&lt;-plot(data) # load Dataset: Esophageal Cancer (GSE89181) load(&quot;GSE/GSE89181.RData&quot;) GSE89181_Methyl = MeM GSE89181_info = meta ####SQ(11)---&gt; BE(21) ---&gt; LGD(18) ---&gt; HGD (18) ---&gt; EAC(24) names(GSE89181_info) = gsub(&quot;:&quot;,&quot;_&quot;,names(GSE89181_info)) GSE89181_info$histology_ch1=gsub(&quot;HGD\\\\/Ca&quot;,&quot;HGD&quot;,GSE89181_info$histology_ch1) GSE89181_info = GSE89181_info %&gt;% filter(histology_ch1 %in% c(&quot;BE&quot;,&quot;EAC&quot;,&quot;HGD&quot;,&quot;LGD&quot;,&quot;SQ&quot;)) # Aging_Methyl GSE89181_AM = Me_Aging(GSE89181_Methyl) GSE89181_AM = GSE89181_AM[,rownames(GSE89181_info)] data = GSE89181_info[&quot;histology_ch1&quot;];names(data) = &quot;Groups&quot; data$Groups = factor(data$Groups,level=c(&quot;SQ&quot;,&quot;BE&quot;,&quot;LGD&quot;,&quot;HGD&quot;,&quot;EAC&quot;)) data$res = apply(GSE89181_AM,2,function(x) median(x,na.rm=TRUE)) data$set = &quot;GSE89181&quot; # rm rm(list=c(&quot;GSE89181_Methyl&quot;,&quot;GSE89181_info&quot;,&quot;GSE89181_AM&quot;,&quot;MeM&quot;,&quot;meta&quot;)) # PLOT p6&lt;-plot(data) library(patchwork) p&lt;- wrap_plots(list(p1,p2,p3,p4,p5,p6),ncol=3,nrow=2) + plot_layout(guides = &#39;collect&#39;) ggsave(p,file=&quot;Data/Figures/Fig6/Fig6.D-M.pdf&quot;,width=7.5,height=6) 6.3: Fig6.D-M (HM450K) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
